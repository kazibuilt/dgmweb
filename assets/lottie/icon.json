{"v":"5.8.1","fr":30,"ip":0,"op":300,"w":1080,"h":1080,"nm":"KEYFRAMELogo-Brand-WEb-loop 3","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":3,"nm":"Nul 25","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"t":20,"s":[0]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"t":40,"s":[-45]},{"i":{"x":[0],"y":[1]},"o":{"x":[0.572],"y":[0]},"t":61,"s":[-26]},{"i":{"x":[0.999],"y":[1]},"o":{"x":[0.001],"y":[0]},"t":95,"s":[0]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"t":270,"s":[5]},{"t":299,"s":[0]}],"ix":10},"p":{"a":0,"k":[540,540,0],"ix":2,"l":2},"a":{"a":0,"k":[50,50,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":350,"st":37,"bm":0},{"ddd":0,"ind":2,"ty":3,"nm":"Calque de forme 5: Tracé 1 [1.1.0]","cl":"1 0","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-139,-361,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar srcLayer = thisComp.layer('Calque de forme 5');\nvar srcPath = srcLayer('ADBE Root Vectors Group')(1)('ADBE Vectors Group')(1)('ADBE Vector Shape').points()[0];\n$bm_rt = srcLayer.toComp(srcPath);"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":3,"nm":"Calque de forme 5: Tracé 1 [1.1.1]","cl":"1 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-266,33,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar srcLayer = thisComp.layer('Calque de forme 5');\nvar srcPath = srcLayer('ADBE Root Vectors Group')(1)('ADBE Vectors Group')(1)('ADBE Vector Shape').points()[1];\n$bm_rt = srcLayer.toComp(srcPath);"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":3,"nm":"Calque de forme 5: Tracé 1 [1.1.2]","cl":"1 2","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[125,159,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar srcLayer = thisComp.layer('Calque de forme 5');\nvar srcPath = srcLayer('ADBE Root Vectors Group')(1)('ADBE Vectors Group')(1)('ADBE Vector Shape').points()[2];\n$bm_rt = srcLayer.toComp(srcPath);"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":3,"nm":"Calque de forme 5: Tracé 1 [1.1.3]","cl":"1 3","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[257,-232,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar srcLayer = thisComp.layer('Calque de forme 5');\nvar srcPath = srcLayer('ADBE Root Vectors Group')(1)('ADBE Vectors Group')(1)('ADBE Vector Shape').points()[3];\n$bm_rt = srcLayer.toComp(srcPath);"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Calque de forme 5","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"t":20,"s":[-18]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"t":40,"s":[-85]},{"i":{"x":[0],"y":[1]},"o":{"x":[0.572],"y":[0]},"t":61,"s":[107]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"t":95,"s":[-1]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"t":270,"s":[-1]},{"t":299,"s":[-18]}],"ix":10},"p":{"a":1,"k":[{"i":{"x":0.1,"y":1},"o":{"x":0.9,"y":0},"t":0,"s":[50,50,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.1,"y":1},"o":{"x":0.9,"y":0},"t":20,"s":[-2,111,0],"to":[0,0,0],"ti":[-25.658,-10.112,0]},{"i":{"x":0.1,"y":1},"o":{"x":0.9,"y":0},"t":40,"s":[196.569,21.626,0],"to":[25.658,10.112,0],"ti":[7.436,-25.008,0]},{"i":{"x":0,"y":1},"o":{"x":0.572,"y":0},"t":61,"s":[151.95,171.672,0],"to":[0,0,0],"ti":[0.003,0.198,0]},{"i":{"x":0.1,"y":1},"o":{"x":0.9,"y":0},"t":95,"s":[151.95,171.672,0],"to":[-0.004,-0.261,0],"ti":[0,0,0]},{"i":{"x":0.1,"y":1},"o":{"x":0.9,"y":0},"t":270,"s":[151.95,171.672,0],"to":[0,0,0],"ti":[0,0,0]},{"t":299,"s":[50,50,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-4.5,-101,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Calque de forme 1: Tracé 1 [1.1.0]","np":3,"mn":"ADBE Layer Control","ix":1,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":6,"ix":1}}]},{"ty":5,"nm":"Calque de forme 1: Tracé 1 [1.1.1]","np":3,"mn":"ADBE Layer Control","ix":2,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":6,"ix":1}}]},{"ty":5,"nm":"Calque de forme 1: Tracé 1 [1.1.2]","np":3,"mn":"ADBE Layer Control","ix":3,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":6,"ix":1}}]},{"ty":5,"nm":"Calque de forme 1: Tracé 1 [1.1.3]","np":3,"mn":"ADBE Layer Control","ix":4,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":6,"ix":1}}]},{"ty":5,"nm":"Calque de forme 2: Tracé 1 [1.1.0]","np":3,"mn":"ADBE Layer Control","ix":5,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":6,"ix":1}}]},{"ty":5,"nm":"Calque de forme 2: Tracé 1 [1.1.1]","np":3,"mn":"ADBE Layer Control","ix":6,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":6,"ix":1}}]},{"ty":5,"nm":"Calque de forme 2: Tracé 1 [1.1.2]","np":3,"mn":"ADBE Layer Control","ix":7,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":6,"ix":1}}]},{"ty":5,"nm":"Calque de forme 2: Tracé 1 [1.1.3]","np":3,"mn":"ADBE Layer Control","ix":8,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":6,"ix":1}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-139,-361],[-266,33],[125,159],[257,-232]],"c":true},"ix":2,"x":"var $bm_rt;\nvar nullLayerNames = [\n    'Calque de forme 2: Tracé 1 [1.1.0]',\n    'Calque de forme 2: Tracé 1 [1.1.1]',\n    'Calque de forme 2: Tracé 1 [1.1.2]',\n    'Calque de forme 2: Tracé 1 [1.1.3]'\n];\nvar origPath = thisProperty;\nvar origPoints = origPath.points();\nvar origInTang = origPath.inTangents();\nvar origOutTang = origPath.outTangents();\nvar getNullLayers = [];\nfor (var i = 0, il = nullLayerNames.length; i < il; i++) {\n    try {\n        getNullLayers.push(effect(nullLayerNames[i])('ADBE Layer Control-0001'));\n    } catch (err) {\n        getNullLayers.push(null);\n    }\n}\nfor (var i = 0, il = getNullLayers.length; i < il; i++) {\n    if (getNullLayers[i] != null && getNullLayers[i].index != thisLayer.index) {\n        origPoints[i] = fromCompToSurface(getNullLayers[i].toComp(getNullLayers[i].anchorPoint));\n    }\n}\n$bm_rt = createPath(origPoints, origInTang, origOutTang, origPath.isClosed());"},"nm":"Tracé 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0,0,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":20,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Contour 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Forme 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":350,"st":31,"bm":0},{"ddd":0,"ind":7,"ty":3,"nm":"Calque de forme 4: Tracé 1 [1.1.0]","cl":"1 0","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-139,-361,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar srcLayer = thisComp.layer('Calque de forme 4');\nvar srcPath = srcLayer('ADBE Root Vectors Group')(1)('ADBE Vectors Group')(1)('ADBE Vector Shape').points()[0];\n$bm_rt = srcLayer.toComp(srcPath);"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"Chain 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[0,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Connect Layers Pro - Styles","np":152,"mn":"MB ConnectLayersProStyles","ix":1,"en":1,"ef":[{"ty":6,"nm":"Stroke","mn":"MB ConnectLayersProStyles-0001","ix":1,"v":0},{"ty":2,"nm":"Stroke Color","mn":"MB ConnectLayersProStyles-0002","ix":2,"v":{"a":0,"k":[0,0,0,0],"ix":2}},{"ty":0,"nm":"Stroke Opacity","mn":"MB ConnectLayersProStyles-0003","ix":3,"v":{"a":0,"k":100,"ix":3}},{"ty":7,"nm":"Opacity From Distance","mn":"MB ConnectLayersProStyles-0004","ix":4,"v":{"a":0,"k":0,"ix":4}},{"ty":0,"nm":"Near (px)","mn":"MB ConnectLayersProStyles-0005","ix":5,"v":{"a":0,"k":100,"ix":5}},{"ty":0,"nm":"Far (px)","mn":"MB ConnectLayersProStyles-0006","ix":6,"v":{"a":0,"k":400,"ix":6}},{"ty":7,"nm":"Reverse Behavior","mn":"MB ConnectLayersProStyles-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":0,"nm":"Stroke Width","mn":"MB ConnectLayersProStyles-0008","ix":8,"v":{"a":0,"k":20,"ix":8}},{"ty":7,"nm":"Line Cap","mn":"MB ConnectLayersProStyles-0009","ix":9,"v":{"a":0,"k":1,"ix":9}},{"ty":7,"nm":"Line Join","mn":"MB ConnectLayersProStyles-0010","ix":10,"v":{"a":0,"k":1,"ix":10}},{"ty":0,"nm":"Miter Limit","mn":"MB ConnectLayersProStyles-0011","ix":11,"v":{"a":0,"k":4,"ix":11}},{"ty":7,"nm":"Enable Gradient","mn":"MB ConnectLayersProStyles-0012","ix":12,"v":{"a":0,"k":0,"ix":12}},{"ty":7,"nm":"Gradient Type","mn":"MB ConnectLayersProStyles-0013","ix":13,"v":{"a":0,"k":1,"ix":13}},{"ty":0,"nm":"Highlight Length","mn":"MB ConnectLayersProStyles-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Highlight Angle","mn":"MB ConnectLayersProStyles-0015","ix":15,"v":{"a":0,"k":0,"ix":15}},{"ty":6,"nm":"Gradient Colors","mn":"MB ConnectLayersProStyles-0016","ix":16,"v":0},{"ty":0,"nm":"Gradient Scale (%)","mn":"MB ConnectLayersProStyles-0017","ix":17,"v":{"a":0,"k":100,"ix":17}},{"ty":7,"nm":"Reverse Path","mn":"MB ConnectLayersProStyles-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0019","ix":19,"v":0},{"ty":6,"nm":"Fill","mn":"MB ConnectLayersProStyles-0020","ix":20,"v":0},{"ty":7,"nm":"Enable Fill","mn":"MB ConnectLayersProStyles-0021","ix":21,"v":{"a":0,"k":0,"ix":21}},{"ty":7,"nm":"Fill Palette","mn":"MB ConnectLayersProStyles-0022","ix":22,"v":{"a":0,"k":1,"ix":22}},{"ty":2,"nm":"Fill Color","mn":"MB ConnectLayersProStyles-0023","ix":23,"v":{"a":0,"k":[0.78431372549,0.549019607843,0.972549019608,1],"ix":23}},{"ty":2,"nm":"End Color","mn":"MB ConnectLayersProStyles-0024","ix":24,"v":{"a":0,"k":[0.121568627451,0,0.247058823529,1],"ix":24}},{"ty":0,"nm":"Saturation","mn":"MB ConnectLayersProStyles-0025","ix":25,"v":{"a":0,"k":50,"ix":25}},{"ty":0,"nm":"Luminance","mn":"MB ConnectLayersProStyles-0026","ix":26,"v":{"a":0,"k":50,"ix":26}},{"ty":0,"nm":"Random Seed","mn":"MB ConnectLayersProStyles-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":10,"nm":"Color Layer","mn":"MB ConnectLayersProStyles-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":0,"nm":"Fill Opacity","mn":"MB ConnectLayersProStyles-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":7,"nm":"Opacity From Distance","mn":"MB ConnectLayersProStyles-0030","ix":30,"v":{"a":0,"k":0,"ix":30}},{"ty":0,"nm":"Near (px)","mn":"MB ConnectLayersProStyles-0031","ix":31,"v":{"a":0,"k":100,"ix":31}},{"ty":0,"nm":"Far (px)","mn":"MB ConnectLayersProStyles-0032","ix":32,"v":{"a":0,"k":400,"ix":32}},{"ty":7,"nm":"Reverse Behavior","mn":"MB ConnectLayersProStyles-0033","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":7,"nm":"Enable Gradient","mn":"MB ConnectLayersProStyles-0034","ix":34,"v":{"a":0,"k":0,"ix":34}},{"ty":7,"nm":"Gradient Type","mn":"MB ConnectLayersProStyles-0035","ix":35,"v":{"a":0,"k":1,"ix":35}},{"ty":0,"nm":"Highlight Length","mn":"MB ConnectLayersProStyles-0036","ix":36,"v":{"a":0,"k":0,"ix":36}},{"ty":0,"nm":"Highlight Angle","mn":"MB ConnectLayersProStyles-0037","ix":37,"v":{"a":0,"k":0,"ix":37}},{"ty":6,"nm":"Gradient Colors","mn":"MB ConnectLayersProStyles-0038","ix":38,"v":0},{"ty":0,"nm":"Gradient Scale (%)","mn":"MB ConnectLayersProStyles-0039","ix":39,"v":{"a":0,"k":100,"ix":39}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0040","ix":40,"v":0},{},{"ty":6,"nm":"Enable Modules","mn":"MB ConnectLayersProStyles-0042","ix":42,"v":0},{"ty":7,"nm":"Arrowheads","mn":"MB ConnectLayersProStyles-0043","ix":43,"v":{"a":0,"k":0,"ix":43}},{"ty":7,"nm":"Curviness","mn":"MB ConnectLayersProStyles-0044","ix":44,"v":{"a":0,"k":0,"ix":44}},{"ty":7,"nm":"Dashes","mn":"MB ConnectLayersProStyles-0045","ix":45,"v":{"a":0,"k":0,"ix":45}},{"ty":7,"nm":"Offset","mn":"MB ConnectLayersProStyles-0046","ix":46,"v":{"a":0,"k":0,"ix":46}},{"ty":7,"nm":"Repeater","mn":"MB ConnectLayersProStyles-0047","ix":47,"v":{"a":0,"k":0,"ix":47}},{"ty":7,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0048","ix":48,"v":{"a":0,"k":0,"ix":48}},{"ty":7,"nm":"Trim","mn":"MB ConnectLayersProStyles-0049","ix":49,"v":{"a":0,"k":0,"ix":49}},{"ty":7,"nm":"Twist","mn":"MB ConnectLayersProStyles-0050","ix":50,"v":{"a":0,"k":0,"ix":50}},{"ty":7,"nm":"Wiggle","mn":"MB ConnectLayersProStyles-0051","ix":51,"v":{"a":0,"k":0,"ix":51}},{"ty":7,"nm":"Zig Zag","mn":"MB ConnectLayersProStyles-0052","ix":52,"v":{"a":0,"k":0,"ix":52}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0053","ix":53,"v":0},{"ty":6,"nm":"Arrowheads","mn":"MB ConnectLayersProStyles-0054","ix":54,"v":0},{"ty":7,"nm":"Start","mn":"MB ConnectLayersProStyles-0055","ix":55,"v":{"a":0,"k":1,"ix":55}},{"ty":7,"nm":"End","mn":"MB ConnectLayersProStyles-0056","ix":56,"v":{"a":0,"k":1,"ix":56}},{"ty":2,"nm":"Stroke Color","mn":"MB ConnectLayersProStyles-0057","ix":57,"v":{"a":0,"k":[1,1,1,1],"ix":57}},{"ty":0,"nm":"Stroke Opacity","mn":"MB ConnectLayersProStyles-0058","ix":58,"v":{"a":0,"k":100,"ix":58}},{"ty":0,"nm":"Stroke Width","mn":"MB ConnectLayersProStyles-0059","ix":59,"v":{"a":0,"k":0,"ix":59}},{"ty":2,"nm":"Fill Color","mn":"MB ConnectLayersProStyles-0060","ix":60,"v":{"a":0,"k":[1,1,1,1],"ix":60}},{"ty":0,"nm":"Fill Opacity","mn":"MB ConnectLayersProStyles-0061","ix":61,"v":{"a":0,"k":100,"ix":61}},{"ty":7,"nm":"Opacity from Path","mn":"MB ConnectLayersProStyles-0062","ix":62,"v":{"a":0,"k":1,"ix":62}},{"ty":0,"nm":"Circle/Square Size","mn":"MB ConnectLayersProStyles-0063","ix":63,"v":{"a":0,"k":15,"ix":63}},{"ty":0,"nm":"Triangle Scale","mn":"MB ConnectLayersProStyles-0064","ix":64,"v":{"a":0,"k":100,"ix":64}},{"ty":0,"nm":"Triangle Length","mn":"MB ConnectLayersProStyles-0065","ix":65,"v":{"a":0,"k":40,"ix":65}},{"ty":0,"nm":"Triangle Width","mn":"MB ConnectLayersProStyles-0066","ix":66,"v":{"a":0,"k":20,"ix":66}},{"ty":0,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0067","ix":67,"v":{"a":0,"k":0,"ix":67}},{"ty":6,"nm":"Customization","mn":"MB ConnectLayersProStyles-0068","ix":68,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0069","ix":69,"v":0},{"ty":6,"nm":"Curviness","mn":"MB ConnectLayersProStyles-0070","ix":70,"v":0},{"ty":7,"nm":"Function","mn":"MB ConnectLayersProStyles-0071","ix":71,"v":{"a":0,"k":1,"ix":71}},{"ty":7,"nm":"Flip Direction","mn":"MB ConnectLayersProStyles-0072","ix":72,"v":{"a":0,"k":0,"ix":72}},{"ty":0,"nm":"Tension","mn":"MB ConnectLayersProStyles-0073","ix":73,"v":{"a":0,"k":33.333,"ix":73}},{"ty":7,"nm":"Preset","mn":"MB ConnectLayersProStyles-0074","ix":74,"v":{"a":0,"k":1,"ix":74}},{"ty":7,"nm":"Preset","mn":"MB ConnectLayersProStyles-0075","ix":75,"v":{"a":0,"k":1,"ix":75}},{"ty":0,"nm":"Stiffness","mn":"MB ConnectLayersProStyles-0076","ix":76,"v":{"a":0,"k":100,"ix":76}},{"ty":0,"nm":"Damping","mn":"MB ConnectLayersProStyles-0077","ix":77,"v":{"a":0,"k":50,"ix":77}},{"ty":0,"nm":"Max Tangent Length","mn":"MB ConnectLayersProStyles-0078","ix":78,"v":{"a":0,"k":33.333,"ix":78}},{"ty":0,"nm":"Start Tangent X","mn":"MB ConnectLayersProStyles-0079","ix":79,"v":{"a":0,"k":0,"ix":79}},{"ty":0,"nm":"Start Tangent Y","mn":"MB ConnectLayersProStyles-0080","ix":80,"v":{"a":0,"k":0,"ix":80}},{"ty":0,"nm":"End Tangent X","mn":"MB ConnectLayersProStyles-0081","ix":81,"v":{"a":0,"k":0,"ix":81}},{"ty":0,"nm":"End Tangent Y","mn":"MB ConnectLayersProStyles-0082","ix":82,"v":{"a":0,"k":0,"ix":82}},{"ty":0,"nm":"Stiffness","mn":"MB ConnectLayersProStyles-0083","ix":83,"v":{"a":0,"k":50,"ix":83}},{"ty":0,"nm":"Solver Steps","mn":"MB ConnectLayersProStyles-0084","ix":84,"v":{"a":0,"k":5,"ix":84}},{"ty":0,"nm":"Subsegments","mn":"MB ConnectLayersProStyles-0085","ix":85,"v":{"a":0,"k":10,"ix":85}},{"ty":0,"nm":"Gravity","mn":"MB ConnectLayersProStyles-0086","ix":86,"v":{"a":0,"k":0,"ix":86}},{"ty":0,"nm":"Dynamics Start Frame","mn":"MB ConnectLayersProStyles-0087","ix":87,"v":{"a":0,"k":0,"ix":87}},{"ty":0,"nm":"Precision","mn":"MB ConnectLayersProStyles-0088","ix":88,"v":{"a":0,"k":15,"ix":88}},{"ty":0,"nm":"Angle (3D only)","mn":"MB ConnectLayersProStyles-0089","ix":89,"v":{"a":0,"k":45,"ix":89}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0090","ix":90,"v":0},{"ty":6,"nm":"Dashes","mn":"MB ConnectLayersProStyles-0091","ix":91,"v":0},{"ty":0,"nm":"Dash","mn":"MB ConnectLayersProStyles-0092","ix":92,"v":{"a":0,"k":10,"ix":92}},{"ty":0,"nm":"Gap","mn":"MB ConnectLayersProStyles-0093","ix":93,"v":{"a":0,"k":10,"ix":93}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0094","ix":94,"v":{"a":0,"k":0,"ix":94}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0095","ix":95,"v":0},{"ty":6,"nm":"Offset","mn":"MB ConnectLayersProStyles-0096","ix":96,"v":0},{"ty":0,"nm":"Amount","mn":"MB ConnectLayersProStyles-0097","ix":97,"v":{"a":0,"k":0,"ix":97}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0098","ix":98,"v":0},{"ty":6,"nm":"Repeater","mn":"MB ConnectLayersProStyles-0099","ix":99,"v":0},{"ty":0,"nm":"Copies","mn":"MB ConnectLayersProStyles-0100","ix":100,"v":{"a":0,"k":3,"ix":100}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0101","ix":101,"v":{"a":0,"k":0,"ix":101}},{"ty":7,"nm":"Symmetric Offset","mn":"MB ConnectLayersProStyles-0102","ix":102,"v":{"a":0,"k":1,"ix":102}},{"ty":6,"nm":"Transform: Repeater","mn":"MB ConnectLayersProStyles-0103","ix":103,"v":0},{"ty":0,"nm":"Anchor Point X","mn":"MB ConnectLayersProStyles-0104","ix":104,"v":{"a":0,"k":0,"ix":104}},{"ty":0,"nm":"Anchor Point Y","mn":"MB ConnectLayersProStyles-1104","ix":105,"v":{"a":0,"k":0,"ix":105}},{"ty":7,"nm":"Center Anchor","mn":"MB ConnectLayersProStyles-0106","ix":106,"v":{"a":0,"k":1,"ix":106}},{"ty":0,"nm":"Position Offset","mn":"MB ConnectLayersProStyles-0107","ix":107,"v":{"a":0,"k":0,"ix":107}},{"ty":0,"nm":"Position X","mn":"MB ConnectLayersProStyles-0108","ix":108,"v":{"a":0,"k":0,"ix":108}},{"ty":0,"nm":"Position Y","mn":"MB ConnectLayersProStyles-0109","ix":109,"v":{"a":0,"k":0,"ix":109}},{"ty":0,"nm":"Scale","mn":"MB ConnectLayersProStyles-0110","ix":110,"v":{"a":0,"k":100,"ix":110}},{"ty":0,"nm":"Rotation","mn":"MB ConnectLayersProStyles-0111","ix":111,"v":{"a":0,"k":0,"ix":111}},{"ty":0,"nm":"Start Opacity","mn":"MB ConnectLayersProStyles-0112","ix":112,"v":{"a":0,"k":100,"ix":112}},{"ty":0,"nm":"End Opacity","mn":"MB ConnectLayersProStyles-0113","ix":113,"v":{"a":0,"k":100,"ix":113}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0114","ix":114,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0115","ix":115,"v":0},{"ty":6,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0116","ix":116,"v":0},{"ty":0,"nm":"Radius","mn":"MB ConnectLayersProStyles-0117","ix":117,"v":{"a":0,"k":10,"ix":117}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0118","ix":118,"v":0},{"ty":6,"nm":"Trim","mn":"MB ConnectLayersProStyles-0119","ix":119,"v":0},{"ty":0,"nm":"Start","mn":"MB ConnectLayersProStyles-0120","ix":120,"v":{"a":0,"k":0,"ix":120}},{"ty":0,"nm":"End","mn":"MB ConnectLayersProStyles-0121","ix":121,"v":{"a":0,"k":100,"ix":121}},{"ty":0,"nm":"Both Ends","mn":"MB ConnectLayersProStyles-0122","ix":122,"v":{"a":0,"k":0,"ix":122}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0123","ix":123,"v":{"a":0,"k":0,"ix":123}},{"ty":7,"nm":"Trim Multiple Shapes","mn":"MB ConnectLayersProStyles-0124","ix":124,"v":{"a":0,"k":1,"ix":124}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0125","ix":125,"v":0},{"ty":6,"nm":"Twist","mn":"MB ConnectLayersProStyles-0126","ix":126,"v":0},{"ty":0,"nm":"Angle","mn":"MB ConnectLayersProStyles-0127","ix":127,"v":{"a":0,"k":10,"ix":127}},{"ty":0,"nm":"Center X","mn":"MB ConnectLayersProStyles-0128","ix":128,"v":{"a":0,"k":0,"ix":128}},{"ty":0,"nm":"Center Y","mn":"MB ConnectLayersProStyles-0129","ix":129,"v":{"a":0,"k":0,"ix":129}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0130","ix":130,"v":0},{"ty":6,"nm":"Wiggle","mn":"MB ConnectLayersProStyles-0131","ix":131,"v":0},{"ty":0,"nm":"Size","mn":"MB ConnectLayersProStyles-0132","ix":132,"v":{"a":0,"k":10,"ix":132}},{"ty":0,"nm":"Detail","mn":"MB ConnectLayersProStyles-0133","ix":133,"v":{"a":0,"k":10,"ix":133}},{"ty":7,"nm":"Points","mn":"MB ConnectLayersProStyles-0134","ix":134,"v":{"a":0,"k":1,"ix":134}},{"ty":0,"nm":"Wiggles/Second","mn":"MB ConnectLayersProStyles-0135","ix":135,"v":{"a":0,"k":2,"ix":135}},{"ty":0,"nm":"Correlation","mn":"MB ConnectLayersProStyles-0136","ix":136,"v":{"a":0,"k":50,"ix":136}},{"ty":0,"nm":"Temporal Phase","mn":"MB ConnectLayersProStyles-0137","ix":137,"v":{"a":0,"k":0,"ix":137}},{"ty":0,"nm":"Spatial Phase","mn":"MB ConnectLayersProStyles-0138","ix":138,"v":{"a":0,"k":0,"ix":138}},{"ty":0,"nm":"Random Seed","mn":"MB ConnectLayersProStyles-0139","ix":139,"v":{"a":0,"k":0,"ix":139}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0140","ix":140,"v":0},{"ty":6,"nm":"Zig Zag","mn":"MB ConnectLayersProStyles-0141","ix":141,"v":0},{"ty":0,"nm":"Size","mn":"MB ConnectLayersProStyles-0142","ix":142,"v":{"a":0,"k":5,"ix":142}},{"ty":0,"nm":"Ridges per segment","mn":"MB ConnectLayersProStyles-0143","ix":143,"v":{"a":0,"k":10,"ix":143}},{"ty":7,"nm":"Points","mn":"MB ConnectLayersProStyles-0144","ix":144,"v":{"a":0,"k":1,"ix":144}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0145","ix":145,"v":0},{"ty":6,"nm":"Assistant","mn":"MB ConnectLayersProStyles-0146","ix":146,"v":0},{"ty":6,"nm":"Path Expressions","mn":"MB ConnectLayersProStyles-0147","ix":147,"v":0},{"ty":6,"nm":"Style Expressions","mn":"MB ConnectLayersProStyles-0148","ix":148,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0149","ix":149,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0150","ix":150,"v":0}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[331.738,334.288],[331.738,334.288]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[331.685,334.35],[331.811,334.224]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":2,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[331.496,334.573],[332.07,333.994]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":3,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[328.027,332.102],[329.415,330.702]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":4,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[327.732,332.49],[330.409,329.792]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":5,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[327.049,333.689],[331.636,329.064]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":6,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[325.501,334.44],[332.865,327.016]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":7,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[323.663,336.698],[335.079,325.191]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":8,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[321.274,339.701],[338.93,321.901]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":9,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[316.699,345.178],[345.402,316.242]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[302.364,361.006],[363.739,299.631]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":11,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[289.124,378.177],[383.297,282.613]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":12,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[284.078,383.532],[389.422,277.331]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":13,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[281.815,386.751],[393.4,274.259]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":14,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[279.727,388.76],[395.363,272.185]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":15,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[278.678,389.263],[396.465,271.263]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":16,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[277.87,390.211],[397.944,269.909]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":17,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[277.451,391.474],[398.937,269.249]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":18,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[276.856,392.503],[399.282,269.082]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":19,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[276.791,391.976],[399.666,268.102]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[276.738,393.038],[399.738,269.038]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":21,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[276.56,392.408],[399.235,268.399]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":22,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[275.731,393.624],[397.091,269.585]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":23,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[274.557,396.018],[394.185,271.923]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":24,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[273.836,400.273],[390.303,276.099]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[270.986,405.118],[382.712,280.847]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":26,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[267.437,413.233],[372.181,288.864]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":27,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[264.216,425.949],[358.466,301.591]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[260.547,446.186],[338.084,322.211]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":29,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[258.142,482.004],[305.209,359.104]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[297.665,588.873],[236.53,494.162]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[391.347,664.609],[210.34,643.948]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":32,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[433.303,678.181],[211.905,695.949]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":33,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[458.951,682.707],[214.894,725.324]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":34,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[476.421,684.463],[217.519,744.319]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":35,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[488.826,685.207],[219.532,757.211]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":36,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[497.698,685.606],[220.965,766.04]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":37,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[503.897,685.914],[221.918,771.952]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":38,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[507.947,686.182],[222.498,775.663]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":39,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[510.175,686.382],[222.796,777.659]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[510.86,686.455],[222.887,778.262]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":41,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[510.067,686.007],[222.587,777.466]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":42,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[507.503,684.546],[221.625,774.872]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":43,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[502.847,681.845],[219.925,770.075]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":44,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[495.695,677.592],[217.439,762.498]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":45,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[485.488,671.314],[214.195,751.289]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":46,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[471.346,662.084],[210.398,735.121]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":47,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[452.022,647.751],[206.68,711.784]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":48,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[426.207,623.445],[204.857,677.216]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":49,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[393.824,576.66],[210.921,622.524]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":50,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[372.762,460.622],[251.57,518.584]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":51,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[608.878,253.748],[500.938,425.488]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":52,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[756.599,281.61],[592.53,470.748]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":53,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[822.87,320.91],[626.563,506.325]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":54,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[860.097,353.16],[643.362,531.993]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":55,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[883.072,378.102],[652.636,550.638]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":56,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[897.927,396.907],[658.056,564.179]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":57,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[907.702,410.695],[661.314,573.87]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":58,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[914.067,420.375],[663.277,580.564]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":59,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[917.998,426.655],[664.418,584.863]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[920.091,430.091],[665.001,587.209]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[920.728,431.149],[665.175,587.93]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":62,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[920.469,430.896],[665.075,587.277]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":63,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[919.618,430.07],[664.754,585.135]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":64,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[918.035,428.554],[664.181,581.189]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":65,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[915.51,426.19],[663.323,575]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":66,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[911.726,422.765],[662.131,565.949]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":67,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[906.171,417.978],[660.514,553.115]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[897.967,411.383],[658.282,535.045]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":69,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[885.456,402.295],[655.011,509.253]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":70,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[865.132,389.649],[649.69,471.033]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":71,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[828.924,372.349],[639.617,411.65]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":72,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[770.472,352.017],[627.351,328.767]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":73,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[700.719,342.667],[600.639,259.151]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":74,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[660.762,351.457],[580.934,217.186]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":75,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[629.497,356.296],[570.823,200.885]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":76,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[606.045,361.642],[561.769,185.459]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":77,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[587.708,366.871],[554.618,174.613]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":78,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[572.955,371.764],[548.826,166.666]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":79,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[560.852,376.25],[544.056,160.667]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":80,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[550.784,380.314],[540.076,156.038]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":81,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[542.33,383.967],[536.726,152.407]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":82,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[535.185,387.228],[533.89,149.52]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":83,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[529.126,390.123],[531.482,147.202]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":84,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[523.981,392.675],[529.432,145.328]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":85,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[519.617,394.91],[527.691,143.806]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":86,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[515.928,396.849],[526.216,142.565]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":87,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[512.829,398.514],[524.975,141.556]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":88,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[510.25,399.926],[523.939,140.738]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":89,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[508.135,401.101],[523.088,140.081]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":90,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[506.434,402.057],[522.401,139.562]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":91,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[505.108,402.81],[521.865,139.163]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":92,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[504.122,403.374],[521.466,138.868]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":93,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[503.447,403.762],[521.194,138.668]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":94,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[503.058,403.986],[521.034,138.554]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":95,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[502.933,404.059],[520.982,138.518]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":270,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[514.922,401.346],[556.046,138.388]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":271,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[514.829,401.298],[555.915,138.436]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":272,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[514.533,401.147],[555.499,138.591]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":273,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[514.005,400.877],[554.757,138.872]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":274,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[513.209,400.472],[553.638,139.306]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":275,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[512.098,399.908],[552.077,139.92]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":276,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[510.612,399.158],[549.991,140.748]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":277,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[508.67,398.181],[547.267,141.85]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":278,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[506.156,396.925],[543.749,143.31]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":279,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[502.91,395.323],[539.209,145.248]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":280,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[498.679,393.265],[533.296,147.869]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":281,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[493.02,390.555],[525.424,151.545]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":282,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[485.105,386.853],[514.47,157.022]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":283,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[472.937,381.361],[497.792,166.156]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":284,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[449.066,371.283],[465.771,186.654]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":285,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[397.151,352.413],[400.689,242.687]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":286,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[373.386,345.116],[373.67,273.373]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":287,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[361.298,341.718],[360.741,290.14]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":288,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[353.442,339.623],[352.658,301.442]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":289,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[347.833,338.184],[347.045,309.708]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":290,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[343.639,337.138],[342.938,316]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":291,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[340.42,336.346],[339.845,320.875]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":292,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[337.929,335.742],[337.485,324.679]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":293,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[336.006,335.285],[335.681,327.642]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":294,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[334.535,334.938],[334.312,329.923]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":295,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[333.435,334.681],[333.295,331.636]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":296,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.647,334.498],[332.57,332.867]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":297,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.124,334.377],[332.091,333.685]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":298,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[331.831,334.309],[331.823,334.144]],"c":false}]},{"t":299,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[331.738,334.288],[331.738,334.288]],"c":false}]}],"ix":2},"nm":"Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0002');"},"o":{"a":0,"k":100,"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB)\n    res = 0;\nelse {\n    res = fx('MB ConnectLayersProStyles-0003').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0004').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0005').value;\n        far = fx('MB ConnectLayersProStyles-0006').value;\n        reverseB = fx('MB ConnectLayersProStyles-0007').value > 0;\n        path = content('Chain 1').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n}\n$bm_rt = res;"},"w":{"a":0,"k":2,"ix":5,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0008');"},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    res = fx('MB ConnectLayersProStyles-0003').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0004').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0005').value;\n        far = fx('MB ConnectLayersProStyles-0006').value;\n        reverseB = fx('MB ConnectLayersProStyles-0007').value > 0;\n        path = content('Chain 1').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n} else\n    res = 0;\n$bm_rt = res;"},"w":{"a":0,"k":2,"ix":10,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0008');"},"g":{"p":2,"k":{"a":0,"k":[0,1,1,1,1,0,0,0],"ix":8}},"s":{"a":0,"k":[0,0],"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 1').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0017').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = startPt;\n} else\n    $bm_rt = value;"},"e":{"a":0,"k":[100,0],"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 1').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0017').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = endPt;\n} else\n    $bm_rt = value;"},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, fillEnabB, res, paletteId, paletteId, pathId, numPaths, sat, sat, luma, seed, seed, cVal, res;\nfunction HueToRgb(p, q, t) {\n    if (t < 0)\n        t++;\n    if (t > 1)\n        t--;\n    if (t < 1 / 6)\n        return $bm_sum(p, $bm_mul($bm_mul($bm_sub(q, p), 6), t));\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return $bm_sum(p, $bm_mul($bm_mul($bm_sub(q, p), 6), $bm_sub(2 / 3, t)));\n    return p;\n}\nfunction HslToRgb(h, s, l) {\n    var c = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    if (s == 0) {\n        c.alphaF = 1;\n        c.redF = c.greenF = c.blueF = 1;\n    } else {\n        var q = l < 0.5 ? $bm_mul(l, $bm_sum(1, s)) : $bm_sub($bm_sum(l, s), $bm_mul(l, s));\n        var p = $bm_sub($bm_mul(2, l), q);\n        c.alphaF = 1;\n        c.redF = HueToRgb(p, q, $bm_sum(h, 1 / 3));\n        c.greenF = HueToRgb(p, q, h);\n        c.blueF = HueToRgb(p, q, $bm_sub(h, 1 / 3));\n    }\n    return c;\n}\nfunction GetColorFromKulerScheme(colors, idx, total) {\n    var colorVal = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    var incr = $bm_div(5, total);\n    var frac = $bm_mul(incr, $bm_sub(idx, 1));\n    var low = Math.max(0, Math.floor(frac));\n    var high = Math.min(4, Math.ceil(frac));\n    if (low != high) {\n        colorVal.alphaF = 1;\n        colorVal.redF = $bm_div($bm_div($bm_sum(colors[low][0], colors[high][0]), 2), 255);\n        colorVal.greenF = $bm_div($bm_div($bm_sum(colors[low][1], colors[high][1]), 2), 255);\n        colorVal.blueF = $bm_div($bm_div($bm_sum(colors[low][2], colors[high][2]), 2), 255);\n    } else {\n        colorVal.alphaF = 1;\n        colorVal.redF = $bm_div(colors[low][0], 255);\n        colorVal.greenF = $bm_div(colors[low][1], 255);\n        colorVal.blueF = $bm_div(colors[low][2], 255);\n    }\n    return colorVal;\n}\nfunction GetPathColor(paletteId, pathId, numPaths) {\n    var firstScratch, secondScratch, L, pts, pt;\n    var colorVal = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    switch (paletteId) {\n    case 1: {\n            firstScratch = [\n                0,\n                0,\n                0\n            ];\n            try {\n                firstScratch = fx('MB ConnectLayersProStyles-0023').value;\n            } catch (e) {\n            }\n            colorVal.alphaF = 1;\n            colorVal.redF = firstScratch[0];\n            colorVal.greenF = firstScratch[1];\n            colorVal.blueF = firstScratch[2];\n            break;\n        }\n    case 2: {\n            firstScratch = secondScratch = [\n                0,\n                0,\n                0\n            ];\n            try {\n                firstScratch = fx('MB ConnectLayersProStyles-0023').value;\n                secondScratch = fx('End Color').value;\n            } catch (e) {\n            }\n            colorVal.alphaF = 1;\n            colorVal.redF = linear(pathId, 1, numPaths, firstScratch[0], secondScratch[0]);\n            colorVal.greenF = linear(pathId, 1, numPaths, firstScratch[1], secondScratch[1]);\n            colorVal.blueF = linear(pathId, 1, numPaths, firstScratch[2], secondScratch[2]);\n            break;\n        }\n    case 3: {\n            var c = HslToRgb(pathId / numPaths, sat, luma);\n            colorVal.alphaF = 1;\n            colorVal.redF = c.redF;\n            colorVal.greenF = c.greenF;\n            colorVal.blueF = c.blueF;\n            break;\n        }\n    case 4: {\n            colorVal.alphaF = 1;\n            colorVal.redF = random();\n            colorVal.greenF = random();\n            colorVal.blueF = random();\n            break;\n        }\n    case 5: {\n            try {\n                L = fx('Color Layer');\n                pts = content('Chain 1').content('Paths').content('Path 1').content('Path').path.points();\n                pt = [\n                    0,\n                    0\n                ];\n                for (var i = 0; i < pts.length; i++) {\n                    pt += toComp(pts[i]);\n                }\n                pt /= pts.length;\n                if (pt.length == 3)\n                    pt.pop();\n                pt = L.fromCompToSurface(pt);\n                c = L.sampleImage(pt);\n                colorVal.alphaF = c[3];\n                colorVal.redF = c[0];\n                colorVal.greenF = c[1];\n                colorVal.blueF = c[2];\n            } catch (e) {\n                colorVal.alphaF = colorVal.redF = colorVal.greenF = colorVal.blueF = 0;\n            }\n            break;\n        }\n    case 6: {\n            break;\n        }\n    case 7: {\n            var colors = [\n                [\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    38,\n                    50,\n                    72\n                ],\n                [\n                    126,\n                    138,\n                    162\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    255,\n                    152,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 8: {\n            var colors = [\n                [\n                    207,\n                    194,\n                    145\n                ],\n                [\n                    255,\n                    246,\n                    197\n                ],\n                [\n                    161,\n                    232,\n                    217\n                ],\n                [\n                    255,\n                    113,\n                    44\n                ],\n                [\n                    105,\n                    93,\n                    70\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 9: {\n            var colors = [\n                [\n                    194,\n                    71,\n                    4\n                ],\n                [\n                    217,\n                    204,\n                    60\n                ],\n                [\n                    255,\n                    235,\n                    121\n                ],\n                [\n                    160,\n                    224,\n                    169\n                ],\n                [\n                    0,\n                    173,\n                    167\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 10: {\n            var colors = [\n                [\n                    43,\n                    58,\n                    66\n                ],\n                [\n                    63,\n                    87,\n                    101\n                ],\n                [\n                    189,\n                    212,\n                    222\n                ],\n                [\n                    239,\n                    239,\n                    239\n                ],\n                [\n                    255,\n                    83,\n                    13\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 11: {\n            var colors = [\n                [\n                    185,\n                    18,\n                    27\n                ],\n                [\n                    76,\n                    27,\n                    27\n                ],\n                [\n                    246,\n                    228,\n                    151\n                ],\n                [\n                    252,\n                    250,\n                    225\n                ],\n                [\n                    189,\n                    141,\n                    70\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 12: {\n            var colors = [\n                [\n                    0,\n                    88,\n                    95\n                ],\n                [\n                    0,\n                    147,\n                    147\n                ],\n                [\n                    255,\n                    255,\n                    196\n                ],\n                [\n                    240,\n                    237,\n                    187\n                ],\n                [\n                    255,\n                    56,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 13: {\n            var colors = [\n                [\n                    70,\n                    137,\n                    102\n                ],\n                [\n                    255,\n                    240,\n                    165\n                ],\n                [\n                    255,\n                    176,\n                    59\n                ],\n                [\n                    182,\n                    73,\n                    38\n                ],\n                [\n                    142,\n                    40,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 14: {\n            var colors = [\n                [\n                    47,\n                    41,\n                    51\n                ],\n                [\n                    1,\n                    162,\n                    166\n                ],\n                [\n                    41,\n                    217,\n                    194\n                ],\n                [\n                    189,\n                    242,\n                    113\n                ],\n                [\n                    255,\n                    255,\n                    166\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 15: {\n            var colors = [\n                [\n                    150,\n                    45,\n                    62\n                ],\n                [\n                    52,\n                    54,\n                    66\n                ],\n                [\n                    151,\n                    156,\n                    156\n                ],\n                [\n                    242,\n                    235,\n                    199\n                ],\n                [\n                    52,\n                    136,\n                    153\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 16: {\n            var colors = [\n                [\n                    133,\n                    219,\n                    24\n                ],\n                [\n                    205,\n                    232,\n                    85\n                ],\n                [\n                    245,\n                    246,\n                    212\n                ],\n                [\n                    167,\n                    197,\n                    32\n                ],\n                [\n                    73,\n                    63,\n                    11\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 17: {\n            var colors = [\n                [\n                    213,\n                    251,\n                    255\n                ],\n                [\n                    159,\n                    188,\n                    191\n                ],\n                [\n                    100,\n                    118,\n                    120\n                ],\n                [\n                    47,\n                    55,\n                    56\n                ],\n                [\n                    89,\n                    216,\n                    230\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 18: {\n            var colors = [\n                [\n                    90,\n                    31,\n                    0\n                ],\n                [\n                    209,\n                    87,\n                    13\n                ],\n                [\n                    253,\n                    231,\n                    146\n                ],\n                [\n                    71,\n                    119,\n                    37\n                ],\n                [\n                    169,\n                    204,\n                    102\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 19: {\n            var colors = [\n                [\n                    16,\n                    91,\n                    99\n                ],\n                [\n                    255,\n                    250,\n                    213\n                ],\n                [\n                    255,\n                    211,\n                    78\n                ],\n                [\n                    219,\n                    158,\n                    54\n                ],\n                [\n                    189,\n                    73,\n                    50\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 20: {\n            var colors = [\n                [\n                    216,\n                    202,\n                    168\n                ],\n                [\n                    92,\n                    131,\n                    47\n                ],\n                [\n                    40,\n                    73,\n                    7\n                ],\n                [\n                    56,\n                    37,\n                    19\n                ],\n                [\n                    54,\n                    57,\n                    66\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 21: {\n            var colors = [\n                [\n                    252,\n                    255,\n                    245\n                ],\n                [\n                    209,\n                    219,\n                    189\n                ],\n                [\n                    145,\n                    170,\n                    157\n                ],\n                [\n                    62,\n                    96,\n                    111\n                ],\n                [\n                    25,\n                    52,\n                    65\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 22: {\n            var colors = [\n                [\n                    64,\n                    89,\n                    82\n                ],\n                [\n                    156,\n                    155,\n                    122\n                ],\n                [\n                    255,\n                    211,\n                    147\n                ],\n                [\n                    255,\n                    151,\n                    79\n                ],\n                [\n                    245,\n                    79,\n                    41\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 23: {\n            var colors = [\n                [\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    51,\n                    51,\n                    51\n                ],\n                [\n                    255,\n                    53,\n                    139\n                ],\n                [\n                    1,\n                    176,\n                    240\n                ],\n                [\n                    174,\n                    238,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 24: {\n            var colors = [\n                [\n                    108,\n                    110,\n                    88\n                ],\n                [\n                    62,\n                    66,\n                    58\n                ],\n                [\n                    65,\n                    115,\n                    120\n                ],\n                [\n                    164,\n                    207,\n                    190\n                ],\n                [\n                    244,\n                    247,\n                    217\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 25: {\n            var colors = [\n                [\n                    255,\n                    248,\n                    227\n                ],\n                [\n                    204,\n                    204,\n                    159\n                ],\n                [\n                    51,\n                    51,\n                    45\n                ],\n                [\n                    159,\n                    180,\n                    204\n                ],\n                [\n                    219,\n                    65,\n                    5\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 26: {\n            var colors = [\n                [\n                    180,\n                    175,\n                    145\n                ],\n                [\n                    120,\n                    119,\n                    70\n                ],\n                [\n                    64,\n                    65,\n                    30\n                ],\n                [\n                    50,\n                    51,\n                    29\n                ],\n                [\n                    192,\n                    48,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 27: {\n            var colors = [\n                [\n                    4,\n                    191,\n                    191\n                ],\n                [\n                    202,\n                    252,\n                    216\n                ],\n                [\n                    247,\n                    233,\n                    103\n                ],\n                [\n                    169,\n                    207,\n                    84\n                ],\n                [\n                    88,\n                    143,\n                    39\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 28: {\n            var colors = [\n                [\n                    255,\n                    97,\n                    56\n                ],\n                [\n                    255,\n                    255,\n                    157\n                ],\n                [\n                    190,\n                    235,\n                    159\n                ],\n                [\n                    121,\n                    189,\n                    143\n                ],\n                [\n                    0,\n                    163,\n                    136\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 29: {\n            var colors = [\n                [\n                    176,\n                    204,\n                    153\n                ],\n                [\n                    103,\n                    126,\n                    82\n                ],\n                [\n                    183,\n                    202,\n                    121\n                ],\n                [\n                    246,\n                    232,\n                    177\n                ],\n                [\n                    137,\n                    114,\n                    91\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 30: {\n            var colors = [\n                [\n                    62,\n                    69,\n                    76\n                ],\n                [\n                    33,\n                    133,\n                    197\n                ],\n                [\n                    126,\n                    206,\n                    253\n                ],\n                [\n                    255,\n                    246,\n                    229\n                ],\n                [\n                    255,\n                    127,\n                    102\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 31: {\n            var colors = [\n                [\n                    230,\n                    226,\n                    175\n                ],\n                [\n                    167,\n                    163,\n                    126\n                ],\n                [\n                    239,\n                    236,\n                    202\n                ],\n                [\n                    4,\n                    99,\n                    128\n                ],\n                [\n                    0,\n                    47,\n                    47\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 32: {\n            var colors = [\n                [\n                    220,\n                    53,\n                    34\n                ],\n                [\n                    217,\n                    203,\n                    158\n                ],\n                [\n                    55,\n                    65,\n                    64\n                ],\n                [\n                    42,\n                    44,\n                    43\n                ],\n                [\n                    30,\n                    30,\n                    32\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 33: {\n            var colors = [\n                [\n                    89,\n                    82,\n                    65\n                ],\n                [\n                    184,\n                    174,\n                    156\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    172,\n                    207,\n                    204\n                ],\n                [\n                    138,\n                    9,\n                    23\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 34: {\n            var colors = [\n                [\n                    0,\n                    67,\n                    88\n                ],\n                [\n                    31,\n                    138,\n                    112\n                ],\n                [\n                    190,\n                    219,\n                    57\n                ],\n                [\n                    255,\n                    225,\n                    26\n                ],\n                [\n                    253,\n                    116,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 35: {\n            var colors = [\n                [\n                    125,\n                    138,\n                    46\n                ],\n                [\n                    201,\n                    215,\n                    135\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    255,\n                    192,\n                    169\n                ],\n                [\n                    255,\n                    133,\n                    152\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 36: {\n            var colors = [\n                [\n                    16,\n                    34,\n                    13\n                ],\n                [\n                    149,\n                    171,\n                    99\n                ],\n                [\n                    189,\n                    214,\n                    132\n                ],\n                [\n                    226,\n                    240,\n                    214\n                ],\n                [\n                    246,\n                    255,\n                    224\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    default:\n        break;\n    }\n    return colorVal;\n}\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\nfillEnabB = fx('Enable Fill').value > 0;\nres = value;\nif (fillEnabB) {\n    paletteId = 1;\n    try {\n        paletteId = fx('Fill Palette').value;\n    } catch (e) {\n    }\n    pathId = 1;\n    numPaths = 1;\n    if (paletteId == 3) {\n        sat = luma = 0.5;\n        try {\n            sat = $bm_div(fx('Saturation').value, 100);\n            luma = $bm_div(fx('Luminance').value, 100);\n        } catch (e) {\n        }\n    } else if (paletteId == 4) {\n        seed = 1;\n        try {\n            seed = fx('Random Seed').value;\n        } catch (e) {\n        }\n        seedRandom(seed, true);\n    }\n    cVal = GetPathColor(paletteId, pathId, numPaths);\n    res = [\n        cVal.redF,\n        cVal.greenF,\n        cVal.blueF,\n        cVal.alphaF\n    ];\n}\n$bm_rt = res;"},"o":{"a":0,"k":100,"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, res, fillEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, paletteId, paletteId, L, L, L, pts, pt, pt, pt, pt, c, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\nif (fx('MB ConnectLayersProStyles-0034').value > 0)\n    res = 0;\nelse {\n    fillEnabB = fx('Enable Fill').value > 0;\n    if (fillEnabB) {\n        res = fx('MB ConnectLayersProStyles-0029').value;\n        opaDistB = fx('MB ConnectLayersProStyles-0030').value > 0;\n        if (opaDistB) {\n            near = fx('MB ConnectLayersProStyles-0031').value;\n            far = fx('MB ConnectLayersProStyles-0032').value;\n            reverseB = fx('MB ConnectLayersProStyles-0033').value > 0;\n            path = content('Chain 1').content('Paths').content('Path 1').content('Path').path;\n            pts = path.points();\n            d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n            if (d <= near)\n                res = 100;\n            else if (d >= far)\n                res = 0;\n            else\n                res *= ease(d, near, far, 1, 0);\n            if (reverseB)\n                res = $bm_sub(100, res);\n        }\n        paletteId = 1;\n        try {\n            paletteId = fx('Fill Palette').value;\n        } catch (e) {\n        }\n        if (paletteId == 5) {\n            L = null;\n            try {\n                L = fx('Color Layer');\n            } catch (e) {\n                L = null;\n            }\n            if (L) {\n                pts = content('Chain 1').content('Paths').content('Path 1').content('Path').path.points();\n                pt = [\n                    0,\n                    0\n                ];\n                for (var i = 0; i < pts.length; i++) {\n                    pt = $bm_sum(pt, toComp(pts[i]));\n                }\n                pt /= pts.length;\n                if (pt.length == 3)\n                    pt.pop();\n                pt = L.fromCompToSurface(pt);\n                c = L.sampleImage(pt);\n                res *= c[3];\n            } else\n                res = 0;\n        }\n    } else\n        res = 0;\n}\n$bm_rt = res;"},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    res = fx('MB ConnectLayersProStyles-0029').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0030').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0031').value;\n        far = fx('MB ConnectLayersProStyles-0032').value;\n        reverseB = fx('MB ConnectLayersProStyles-0033').value > 0;\n        path = content('Chain 1').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n} else\n    res = 0;\n$bm_rt = res;"},"r":1,"bm":0,"g":{"p":2,"k":{"a":0,"k":[0,1,1,1,1,0,0,0],"ix":9}},"s":{"a":0,"k":[0,0],"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 1').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0039').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = startPt;\n} else\n    $bm_rt = value;"},"e":{"a":0,"k":[100,0],"ix":6,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 1').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0039').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = endPt;\n} else\n    $bm_rt = value;"},"t":1,"nm":"Gradient Fill","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path 1","np":7,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Paths","np":6,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Chain 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":3,"nm":"Calque de forme 4: Tracé 1 [1.1.1]","cl":"1 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-266,33,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar srcLayer = thisComp.layer('Calque de forme 4');\nvar srcPath = srcLayer('ADBE Root Vectors Group')(1)('ADBE Vectors Group')(1)('ADBE Vector Shape').points()[1];\n$bm_rt = srcLayer.toComp(srcPath);"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"Chain 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[0,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Connect Layers Pro - Styles","np":152,"mn":"MB ConnectLayersProStyles","ix":1,"en":1,"ef":[{"ty":6,"nm":"Stroke","mn":"MB ConnectLayersProStyles-0001","ix":1,"v":0},{"ty":2,"nm":"Stroke Color","mn":"MB ConnectLayersProStyles-0002","ix":2,"v":{"a":0,"k":[0,0,0,0],"ix":2}},{"ty":0,"nm":"Stroke Opacity","mn":"MB ConnectLayersProStyles-0003","ix":3,"v":{"a":0,"k":100,"ix":3}},{"ty":7,"nm":"Opacity From Distance","mn":"MB ConnectLayersProStyles-0004","ix":4,"v":{"a":0,"k":0,"ix":4}},{"ty":0,"nm":"Near (px)","mn":"MB ConnectLayersProStyles-0005","ix":5,"v":{"a":0,"k":100,"ix":5}},{"ty":0,"nm":"Far (px)","mn":"MB ConnectLayersProStyles-0006","ix":6,"v":{"a":0,"k":400,"ix":6}},{"ty":7,"nm":"Reverse Behavior","mn":"MB ConnectLayersProStyles-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":0,"nm":"Stroke Width","mn":"MB ConnectLayersProStyles-0008","ix":8,"v":{"a":0,"k":20,"ix":8}},{"ty":7,"nm":"Line Cap","mn":"MB ConnectLayersProStyles-0009","ix":9,"v":{"a":0,"k":1,"ix":9}},{"ty":7,"nm":"Line Join","mn":"MB ConnectLayersProStyles-0010","ix":10,"v":{"a":0,"k":1,"ix":10}},{"ty":0,"nm":"Miter Limit","mn":"MB ConnectLayersProStyles-0011","ix":11,"v":{"a":0,"k":4,"ix":11}},{"ty":7,"nm":"Enable Gradient","mn":"MB ConnectLayersProStyles-0012","ix":12,"v":{"a":0,"k":0,"ix":12}},{"ty":7,"nm":"Gradient Type","mn":"MB ConnectLayersProStyles-0013","ix":13,"v":{"a":0,"k":1,"ix":13}},{"ty":0,"nm":"Highlight Length","mn":"MB ConnectLayersProStyles-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Highlight Angle","mn":"MB ConnectLayersProStyles-0015","ix":15,"v":{"a":0,"k":0,"ix":15}},{"ty":6,"nm":"Gradient Colors","mn":"MB ConnectLayersProStyles-0016","ix":16,"v":0},{"ty":0,"nm":"Gradient Scale (%)","mn":"MB ConnectLayersProStyles-0017","ix":17,"v":{"a":0,"k":100,"ix":17}},{"ty":7,"nm":"Reverse Path","mn":"MB ConnectLayersProStyles-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0019","ix":19,"v":0},{"ty":6,"nm":"Fill","mn":"MB ConnectLayersProStyles-0020","ix":20,"v":0},{"ty":7,"nm":"Enable Fill","mn":"MB ConnectLayersProStyles-0021","ix":21,"v":{"a":0,"k":0,"ix":21}},{"ty":7,"nm":"Fill Palette","mn":"MB ConnectLayersProStyles-0022","ix":22,"v":{"a":0,"k":1,"ix":22}},{"ty":2,"nm":"Fill Color","mn":"MB ConnectLayersProStyles-0023","ix":23,"v":{"a":0,"k":[0.78431372549,0.549019607843,0.972549019608,1],"ix":23}},{"ty":2,"nm":"End Color","mn":"MB ConnectLayersProStyles-0024","ix":24,"v":{"a":0,"k":[0.121568627451,0,0.247058823529,1],"ix":24}},{"ty":0,"nm":"Saturation","mn":"MB ConnectLayersProStyles-0025","ix":25,"v":{"a":0,"k":50,"ix":25}},{"ty":0,"nm":"Luminance","mn":"MB ConnectLayersProStyles-0026","ix":26,"v":{"a":0,"k":50,"ix":26}},{"ty":0,"nm":"Random Seed","mn":"MB ConnectLayersProStyles-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":10,"nm":"Color Layer","mn":"MB ConnectLayersProStyles-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":0,"nm":"Fill Opacity","mn":"MB ConnectLayersProStyles-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":7,"nm":"Opacity From Distance","mn":"MB ConnectLayersProStyles-0030","ix":30,"v":{"a":0,"k":0,"ix":30}},{"ty":0,"nm":"Near (px)","mn":"MB ConnectLayersProStyles-0031","ix":31,"v":{"a":0,"k":100,"ix":31}},{"ty":0,"nm":"Far (px)","mn":"MB ConnectLayersProStyles-0032","ix":32,"v":{"a":0,"k":400,"ix":32}},{"ty":7,"nm":"Reverse Behavior","mn":"MB ConnectLayersProStyles-0033","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":7,"nm":"Enable Gradient","mn":"MB ConnectLayersProStyles-0034","ix":34,"v":{"a":0,"k":0,"ix":34}},{"ty":7,"nm":"Gradient Type","mn":"MB ConnectLayersProStyles-0035","ix":35,"v":{"a":0,"k":1,"ix":35}},{"ty":0,"nm":"Highlight Length","mn":"MB ConnectLayersProStyles-0036","ix":36,"v":{"a":0,"k":0,"ix":36}},{"ty":0,"nm":"Highlight Angle","mn":"MB ConnectLayersProStyles-0037","ix":37,"v":{"a":0,"k":0,"ix":37}},{"ty":6,"nm":"Gradient Colors","mn":"MB ConnectLayersProStyles-0038","ix":38,"v":0},{"ty":0,"nm":"Gradient Scale (%)","mn":"MB ConnectLayersProStyles-0039","ix":39,"v":{"a":0,"k":100,"ix":39}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0040","ix":40,"v":0},{},{"ty":6,"nm":"Enable Modules","mn":"MB ConnectLayersProStyles-0042","ix":42,"v":0},{"ty":7,"nm":"Arrowheads","mn":"MB ConnectLayersProStyles-0043","ix":43,"v":{"a":0,"k":0,"ix":43}},{"ty":7,"nm":"Curviness","mn":"MB ConnectLayersProStyles-0044","ix":44,"v":{"a":0,"k":0,"ix":44}},{"ty":7,"nm":"Dashes","mn":"MB ConnectLayersProStyles-0045","ix":45,"v":{"a":0,"k":0,"ix":45}},{"ty":7,"nm":"Offset","mn":"MB ConnectLayersProStyles-0046","ix":46,"v":{"a":0,"k":0,"ix":46}},{"ty":7,"nm":"Repeater","mn":"MB ConnectLayersProStyles-0047","ix":47,"v":{"a":0,"k":0,"ix":47}},{"ty":7,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0048","ix":48,"v":{"a":0,"k":0,"ix":48}},{"ty":7,"nm":"Trim","mn":"MB ConnectLayersProStyles-0049","ix":49,"v":{"a":0,"k":0,"ix":49}},{"ty":7,"nm":"Twist","mn":"MB ConnectLayersProStyles-0050","ix":50,"v":{"a":0,"k":0,"ix":50}},{"ty":7,"nm":"Wiggle","mn":"MB ConnectLayersProStyles-0051","ix":51,"v":{"a":0,"k":0,"ix":51}},{"ty":7,"nm":"Zig Zag","mn":"MB ConnectLayersProStyles-0052","ix":52,"v":{"a":0,"k":0,"ix":52}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0053","ix":53,"v":0},{"ty":6,"nm":"Arrowheads","mn":"MB ConnectLayersProStyles-0054","ix":54,"v":0},{"ty":7,"nm":"Start","mn":"MB ConnectLayersProStyles-0055","ix":55,"v":{"a":0,"k":1,"ix":55}},{"ty":7,"nm":"End","mn":"MB ConnectLayersProStyles-0056","ix":56,"v":{"a":0,"k":1,"ix":56}},{"ty":2,"nm":"Stroke Color","mn":"MB ConnectLayersProStyles-0057","ix":57,"v":{"a":0,"k":[1,1,1,1],"ix":57}},{"ty":0,"nm":"Stroke Opacity","mn":"MB ConnectLayersProStyles-0058","ix":58,"v":{"a":0,"k":100,"ix":58}},{"ty":0,"nm":"Stroke Width","mn":"MB ConnectLayersProStyles-0059","ix":59,"v":{"a":0,"k":0,"ix":59}},{"ty":2,"nm":"Fill Color","mn":"MB ConnectLayersProStyles-0060","ix":60,"v":{"a":0,"k":[1,1,1,1],"ix":60}},{"ty":0,"nm":"Fill Opacity","mn":"MB ConnectLayersProStyles-0061","ix":61,"v":{"a":0,"k":100,"ix":61}},{"ty":7,"nm":"Opacity from Path","mn":"MB ConnectLayersProStyles-0062","ix":62,"v":{"a":0,"k":1,"ix":62}},{"ty":0,"nm":"Circle/Square Size","mn":"MB ConnectLayersProStyles-0063","ix":63,"v":{"a":0,"k":15,"ix":63}},{"ty":0,"nm":"Triangle Scale","mn":"MB ConnectLayersProStyles-0064","ix":64,"v":{"a":0,"k":100,"ix":64}},{"ty":0,"nm":"Triangle Length","mn":"MB ConnectLayersProStyles-0065","ix":65,"v":{"a":0,"k":40,"ix":65}},{"ty":0,"nm":"Triangle Width","mn":"MB ConnectLayersProStyles-0066","ix":66,"v":{"a":0,"k":20,"ix":66}},{"ty":0,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0067","ix":67,"v":{"a":0,"k":0,"ix":67}},{"ty":6,"nm":"Customization","mn":"MB ConnectLayersProStyles-0068","ix":68,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0069","ix":69,"v":0},{"ty":6,"nm":"Curviness","mn":"MB ConnectLayersProStyles-0070","ix":70,"v":0},{"ty":7,"nm":"Function","mn":"MB ConnectLayersProStyles-0071","ix":71,"v":{"a":0,"k":1,"ix":71}},{"ty":7,"nm":"Flip Direction","mn":"MB ConnectLayersProStyles-0072","ix":72,"v":{"a":0,"k":0,"ix":72}},{"ty":0,"nm":"Tension","mn":"MB ConnectLayersProStyles-0073","ix":73,"v":{"a":0,"k":33.333,"ix":73}},{"ty":7,"nm":"Preset","mn":"MB ConnectLayersProStyles-0074","ix":74,"v":{"a":0,"k":1,"ix":74}},{"ty":7,"nm":"Preset","mn":"MB ConnectLayersProStyles-0075","ix":75,"v":{"a":0,"k":1,"ix":75}},{"ty":0,"nm":"Stiffness","mn":"MB ConnectLayersProStyles-0076","ix":76,"v":{"a":0,"k":100,"ix":76}},{"ty":0,"nm":"Damping","mn":"MB ConnectLayersProStyles-0077","ix":77,"v":{"a":0,"k":50,"ix":77}},{"ty":0,"nm":"Max Tangent Length","mn":"MB ConnectLayersProStyles-0078","ix":78,"v":{"a":0,"k":33.333,"ix":78}},{"ty":0,"nm":"Start Tangent X","mn":"MB ConnectLayersProStyles-0079","ix":79,"v":{"a":0,"k":0,"ix":79}},{"ty":0,"nm":"Start Tangent Y","mn":"MB ConnectLayersProStyles-0080","ix":80,"v":{"a":0,"k":0,"ix":80}},{"ty":0,"nm":"End Tangent X","mn":"MB ConnectLayersProStyles-0081","ix":81,"v":{"a":0,"k":0,"ix":81}},{"ty":0,"nm":"End Tangent Y","mn":"MB ConnectLayersProStyles-0082","ix":82,"v":{"a":0,"k":0,"ix":82}},{"ty":0,"nm":"Stiffness","mn":"MB ConnectLayersProStyles-0083","ix":83,"v":{"a":0,"k":50,"ix":83}},{"ty":0,"nm":"Solver Steps","mn":"MB ConnectLayersProStyles-0084","ix":84,"v":{"a":0,"k":5,"ix":84}},{"ty":0,"nm":"Subsegments","mn":"MB ConnectLayersProStyles-0085","ix":85,"v":{"a":0,"k":10,"ix":85}},{"ty":0,"nm":"Gravity","mn":"MB ConnectLayersProStyles-0086","ix":86,"v":{"a":0,"k":0,"ix":86}},{"ty":0,"nm":"Dynamics Start Frame","mn":"MB ConnectLayersProStyles-0087","ix":87,"v":{"a":0,"k":0,"ix":87}},{"ty":0,"nm":"Precision","mn":"MB ConnectLayersProStyles-0088","ix":88,"v":{"a":0,"k":15,"ix":88}},{"ty":0,"nm":"Angle (3D only)","mn":"MB ConnectLayersProStyles-0089","ix":89,"v":{"a":0,"k":45,"ix":89}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0090","ix":90,"v":0},{"ty":6,"nm":"Dashes","mn":"MB ConnectLayersProStyles-0091","ix":91,"v":0},{"ty":0,"nm":"Dash","mn":"MB ConnectLayersProStyles-0092","ix":92,"v":{"a":0,"k":10,"ix":92}},{"ty":0,"nm":"Gap","mn":"MB ConnectLayersProStyles-0093","ix":93,"v":{"a":0,"k":10,"ix":93}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0094","ix":94,"v":{"a":0,"k":0,"ix":94}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0095","ix":95,"v":0},{"ty":6,"nm":"Offset","mn":"MB ConnectLayersProStyles-0096","ix":96,"v":0},{"ty":0,"nm":"Amount","mn":"MB ConnectLayersProStyles-0097","ix":97,"v":{"a":0,"k":0,"ix":97}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0098","ix":98,"v":0},{"ty":6,"nm":"Repeater","mn":"MB ConnectLayersProStyles-0099","ix":99,"v":0},{"ty":0,"nm":"Copies","mn":"MB ConnectLayersProStyles-0100","ix":100,"v":{"a":0,"k":3,"ix":100}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0101","ix":101,"v":{"a":0,"k":0,"ix":101}},{"ty":7,"nm":"Symmetric Offset","mn":"MB ConnectLayersProStyles-0102","ix":102,"v":{"a":0,"k":1,"ix":102}},{"ty":6,"nm":"Transform: Repeater","mn":"MB ConnectLayersProStyles-0103","ix":103,"v":0},{"ty":0,"nm":"Anchor Point X","mn":"MB ConnectLayersProStyles-0104","ix":104,"v":{"a":0,"k":0,"ix":104}},{"ty":0,"nm":"Anchor Point Y","mn":"MB ConnectLayersProStyles-1104","ix":105,"v":{"a":0,"k":0,"ix":105}},{"ty":7,"nm":"Center Anchor","mn":"MB ConnectLayersProStyles-0106","ix":106,"v":{"a":0,"k":1,"ix":106}},{"ty":0,"nm":"Position Offset","mn":"MB ConnectLayersProStyles-0107","ix":107,"v":{"a":0,"k":0,"ix":107}},{"ty":0,"nm":"Position X","mn":"MB ConnectLayersProStyles-0108","ix":108,"v":{"a":0,"k":0,"ix":108}},{"ty":0,"nm":"Position Y","mn":"MB ConnectLayersProStyles-0109","ix":109,"v":{"a":0,"k":0,"ix":109}},{"ty":0,"nm":"Scale","mn":"MB ConnectLayersProStyles-0110","ix":110,"v":{"a":0,"k":100,"ix":110}},{"ty":0,"nm":"Rotation","mn":"MB ConnectLayersProStyles-0111","ix":111,"v":{"a":0,"k":0,"ix":111}},{"ty":0,"nm":"Start Opacity","mn":"MB ConnectLayersProStyles-0112","ix":112,"v":{"a":0,"k":100,"ix":112}},{"ty":0,"nm":"End Opacity","mn":"MB ConnectLayersProStyles-0113","ix":113,"v":{"a":0,"k":100,"ix":113}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0114","ix":114,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0115","ix":115,"v":0},{"ty":6,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0116","ix":116,"v":0},{"ty":0,"nm":"Radius","mn":"MB ConnectLayersProStyles-0117","ix":117,"v":{"a":0,"k":10,"ix":117}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0118","ix":118,"v":0},{"ty":6,"nm":"Trim","mn":"MB ConnectLayersProStyles-0119","ix":119,"v":0},{"ty":0,"nm":"Start","mn":"MB ConnectLayersProStyles-0120","ix":120,"v":{"a":0,"k":0,"ix":120}},{"ty":0,"nm":"End","mn":"MB ConnectLayersProStyles-0121","ix":121,"v":{"a":0,"k":100,"ix":121}},{"ty":0,"nm":"Both Ends","mn":"MB ConnectLayersProStyles-0122","ix":122,"v":{"a":0,"k":0,"ix":122}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0123","ix":123,"v":{"a":0,"k":0,"ix":123}},{"ty":7,"nm":"Trim Multiple Shapes","mn":"MB ConnectLayersProStyles-0124","ix":124,"v":{"a":0,"k":1,"ix":124}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0125","ix":125,"v":0},{"ty":6,"nm":"Twist","mn":"MB ConnectLayersProStyles-0126","ix":126,"v":0},{"ty":0,"nm":"Angle","mn":"MB ConnectLayersProStyles-0127","ix":127,"v":{"a":0,"k":10,"ix":127}},{"ty":0,"nm":"Center X","mn":"MB ConnectLayersProStyles-0128","ix":128,"v":{"a":0,"k":0,"ix":128}},{"ty":0,"nm":"Center Y","mn":"MB ConnectLayersProStyles-0129","ix":129,"v":{"a":0,"k":0,"ix":129}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0130","ix":130,"v":0},{"ty":6,"nm":"Wiggle","mn":"MB ConnectLayersProStyles-0131","ix":131,"v":0},{"ty":0,"nm":"Size","mn":"MB ConnectLayersProStyles-0132","ix":132,"v":{"a":0,"k":10,"ix":132}},{"ty":0,"nm":"Detail","mn":"MB ConnectLayersProStyles-0133","ix":133,"v":{"a":0,"k":10,"ix":133}},{"ty":7,"nm":"Points","mn":"MB ConnectLayersProStyles-0134","ix":134,"v":{"a":0,"k":1,"ix":134}},{"ty":0,"nm":"Wiggles/Second","mn":"MB ConnectLayersProStyles-0135","ix":135,"v":{"a":0,"k":2,"ix":135}},{"ty":0,"nm":"Correlation","mn":"MB ConnectLayersProStyles-0136","ix":136,"v":{"a":0,"k":50,"ix":136}},{"ty":0,"nm":"Temporal Phase","mn":"MB ConnectLayersProStyles-0137","ix":137,"v":{"a":0,"k":0,"ix":137}},{"ty":0,"nm":"Spatial Phase","mn":"MB ConnectLayersProStyles-0138","ix":138,"v":{"a":0,"k":0,"ix":138}},{"ty":0,"nm":"Random Seed","mn":"MB ConnectLayersProStyles-0139","ix":139,"v":{"a":0,"k":0,"ix":139}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0140","ix":140,"v":0},{"ty":6,"nm":"Zig Zag","mn":"MB ConnectLayersProStyles-0141","ix":141,"v":0},{"ty":0,"nm":"Size","mn":"MB ConnectLayersProStyles-0142","ix":142,"v":{"a":0,"k":5,"ix":142}},{"ty":0,"nm":"Ridges per segment","mn":"MB ConnectLayersProStyles-0143","ix":143,"v":{"a":0,"k":10,"ix":143}},{"ty":7,"nm":"Points","mn":"MB ConnectLayersProStyles-0144","ix":144,"v":{"a":0,"k":1,"ix":144}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0145","ix":145,"v":0},{"ty":6,"nm":"Assistant","mn":"MB ConnectLayersProStyles-0146","ix":146,"v":0},{"ty":6,"nm":"Path Expressions","mn":"MB ConnectLayersProStyles-0147","ix":147,"v":0},{"ty":6,"nm":"Style Expressions","mn":"MB ConnectLayersProStyles-0148","ix":148,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0149","ix":149,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0150","ix":150,"v":0}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.707,748.25],[332.707,748.25]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.654,748.312],[332.779,748.185]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":2,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.464,748.534],[333.038,747.956]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":3,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.12,748.938],[333.509,747.538]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":4,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[331.575,749.577],[334.252,746.878]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":5,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[330.767,750.525],[335.355,745.9]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":6,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[329.594,751.901],[336.959,744.477]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":7,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[327.882,753.91],[339.297,742.402]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":8,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[325.243,757.006],[342.899,739.206]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":9,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[320.574,762.483],[349.277,733.547]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[306.707,778.749],[368.208,716.749]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":11,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[292.842,795.014],[387.14,699.949]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":12,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[288.171,800.493],[393.515,694.293]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":13,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[285.534,803.588],[397.119,691.095]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":14,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[283.821,805.597],[399.457,689.021]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":15,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[282.646,806.975],[401.058,687.6]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":16,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[281.839,807.922],[402.162,686.62]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":17,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[281.294,808.561],[402.906,685.961]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":18,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[280.95,808.965],[403.376,685.544]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":19,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[280.76,809.187],[403.635,685.314]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[280.707,809.25],[403.707,685.25]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":21,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[281.412,809.617],[403.653,685.609]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":22,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[283.726,810.809],[403.482,686.787]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":23,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[288.034,812.982],[403.177,688.973]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":24,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[294.907,816.318],[402.733,692.442]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[305.226,821.035],[402.159,697.612]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":26,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[320.439,827.38],[401.516,705.161]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":27,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[343.221,835.57],[400.965,716.326]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[379.24,845.564],[401.082,733.695]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":29,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[445.072,855.106],[404.12,764.868]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[641.272,822.804],[430.281,860.621]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[807.929,695.705],[497.048,942.55]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":32,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[848.454,636.75],[524.099,967.795]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":33,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[868.503,600.219],[540.41,981.067]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":34,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[879.703,575.289],[551.248,989.246]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":35,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[887.122,558.577],[558.665,994.6]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":36,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[891.939,546.583],[563.726,998.162]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":37,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[895.201,538.691],[567.079,1000.489]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":38,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[897.809,533.716],[569.156,1001.922]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":39,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[898.713,531.23],[570.256,1002.684]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[899.315,530.484],[570.592,1002.909]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":41,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[898.587,531.932],[569.592,1003.192]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":42,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[897.328,534.782],[566.332,1004.093]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":43,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[896.102,541.032],[560.307,1005.67]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":44,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[893.316,550.421],[550.799,1007.928]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":45,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[889.543,563.8],[536.746,1010.762]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":46,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[881.376,583.702],[516.496,1013.813]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":47,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[867.539,612.568],[487.295,1016.12]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":48,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[842.163,651.461],[444.046,1015.082]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":49,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[788.928,700.181],[375.603,1002.32]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":50,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[659.381,759.31],[248.302,934.464]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":51,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[398.461,610.244],[127.029,603.133]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":52,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[400.39,492.513],[178.611,476.718]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":53,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[426.435,440.093],[213.245,425.638]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":54,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[450.244,411.345],[245.085,398.76]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":55,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[469.419,394.083],[268.013,382.884]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":56,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[484.191,383.233],[285.192,373.776]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":57,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[486.172,375.534],[297.059,367.591]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":58,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[493.956,370.621],[305.352,363.342]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":59,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[500.543,368.007],[310.776,360.829]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[502.845,366.278],[314.101,360.142]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[503.962,365.848],[314.97,359.533]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":62,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[503.618,365.891],[314.827,358.583]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":63,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[502.245,367.102],[312.555,358.675]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":64,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[499.679,369.139],[310.991,357.231]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":65,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[504.949,373.231],[307.186,355.9]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":66,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[500.248,377.476],[301.128,353.319]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":67,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[493.632,383.677],[293.691,350.099]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[484.422,392.778],[282.806,345.604]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":69,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[471.515,406.54],[275.796,343.239]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":70,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[453.011,428.653],[258.143,336.658]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":71,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[426.04,467.476],[233.616,330.853]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":72,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[393.399,532.329],[206.533,333.092]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":73,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[373.382,597.03],[193.511,346.393]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":74,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[360.25,637.361],[191.971,360.966]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":75,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[358.177,670.595],[194.601,373.576]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":76,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[359.072,696.27],[198.633,384.199]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":77,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[360.459,713.954],[203.057,393.176]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":78,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[362.036,730.734],[204.201,397.07]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":79,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[364.029,742.825],[208.009,403.117]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":80,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[365.546,753.608],[212.022,409.251]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":81,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[368.005,761.515],[215.33,413.361]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":82,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[369.863,768.857],[218.302,418.059]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":84,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[372.945,780.454],[223.758,426.053]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":86,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[375.22,788.911],[227.992,430.264]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":88,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[377.198,794.761],[230.134,434.312]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":90,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[378.167,798.77],[232.817,436.466]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":92,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[378.93,801.046],[233.919,437.927]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":95,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[379.079,802.715],[234.87,439.431]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":270,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[357.247,788.027],[245.061,413.102]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":272,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[357.172,787.454],[244.01,413.852]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":273,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[356.795,787.58],[244.426,415.012]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":274,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[356.418,787.705],[244.843,417.422]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":275,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[356.419,786.962],[244.696,419.32]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":276,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[356.421,786.218],[244.549,422.469]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":277,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[355.997,786.548],[244.35,426.167]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":278,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[355.572,786.877],[244.152,431.116]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":279,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[354.877,785.801],[243.343,436.991]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":280,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[354.181,784.725],[243.785,446.616]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":281,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[353.201,783.568],[243.18,456.998]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":282,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[352.22,782.412],[243.576,472.381]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":283,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[349.414,780.579],[244.795,496.966]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":284,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[345.607,775.746],[250.014,543.551]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":285,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[338.015,765.336],[275.811,641.129]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":286,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[335.505,760.814],[293.205,683.177]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":287,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[333.915,759.182],[302.941,704.642]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":288,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.906,756.942],[309.715,717.174]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":289,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.825,755.688],[315.391,726.348]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":290,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.178,755.992],[319.159,734.39]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":291,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.337,754.63],[322.768,738.917]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":292,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.214,754.055],[325.351,742.873]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":293,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[331.353,754.238],[326.601,746.542]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":294,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[331.798,753.273],[328.674,748.237]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":295,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[331.039,753.019],[329.138,749.967]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":296,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[330.943,752.836],[329.924,751.204]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":297,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.754,748.339],[332.321,747.647]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":298,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.718,748.271],[332.615,748.105]],"c":false}]},{"t":299,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[332.707,748.25],[332.707,748.25]],"c":false}]}],"ix":2},"nm":"Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0002');"},"o":{"a":0,"k":100,"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB)\n    res = 0;\nelse {\n    res = fx('MB ConnectLayersProStyles-0003').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0004').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0005').value;\n        far = fx('MB ConnectLayersProStyles-0006').value;\n        reverseB = fx('MB ConnectLayersProStyles-0007').value > 0;\n        path = content('Chain 2').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n}\n$bm_rt = res;"},"w":{"a":0,"k":2,"ix":5,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0008');"},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    res = fx('MB ConnectLayersProStyles-0003').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0004').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0005').value;\n        far = fx('MB ConnectLayersProStyles-0006').value;\n        reverseB = fx('MB ConnectLayersProStyles-0007').value > 0;\n        path = content('Chain 2').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n} else\n    res = 0;\n$bm_rt = res;"},"w":{"a":0,"k":2,"ix":10,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0008');"},"g":{"p":2,"k":{"a":0,"k":[0,1,1,1,1,0,0,0],"ix":8}},"s":{"a":0,"k":[0,0],"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 2').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0017').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = startPt;\n} else\n    $bm_rt = value;"},"e":{"a":0,"k":[100,0],"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 2').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0017').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = endPt;\n} else\n    $bm_rt = value;"},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, fillEnabB, res, paletteId, paletteId, pathId, numPaths, sat, sat, luma, seed, seed, cVal, res;\nfunction HueToRgb(p, q, t) {\n    if (t < 0)\n        t++;\n    if (t > 1)\n        t--;\n    if (t < 1 / 6)\n        return $bm_sum(p, $bm_mul($bm_mul($bm_sub(q, p), 6), t));\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return $bm_sum(p, $bm_mul($bm_mul($bm_sub(q, p), 6), $bm_sub(2 / 3, t)));\n    return p;\n}\nfunction HslToRgb(h, s, l) {\n    var c = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    if (s == 0) {\n        c.alphaF = 1;\n        c.redF = c.greenF = c.blueF = 1;\n    } else {\n        var q = l < 0.5 ? $bm_mul(l, $bm_sum(1, s)) : $bm_sub($bm_sum(l, s), $bm_mul(l, s));\n        var p = $bm_sub($bm_mul(2, l), q);\n        c.alphaF = 1;\n        c.redF = HueToRgb(p, q, $bm_sum(h, 1 / 3));\n        c.greenF = HueToRgb(p, q, h);\n        c.blueF = HueToRgb(p, q, $bm_sub(h, 1 / 3));\n    }\n    return c;\n}\nfunction GetColorFromKulerScheme(colors, idx, total) {\n    var colorVal = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    var incr = $bm_div(5, total);\n    var frac = $bm_mul(incr, $bm_sub(idx, 1));\n    var low = Math.max(0, Math.floor(frac));\n    var high = Math.min(4, Math.ceil(frac));\n    if (low != high) {\n        colorVal.alphaF = 1;\n        colorVal.redF = $bm_div($bm_div($bm_sum(colors[low][0], colors[high][0]), 2), 255);\n        colorVal.greenF = $bm_div($bm_div($bm_sum(colors[low][1], colors[high][1]), 2), 255);\n        colorVal.blueF = $bm_div($bm_div($bm_sum(colors[low][2], colors[high][2]), 2), 255);\n    } else {\n        colorVal.alphaF = 1;\n        colorVal.redF = $bm_div(colors[low][0], 255);\n        colorVal.greenF = $bm_div(colors[low][1], 255);\n        colorVal.blueF = $bm_div(colors[low][2], 255);\n    }\n    return colorVal;\n}\nfunction GetPathColor(paletteId, pathId, numPaths) {\n    var firstScratch, secondScratch, L, pts, pt;\n    var colorVal = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    switch (paletteId) {\n    case 1: {\n            firstScratch = [\n                0,\n                0,\n                0\n            ];\n            try {\n                firstScratch = fx('MB ConnectLayersProStyles-0023').value;\n            } catch (e) {\n            }\n            colorVal.alphaF = 1;\n            colorVal.redF = firstScratch[0];\n            colorVal.greenF = firstScratch[1];\n            colorVal.blueF = firstScratch[2];\n            break;\n        }\n    case 2: {\n            firstScratch = secondScratch = [\n                0,\n                0,\n                0\n            ];\n            try {\n                firstScratch = fx('MB ConnectLayersProStyles-0023').value;\n                secondScratch = fx('End Color').value;\n            } catch (e) {\n            }\n            colorVal.alphaF = 1;\n            colorVal.redF = linear(pathId, 1, numPaths, firstScratch[0], secondScratch[0]);\n            colorVal.greenF = linear(pathId, 1, numPaths, firstScratch[1], secondScratch[1]);\n            colorVal.blueF = linear(pathId, 1, numPaths, firstScratch[2], secondScratch[2]);\n            break;\n        }\n    case 3: {\n            var c = HslToRgb(pathId / numPaths, sat, luma);\n            colorVal.alphaF = 1;\n            colorVal.redF = c.redF;\n            colorVal.greenF = c.greenF;\n            colorVal.blueF = c.blueF;\n            break;\n        }\n    case 4: {\n            colorVal.alphaF = 1;\n            colorVal.redF = random();\n            colorVal.greenF = random();\n            colorVal.blueF = random();\n            break;\n        }\n    case 5: {\n            try {\n                L = fx('Color Layer');\n                pts = content('Chain 2').content('Paths').content('Path 1').content('Path').path.points();\n                pt = [\n                    0,\n                    0\n                ];\n                for (var i = 0; i < pts.length; i++) {\n                    pt += toComp(pts[i]);\n                }\n                pt /= pts.length;\n                if (pt.length == 3)\n                    pt.pop();\n                pt = L.fromCompToSurface(pt);\n                c = L.sampleImage(pt);\n                colorVal.alphaF = c[3];\n                colorVal.redF = c[0];\n                colorVal.greenF = c[1];\n                colorVal.blueF = c[2];\n            } catch (e) {\n                colorVal.alphaF = colorVal.redF = colorVal.greenF = colorVal.blueF = 0;\n            }\n            break;\n        }\n    case 6: {\n            break;\n        }\n    case 7: {\n            var colors = [\n                [\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    38,\n                    50,\n                    72\n                ],\n                [\n                    126,\n                    138,\n                    162\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    255,\n                    152,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 8: {\n            var colors = [\n                [\n                    207,\n                    194,\n                    145\n                ],\n                [\n                    255,\n                    246,\n                    197\n                ],\n                [\n                    161,\n                    232,\n                    217\n                ],\n                [\n                    255,\n                    113,\n                    44\n                ],\n                [\n                    105,\n                    93,\n                    70\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 9: {\n            var colors = [\n                [\n                    194,\n                    71,\n                    4\n                ],\n                [\n                    217,\n                    204,\n                    60\n                ],\n                [\n                    255,\n                    235,\n                    121\n                ],\n                [\n                    160,\n                    224,\n                    169\n                ],\n                [\n                    0,\n                    173,\n                    167\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 10: {\n            var colors = [\n                [\n                    43,\n                    58,\n                    66\n                ],\n                [\n                    63,\n                    87,\n                    101\n                ],\n                [\n                    189,\n                    212,\n                    222\n                ],\n                [\n                    239,\n                    239,\n                    239\n                ],\n                [\n                    255,\n                    83,\n                    13\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 11: {\n            var colors = [\n                [\n                    185,\n                    18,\n                    27\n                ],\n                [\n                    76,\n                    27,\n                    27\n                ],\n                [\n                    246,\n                    228,\n                    151\n                ],\n                [\n                    252,\n                    250,\n                    225\n                ],\n                [\n                    189,\n                    141,\n                    70\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 12: {\n            var colors = [\n                [\n                    0,\n                    88,\n                    95\n                ],\n                [\n                    0,\n                    147,\n                    147\n                ],\n                [\n                    255,\n                    255,\n                    196\n                ],\n                [\n                    240,\n                    237,\n                    187\n                ],\n                [\n                    255,\n                    56,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 13: {\n            var colors = [\n                [\n                    70,\n                    137,\n                    102\n                ],\n                [\n                    255,\n                    240,\n                    165\n                ],\n                [\n                    255,\n                    176,\n                    59\n                ],\n                [\n                    182,\n                    73,\n                    38\n                ],\n                [\n                    142,\n                    40,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 14: {\n            var colors = [\n                [\n                    47,\n                    41,\n                    51\n                ],\n                [\n                    1,\n                    162,\n                    166\n                ],\n                [\n                    41,\n                    217,\n                    194\n                ],\n                [\n                    189,\n                    242,\n                    113\n                ],\n                [\n                    255,\n                    255,\n                    166\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 15: {\n            var colors = [\n                [\n                    150,\n                    45,\n                    62\n                ],\n                [\n                    52,\n                    54,\n                    66\n                ],\n                [\n                    151,\n                    156,\n                    156\n                ],\n                [\n                    242,\n                    235,\n                    199\n                ],\n                [\n                    52,\n                    136,\n                    153\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 16: {\n            var colors = [\n                [\n                    133,\n                    219,\n                    24\n                ],\n                [\n                    205,\n                    232,\n                    85\n                ],\n                [\n                    245,\n                    246,\n                    212\n                ],\n                [\n                    167,\n                    197,\n                    32\n                ],\n                [\n                    73,\n                    63,\n                    11\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 17: {\n            var colors = [\n                [\n                    213,\n                    251,\n                    255\n                ],\n                [\n                    159,\n                    188,\n                    191\n                ],\n                [\n                    100,\n                    118,\n                    120\n                ],\n                [\n                    47,\n                    55,\n                    56\n                ],\n                [\n                    89,\n                    216,\n                    230\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 18: {\n            var colors = [\n                [\n                    90,\n                    31,\n                    0\n                ],\n                [\n                    209,\n                    87,\n                    13\n                ],\n                [\n                    253,\n                    231,\n                    146\n                ],\n                [\n                    71,\n                    119,\n                    37\n                ],\n                [\n                    169,\n                    204,\n                    102\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 19: {\n            var colors = [\n                [\n                    16,\n                    91,\n                    99\n                ],\n                [\n                    255,\n                    250,\n                    213\n                ],\n                [\n                    255,\n                    211,\n                    78\n                ],\n                [\n                    219,\n                    158,\n                    54\n                ],\n                [\n                    189,\n                    73,\n                    50\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 20: {\n            var colors = [\n                [\n                    216,\n                    202,\n                    168\n                ],\n                [\n                    92,\n                    131,\n                    47\n                ],\n                [\n                    40,\n                    73,\n                    7\n                ],\n                [\n                    56,\n                    37,\n                    19\n                ],\n                [\n                    54,\n                    57,\n                    66\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 21: {\n            var colors = [\n                [\n                    252,\n                    255,\n                    245\n                ],\n                [\n                    209,\n                    219,\n                    189\n                ],\n                [\n                    145,\n                    170,\n                    157\n                ],\n                [\n                    62,\n                    96,\n                    111\n                ],\n                [\n                    25,\n                    52,\n                    65\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 22: {\n            var colors = [\n                [\n                    64,\n                    89,\n                    82\n                ],\n                [\n                    156,\n                    155,\n                    122\n                ],\n                [\n                    255,\n                    211,\n                    147\n                ],\n                [\n                    255,\n                    151,\n                    79\n                ],\n                [\n                    245,\n                    79,\n                    41\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 23: {\n            var colors = [\n                [\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    51,\n                    51,\n                    51\n                ],\n                [\n                    255,\n                    53,\n                    139\n                ],\n                [\n                    1,\n                    176,\n                    240\n                ],\n                [\n                    174,\n                    238,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 24: {\n            var colors = [\n                [\n                    108,\n                    110,\n                    88\n                ],\n                [\n                    62,\n                    66,\n                    58\n                ],\n                [\n                    65,\n                    115,\n                    120\n                ],\n                [\n                    164,\n                    207,\n                    190\n                ],\n                [\n                    244,\n                    247,\n                    217\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 25: {\n            var colors = [\n                [\n                    255,\n                    248,\n                    227\n                ],\n                [\n                    204,\n                    204,\n                    159\n                ],\n                [\n                    51,\n                    51,\n                    45\n                ],\n                [\n                    159,\n                    180,\n                    204\n                ],\n                [\n                    219,\n                    65,\n                    5\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 26: {\n            var colors = [\n                [\n                    180,\n                    175,\n                    145\n                ],\n                [\n                    120,\n                    119,\n                    70\n                ],\n                [\n                    64,\n                    65,\n                    30\n                ],\n                [\n                    50,\n                    51,\n                    29\n                ],\n                [\n                    192,\n                    48,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 27: {\n            var colors = [\n                [\n                    4,\n                    191,\n                    191\n                ],\n                [\n                    202,\n                    252,\n                    216\n                ],\n                [\n                    247,\n                    233,\n                    103\n                ],\n                [\n                    169,\n                    207,\n                    84\n                ],\n                [\n                    88,\n                    143,\n                    39\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 28: {\n            var colors = [\n                [\n                    255,\n                    97,\n                    56\n                ],\n                [\n                    255,\n                    255,\n                    157\n                ],\n                [\n                    190,\n                    235,\n                    159\n                ],\n                [\n                    121,\n                    189,\n                    143\n                ],\n                [\n                    0,\n                    163,\n                    136\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 29: {\n            var colors = [\n                [\n                    176,\n                    204,\n                    153\n                ],\n                [\n                    103,\n                    126,\n                    82\n                ],\n                [\n                    183,\n                    202,\n                    121\n                ],\n                [\n                    246,\n                    232,\n                    177\n                ],\n                [\n                    137,\n                    114,\n                    91\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 30: {\n            var colors = [\n                [\n                    62,\n                    69,\n                    76\n                ],\n                [\n                    33,\n                    133,\n                    197\n                ],\n                [\n                    126,\n                    206,\n                    253\n                ],\n                [\n                    255,\n                    246,\n                    229\n                ],\n                [\n                    255,\n                    127,\n                    102\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 31: {\n            var colors = [\n                [\n                    230,\n                    226,\n                    175\n                ],\n                [\n                    167,\n                    163,\n                    126\n                ],\n                [\n                    239,\n                    236,\n                    202\n                ],\n                [\n                    4,\n                    99,\n                    128\n                ],\n                [\n                    0,\n                    47,\n                    47\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 32: {\n            var colors = [\n                [\n                    220,\n                    53,\n                    34\n                ],\n                [\n                    217,\n                    203,\n                    158\n                ],\n                [\n                    55,\n                    65,\n                    64\n                ],\n                [\n                    42,\n                    44,\n                    43\n                ],\n                [\n                    30,\n                    30,\n                    32\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 33: {\n            var colors = [\n                [\n                    89,\n                    82,\n                    65\n                ],\n                [\n                    184,\n                    174,\n                    156\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    172,\n                    207,\n                    204\n                ],\n                [\n                    138,\n                    9,\n                    23\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 34: {\n            var colors = [\n                [\n                    0,\n                    67,\n                    88\n                ],\n                [\n                    31,\n                    138,\n                    112\n                ],\n                [\n                    190,\n                    219,\n                    57\n                ],\n                [\n                    255,\n                    225,\n                    26\n                ],\n                [\n                    253,\n                    116,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 35: {\n            var colors = [\n                [\n                    125,\n                    138,\n                    46\n                ],\n                [\n                    201,\n                    215,\n                    135\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    255,\n                    192,\n                    169\n                ],\n                [\n                    255,\n                    133,\n                    152\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 36: {\n            var colors = [\n                [\n                    16,\n                    34,\n                    13\n                ],\n                [\n                    149,\n                    171,\n                    99\n                ],\n                [\n                    189,\n                    214,\n                    132\n                ],\n                [\n                    226,\n                    240,\n                    214\n                ],\n                [\n                    246,\n                    255,\n                    224\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    default:\n        break;\n    }\n    return colorVal;\n}\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\nfillEnabB = fx('Enable Fill').value > 0;\nres = value;\nif (fillEnabB) {\n    paletteId = 1;\n    try {\n        paletteId = fx('Fill Palette').value;\n    } catch (e) {\n    }\n    pathId = 1;\n    numPaths = 1;\n    if (paletteId == 3) {\n        sat = luma = 0.5;\n        try {\n            sat = $bm_div(fx('Saturation').value, 100);\n            luma = $bm_div(fx('Luminance').value, 100);\n        } catch (e) {\n        }\n    } else if (paletteId == 4) {\n        seed = 1;\n        try {\n            seed = fx('Random Seed').value;\n        } catch (e) {\n        }\n        seedRandom(seed, true);\n    }\n    cVal = GetPathColor(paletteId, pathId, numPaths);\n    res = [\n        cVal.redF,\n        cVal.greenF,\n        cVal.blueF,\n        cVal.alphaF\n    ];\n}\n$bm_rt = res;"},"o":{"a":0,"k":100,"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, res, fillEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, paletteId, paletteId, L, L, L, pts, pt, pt, pt, pt, c, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\nif (fx('MB ConnectLayersProStyles-0034').value > 0)\n    res = 0;\nelse {\n    fillEnabB = fx('Enable Fill').value > 0;\n    if (fillEnabB) {\n        res = fx('MB ConnectLayersProStyles-0029').value;\n        opaDistB = fx('MB ConnectLayersProStyles-0030').value > 0;\n        if (opaDistB) {\n            near = fx('MB ConnectLayersProStyles-0031').value;\n            far = fx('MB ConnectLayersProStyles-0032').value;\n            reverseB = fx('MB ConnectLayersProStyles-0033').value > 0;\n            path = content('Chain 2').content('Paths').content('Path 1').content('Path').path;\n            pts = path.points();\n            d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n            if (d <= near)\n                res = 100;\n            else if (d >= far)\n                res = 0;\n            else\n                res *= ease(d, near, far, 1, 0);\n            if (reverseB)\n                res = $bm_sub(100, res);\n        }\n        paletteId = 1;\n        try {\n            paletteId = fx('Fill Palette').value;\n        } catch (e) {\n        }\n        if (paletteId == 5) {\n            L = null;\n            try {\n                L = fx('Color Layer');\n            } catch (e) {\n                L = null;\n            }\n            if (L) {\n                pts = content('Chain 2').content('Paths').content('Path 1').content('Path').path.points();\n                pt = [\n                    0,\n                    0\n                ];\n                for (var i = 0; i < pts.length; i++) {\n                    pt = $bm_sum(pt, toComp(pts[i]));\n                }\n                pt /= pts.length;\n                if (pt.length == 3)\n                    pt.pop();\n                pt = L.fromCompToSurface(pt);\n                c = L.sampleImage(pt);\n                res *= c[3];\n            } else\n                res = 0;\n        }\n    } else\n        res = 0;\n}\n$bm_rt = res;"},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    res = fx('MB ConnectLayersProStyles-0029').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0030').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0031').value;\n        far = fx('MB ConnectLayersProStyles-0032').value;\n        reverseB = fx('MB ConnectLayersProStyles-0033').value > 0;\n        path = content('Chain 2').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n} else\n    res = 0;\n$bm_rt = res;"},"r":1,"bm":0,"g":{"p":2,"k":{"a":0,"k":[0,1,1,1,1,0,0,0],"ix":9}},"s":{"a":0,"k":[0,0],"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 2').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0039').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = startPt;\n} else\n    $bm_rt = value;"},"e":{"a":0,"k":[100,0],"ix":6,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 2').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0039').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = endPt;\n} else\n    $bm_rt = value;"},"t":1,"nm":"Gradient Fill","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path 1","np":7,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Paths","np":6,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Chain 2","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":3,"nm":"Calque de forme 4: Tracé 1 [1.1.2]","cl":"1 2","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[125,159,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar srcLayer = thisComp.layer('Calque de forme 4');\nvar srcPath = srcLayer('ADBE Root Vectors Group')(1)('ADBE Vectors Group')(1)('ADBE Vector Shape').points()[2];\n$bm_rt = srcLayer.toComp(srcPath);"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"Chain 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[0,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Connect Layers Pro - Styles","np":152,"mn":"MB ConnectLayersProStyles","ix":1,"en":1,"ef":[{"ty":6,"nm":"Stroke","mn":"MB ConnectLayersProStyles-0001","ix":1,"v":0},{"ty":2,"nm":"Stroke Color","mn":"MB ConnectLayersProStyles-0002","ix":2,"v":{"a":0,"k":[0,0,0,0],"ix":2}},{"ty":0,"nm":"Stroke Opacity","mn":"MB ConnectLayersProStyles-0003","ix":3,"v":{"a":0,"k":100,"ix":3}},{"ty":7,"nm":"Opacity From Distance","mn":"MB ConnectLayersProStyles-0004","ix":4,"v":{"a":0,"k":0,"ix":4}},{"ty":0,"nm":"Near (px)","mn":"MB ConnectLayersProStyles-0005","ix":5,"v":{"a":0,"k":100,"ix":5}},{"ty":0,"nm":"Far (px)","mn":"MB ConnectLayersProStyles-0006","ix":6,"v":{"a":0,"k":400,"ix":6}},{"ty":7,"nm":"Reverse Behavior","mn":"MB ConnectLayersProStyles-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":0,"nm":"Stroke Width","mn":"MB ConnectLayersProStyles-0008","ix":8,"v":{"a":0,"k":20,"ix":8}},{"ty":7,"nm":"Line Cap","mn":"MB ConnectLayersProStyles-0009","ix":9,"v":{"a":0,"k":1,"ix":9}},{"ty":7,"nm":"Line Join","mn":"MB ConnectLayersProStyles-0010","ix":10,"v":{"a":0,"k":1,"ix":10}},{"ty":0,"nm":"Miter Limit","mn":"MB ConnectLayersProStyles-0011","ix":11,"v":{"a":0,"k":4,"ix":11}},{"ty":7,"nm":"Enable Gradient","mn":"MB ConnectLayersProStyles-0012","ix":12,"v":{"a":0,"k":0,"ix":12}},{"ty":7,"nm":"Gradient Type","mn":"MB ConnectLayersProStyles-0013","ix":13,"v":{"a":0,"k":1,"ix":13}},{"ty":0,"nm":"Highlight Length","mn":"MB ConnectLayersProStyles-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Highlight Angle","mn":"MB ConnectLayersProStyles-0015","ix":15,"v":{"a":0,"k":0,"ix":15}},{"ty":6,"nm":"Gradient Colors","mn":"MB ConnectLayersProStyles-0016","ix":16,"v":0},{"ty":0,"nm":"Gradient Scale (%)","mn":"MB ConnectLayersProStyles-0017","ix":17,"v":{"a":0,"k":100,"ix":17}},{"ty":7,"nm":"Reverse Path","mn":"MB ConnectLayersProStyles-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0019","ix":19,"v":0},{"ty":6,"nm":"Fill","mn":"MB ConnectLayersProStyles-0020","ix":20,"v":0},{"ty":7,"nm":"Enable Fill","mn":"MB ConnectLayersProStyles-0021","ix":21,"v":{"a":0,"k":0,"ix":21}},{"ty":7,"nm":"Fill Palette","mn":"MB ConnectLayersProStyles-0022","ix":22,"v":{"a":0,"k":1,"ix":22}},{"ty":2,"nm":"Fill Color","mn":"MB ConnectLayersProStyles-0023","ix":23,"v":{"a":0,"k":[0.78431372549,0.549019607843,0.972549019608,1],"ix":23}},{"ty":2,"nm":"End Color","mn":"MB ConnectLayersProStyles-0024","ix":24,"v":{"a":0,"k":[0.121568627451,0,0.247058823529,1],"ix":24}},{"ty":0,"nm":"Saturation","mn":"MB ConnectLayersProStyles-0025","ix":25,"v":{"a":0,"k":50,"ix":25}},{"ty":0,"nm":"Luminance","mn":"MB ConnectLayersProStyles-0026","ix":26,"v":{"a":0,"k":50,"ix":26}},{"ty":0,"nm":"Random Seed","mn":"MB ConnectLayersProStyles-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":10,"nm":"Color Layer","mn":"MB ConnectLayersProStyles-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":0,"nm":"Fill Opacity","mn":"MB ConnectLayersProStyles-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":7,"nm":"Opacity From Distance","mn":"MB ConnectLayersProStyles-0030","ix":30,"v":{"a":0,"k":0,"ix":30}},{"ty":0,"nm":"Near (px)","mn":"MB ConnectLayersProStyles-0031","ix":31,"v":{"a":0,"k":100,"ix":31}},{"ty":0,"nm":"Far (px)","mn":"MB ConnectLayersProStyles-0032","ix":32,"v":{"a":0,"k":400,"ix":32}},{"ty":7,"nm":"Reverse Behavior","mn":"MB ConnectLayersProStyles-0033","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":7,"nm":"Enable Gradient","mn":"MB ConnectLayersProStyles-0034","ix":34,"v":{"a":0,"k":0,"ix":34}},{"ty":7,"nm":"Gradient Type","mn":"MB ConnectLayersProStyles-0035","ix":35,"v":{"a":0,"k":1,"ix":35}},{"ty":0,"nm":"Highlight Length","mn":"MB ConnectLayersProStyles-0036","ix":36,"v":{"a":0,"k":0,"ix":36}},{"ty":0,"nm":"Highlight Angle","mn":"MB ConnectLayersProStyles-0037","ix":37,"v":{"a":0,"k":0,"ix":37}},{"ty":6,"nm":"Gradient Colors","mn":"MB ConnectLayersProStyles-0038","ix":38,"v":0},{"ty":0,"nm":"Gradient Scale (%)","mn":"MB ConnectLayersProStyles-0039","ix":39,"v":{"a":0,"k":100,"ix":39}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0040","ix":40,"v":0},{},{"ty":6,"nm":"Enable Modules","mn":"MB ConnectLayersProStyles-0042","ix":42,"v":0},{"ty":7,"nm":"Arrowheads","mn":"MB ConnectLayersProStyles-0043","ix":43,"v":{"a":0,"k":0,"ix":43}},{"ty":7,"nm":"Curviness","mn":"MB ConnectLayersProStyles-0044","ix":44,"v":{"a":0,"k":0,"ix":44}},{"ty":7,"nm":"Dashes","mn":"MB ConnectLayersProStyles-0045","ix":45,"v":{"a":0,"k":0,"ix":45}},{"ty":7,"nm":"Offset","mn":"MB ConnectLayersProStyles-0046","ix":46,"v":{"a":0,"k":0,"ix":46}},{"ty":7,"nm":"Repeater","mn":"MB ConnectLayersProStyles-0047","ix":47,"v":{"a":0,"k":0,"ix":47}},{"ty":7,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0048","ix":48,"v":{"a":0,"k":0,"ix":48}},{"ty":7,"nm":"Trim","mn":"MB ConnectLayersProStyles-0049","ix":49,"v":{"a":0,"k":0,"ix":49}},{"ty":7,"nm":"Twist","mn":"MB ConnectLayersProStyles-0050","ix":50,"v":{"a":0,"k":0,"ix":50}},{"ty":7,"nm":"Wiggle","mn":"MB ConnectLayersProStyles-0051","ix":51,"v":{"a":0,"k":0,"ix":51}},{"ty":7,"nm":"Zig Zag","mn":"MB ConnectLayersProStyles-0052","ix":52,"v":{"a":0,"k":0,"ix":52}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0053","ix":53,"v":0},{"ty":6,"nm":"Arrowheads","mn":"MB ConnectLayersProStyles-0054","ix":54,"v":0},{"ty":7,"nm":"Start","mn":"MB ConnectLayersProStyles-0055","ix":55,"v":{"a":0,"k":1,"ix":55}},{"ty":7,"nm":"End","mn":"MB ConnectLayersProStyles-0056","ix":56,"v":{"a":0,"k":1,"ix":56}},{"ty":2,"nm":"Stroke Color","mn":"MB ConnectLayersProStyles-0057","ix":57,"v":{"a":0,"k":[1,1,1,1],"ix":57}},{"ty":0,"nm":"Stroke Opacity","mn":"MB ConnectLayersProStyles-0058","ix":58,"v":{"a":0,"k":100,"ix":58}},{"ty":0,"nm":"Stroke Width","mn":"MB ConnectLayersProStyles-0059","ix":59,"v":{"a":0,"k":0,"ix":59}},{"ty":2,"nm":"Fill Color","mn":"MB ConnectLayersProStyles-0060","ix":60,"v":{"a":0,"k":[1,1,1,1],"ix":60}},{"ty":0,"nm":"Fill Opacity","mn":"MB ConnectLayersProStyles-0061","ix":61,"v":{"a":0,"k":100,"ix":61}},{"ty":7,"nm":"Opacity from Path","mn":"MB ConnectLayersProStyles-0062","ix":62,"v":{"a":0,"k":1,"ix":62}},{"ty":0,"nm":"Circle/Square Size","mn":"MB ConnectLayersProStyles-0063","ix":63,"v":{"a":0,"k":15,"ix":63}},{"ty":0,"nm":"Triangle Scale","mn":"MB ConnectLayersProStyles-0064","ix":64,"v":{"a":0,"k":100,"ix":64}},{"ty":0,"nm":"Triangle Length","mn":"MB ConnectLayersProStyles-0065","ix":65,"v":{"a":0,"k":40,"ix":65}},{"ty":0,"nm":"Triangle Width","mn":"MB ConnectLayersProStyles-0066","ix":66,"v":{"a":0,"k":20,"ix":66}},{"ty":0,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0067","ix":67,"v":{"a":0,"k":0,"ix":67}},{"ty":6,"nm":"Customization","mn":"MB ConnectLayersProStyles-0068","ix":68,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0069","ix":69,"v":0},{"ty":6,"nm":"Curviness","mn":"MB ConnectLayersProStyles-0070","ix":70,"v":0},{"ty":7,"nm":"Function","mn":"MB ConnectLayersProStyles-0071","ix":71,"v":{"a":0,"k":1,"ix":71}},{"ty":7,"nm":"Flip Direction","mn":"MB ConnectLayersProStyles-0072","ix":72,"v":{"a":0,"k":0,"ix":72}},{"ty":0,"nm":"Tension","mn":"MB ConnectLayersProStyles-0073","ix":73,"v":{"a":0,"k":33.333,"ix":73}},{"ty":7,"nm":"Preset","mn":"MB ConnectLayersProStyles-0074","ix":74,"v":{"a":0,"k":1,"ix":74}},{"ty":7,"nm":"Preset","mn":"MB ConnectLayersProStyles-0075","ix":75,"v":{"a":0,"k":1,"ix":75}},{"ty":0,"nm":"Stiffness","mn":"MB ConnectLayersProStyles-0076","ix":76,"v":{"a":0,"k":100,"ix":76}},{"ty":0,"nm":"Damping","mn":"MB ConnectLayersProStyles-0077","ix":77,"v":{"a":0,"k":50,"ix":77}},{"ty":0,"nm":"Max Tangent Length","mn":"MB ConnectLayersProStyles-0078","ix":78,"v":{"a":0,"k":33.333,"ix":78}},{"ty":0,"nm":"Start Tangent X","mn":"MB ConnectLayersProStyles-0079","ix":79,"v":{"a":0,"k":0,"ix":79}},{"ty":0,"nm":"Start Tangent Y","mn":"MB ConnectLayersProStyles-0080","ix":80,"v":{"a":0,"k":0,"ix":80}},{"ty":0,"nm":"End Tangent X","mn":"MB ConnectLayersProStyles-0081","ix":81,"v":{"a":0,"k":0,"ix":81}},{"ty":0,"nm":"End Tangent Y","mn":"MB ConnectLayersProStyles-0082","ix":82,"v":{"a":0,"k":0,"ix":82}},{"ty":0,"nm":"Stiffness","mn":"MB ConnectLayersProStyles-0083","ix":83,"v":{"a":0,"k":50,"ix":83}},{"ty":0,"nm":"Solver Steps","mn":"MB ConnectLayersProStyles-0084","ix":84,"v":{"a":0,"k":5,"ix":84}},{"ty":0,"nm":"Subsegments","mn":"MB ConnectLayersProStyles-0085","ix":85,"v":{"a":0,"k":10,"ix":85}},{"ty":0,"nm":"Gravity","mn":"MB ConnectLayersProStyles-0086","ix":86,"v":{"a":0,"k":0,"ix":86}},{"ty":0,"nm":"Dynamics Start Frame","mn":"MB ConnectLayersProStyles-0087","ix":87,"v":{"a":0,"k":0,"ix":87}},{"ty":0,"nm":"Precision","mn":"MB ConnectLayersProStyles-0088","ix":88,"v":{"a":0,"k":15,"ix":88}},{"ty":0,"nm":"Angle (3D only)","mn":"MB ConnectLayersProStyles-0089","ix":89,"v":{"a":0,"k":45,"ix":89}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0090","ix":90,"v":0},{"ty":6,"nm":"Dashes","mn":"MB ConnectLayersProStyles-0091","ix":91,"v":0},{"ty":0,"nm":"Dash","mn":"MB ConnectLayersProStyles-0092","ix":92,"v":{"a":0,"k":10,"ix":92}},{"ty":0,"nm":"Gap","mn":"MB ConnectLayersProStyles-0093","ix":93,"v":{"a":0,"k":10,"ix":93}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0094","ix":94,"v":{"a":0,"k":0,"ix":94}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0095","ix":95,"v":0},{"ty":6,"nm":"Offset","mn":"MB ConnectLayersProStyles-0096","ix":96,"v":0},{"ty":0,"nm":"Amount","mn":"MB ConnectLayersProStyles-0097","ix":97,"v":{"a":0,"k":0,"ix":97}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0098","ix":98,"v":0},{"ty":6,"nm":"Repeater","mn":"MB ConnectLayersProStyles-0099","ix":99,"v":0},{"ty":0,"nm":"Copies","mn":"MB ConnectLayersProStyles-0100","ix":100,"v":{"a":0,"k":3,"ix":100}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0101","ix":101,"v":{"a":0,"k":0,"ix":101}},{"ty":7,"nm":"Symmetric Offset","mn":"MB ConnectLayersProStyles-0102","ix":102,"v":{"a":0,"k":1,"ix":102}},{"ty":6,"nm":"Transform: Repeater","mn":"MB ConnectLayersProStyles-0103","ix":103,"v":0},{"ty":0,"nm":"Anchor Point X","mn":"MB ConnectLayersProStyles-0104","ix":104,"v":{"a":0,"k":0,"ix":104}},{"ty":0,"nm":"Anchor Point Y","mn":"MB ConnectLayersProStyles-1104","ix":105,"v":{"a":0,"k":0,"ix":105}},{"ty":7,"nm":"Center Anchor","mn":"MB ConnectLayersProStyles-0106","ix":106,"v":{"a":0,"k":1,"ix":106}},{"ty":0,"nm":"Position Offset","mn":"MB ConnectLayersProStyles-0107","ix":107,"v":{"a":0,"k":0,"ix":107}},{"ty":0,"nm":"Position X","mn":"MB ConnectLayersProStyles-0108","ix":108,"v":{"a":0,"k":0,"ix":108}},{"ty":0,"nm":"Position Y","mn":"MB ConnectLayersProStyles-0109","ix":109,"v":{"a":0,"k":0,"ix":109}},{"ty":0,"nm":"Scale","mn":"MB ConnectLayersProStyles-0110","ix":110,"v":{"a":0,"k":100,"ix":110}},{"ty":0,"nm":"Rotation","mn":"MB ConnectLayersProStyles-0111","ix":111,"v":{"a":0,"k":0,"ix":111}},{"ty":0,"nm":"Start Opacity","mn":"MB ConnectLayersProStyles-0112","ix":112,"v":{"a":0,"k":100,"ix":112}},{"ty":0,"nm":"End Opacity","mn":"MB ConnectLayersProStyles-0113","ix":113,"v":{"a":0,"k":100,"ix":113}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0114","ix":114,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0115","ix":115,"v":0},{"ty":6,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0116","ix":116,"v":0},{"ty":0,"nm":"Radius","mn":"MB ConnectLayersProStyles-0117","ix":117,"v":{"a":0,"k":10,"ix":117}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0118","ix":118,"v":0},{"ty":6,"nm":"Trim","mn":"MB ConnectLayersProStyles-0119","ix":119,"v":0},{"ty":0,"nm":"Start","mn":"MB ConnectLayersProStyles-0120","ix":120,"v":{"a":0,"k":0,"ix":120}},{"ty":0,"nm":"End","mn":"MB ConnectLayersProStyles-0121","ix":121,"v":{"a":0,"k":100,"ix":121}},{"ty":0,"nm":"Both Ends","mn":"MB ConnectLayersProStyles-0122","ix":122,"v":{"a":0,"k":0,"ix":122}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0123","ix":123,"v":{"a":0,"k":0,"ix":123}},{"ty":7,"nm":"Trim Multiple Shapes","mn":"MB ConnectLayersProStyles-0124","ix":124,"v":{"a":0,"k":1,"ix":124}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0125","ix":125,"v":0},{"ty":6,"nm":"Twist","mn":"MB ConnectLayersProStyles-0126","ix":126,"v":0},{"ty":0,"nm":"Angle","mn":"MB ConnectLayersProStyles-0127","ix":127,"v":{"a":0,"k":10,"ix":127}},{"ty":0,"nm":"Center X","mn":"MB ConnectLayersProStyles-0128","ix":128,"v":{"a":0,"k":0,"ix":128}},{"ty":0,"nm":"Center Y","mn":"MB ConnectLayersProStyles-0129","ix":129,"v":{"a":0,"k":0,"ix":129}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0130","ix":130,"v":0},{"ty":6,"nm":"Wiggle","mn":"MB ConnectLayersProStyles-0131","ix":131,"v":0},{"ty":0,"nm":"Size","mn":"MB ConnectLayersProStyles-0132","ix":132,"v":{"a":0,"k":10,"ix":132}},{"ty":0,"nm":"Detail","mn":"MB ConnectLayersProStyles-0133","ix":133,"v":{"a":0,"k":10,"ix":133}},{"ty":7,"nm":"Points","mn":"MB ConnectLayersProStyles-0134","ix":134,"v":{"a":0,"k":1,"ix":134}},{"ty":0,"nm":"Wiggles/Second","mn":"MB ConnectLayersProStyles-0135","ix":135,"v":{"a":0,"k":2,"ix":135}},{"ty":0,"nm":"Correlation","mn":"MB ConnectLayersProStyles-0136","ix":136,"v":{"a":0,"k":50,"ix":136}},{"ty":0,"nm":"Temporal Phase","mn":"MB ConnectLayersProStyles-0137","ix":137,"v":{"a":0,"k":0,"ix":137}},{"ty":0,"nm":"Spatial Phase","mn":"MB ConnectLayersProStyles-0138","ix":138,"v":{"a":0,"k":0,"ix":138}},{"ty":0,"nm":"Random Seed","mn":"MB ConnectLayersProStyles-0139","ix":139,"v":{"a":0,"k":0,"ix":139}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0140","ix":140,"v":0},{"ty":6,"nm":"Zig Zag","mn":"MB ConnectLayersProStyles-0141","ix":141,"v":0},{"ty":0,"nm":"Size","mn":"MB ConnectLayersProStyles-0142","ix":142,"v":{"a":0,"k":5,"ix":142}},{"ty":0,"nm":"Ridges per segment","mn":"MB ConnectLayersProStyles-0143","ix":143,"v":{"a":0,"k":10,"ix":143}},{"ty":7,"nm":"Points","mn":"MB ConnectLayersProStyles-0144","ix":144,"v":{"a":0,"k":1,"ix":144}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0145","ix":145,"v":0},{"ty":6,"nm":"Assistant","mn":"MB ConnectLayersProStyles-0146","ix":146,"v":0},{"ty":6,"nm":"Path Expressions","mn":"MB ConnectLayersProStyles-0147","ix":147,"v":0},{"ty":6,"nm":"Style Expressions","mn":"MB ConnectLayersProStyles-0148","ix":148,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0149","ix":149,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0150","ix":150,"v":0}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.506,747.257],[743.506,747.257]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.453,747.319],[743.579,747.193]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":2,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.264,747.542],[743.838,746.963]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":3,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[746.044,751.071],[747.433,749.671]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":4,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[745.5,752.334],[748.176,749.636]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":5,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[744.691,752.033],[749.279,747.407]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":6,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[742.831,754.034],[750.195,746.609]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":7,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[741.431,756.167],[752.846,744.659]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":8,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[738.542,759.013],[756.198,741.214]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":9,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[734.498,764.615],[763.201,735.679]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[720.007,780.507],[781.507,718.569]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":11,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[706.892,796.771],[801.19,701.707]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":12,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[701.971,802.501],[807.315,696.3]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":13,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[698.833,805.595],[810.418,693.103]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":14,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[697.12,807.104],[812.756,690.528]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":15,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[696.446,808.857],[814.858,689.482]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":16,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[695.888,810.18],[816.211,688.878]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":17,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[694.593,810.693],[816.205,688.093]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":18,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[694.874,811.097],[817.3,687.676]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":19,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[694.059,811.32],[816.934,687.446]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[694.006,811.382],[817.006,687.382]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":21,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[694.709,810.934],[816.951,687.358]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":22,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[696.999,809.632],[816.772,687.45]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":23,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[701.211,806.051],[816.439,686.492]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":24,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[707.167,800.92],[815.289,685.62]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[717.362,792.689],[815.139,683.947]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":26,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[730.818,780.972],[814.029,682.24]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":27,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[750.851,762.987],[812.424,680.594]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[777.886,732.723],[810.496,677.374]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":29,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[813.45,673.297],[803.676,669.41]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[874.04,473.931],[799.7,661.357]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[832.898,283.651],[793.348,658.009]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":32,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[801.576,225.996],[797.594,656.715]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":33,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[780.627,196.27],[799.425,657.518]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":34,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[766.09,178.313],[794.279,658.047]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":35,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[755.938,166.799],[794.215,658.039]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":36,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[748.952,159.33],[794.048,658.002]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":37,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[744.325,154.604],[793.844,657.948]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":38,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[741.478,151.805],[793.66,657.895]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":39,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[739.968,150.386],[793.536,657.86]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[739.507,149.969],[793.497,657.843]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":41,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[740.665,150.357],[793.567,658.82]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":42,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[744.43,151.665],[793.776,662.002]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":43,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[751.34,154.259],[794.077,667.87]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":44,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[762.094,158.817],[794.329,677.096]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":45,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[777.575,166.556],[797.962,689.405]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":46,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[798.82,179.531],[797.786,709.032]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":47,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[827.111,201.203],[793.785,737.626]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":48,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[868.207,240.41],[783.313,779.694]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":49,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[911.475,308.085],[755.985,840.367]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":50,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[958.516,472.857],[660.521,947.387]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":51,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[752.75,822.777],[303.345,974.171]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":52,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[609.709,845.985],[184.566,887.475]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":53,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[538.488,835.491],[141.693,830.358]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":54,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[500.516,819.063],[120.88,791.047]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":55,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[477.559,804.826],[109.544,763.117]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":56,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[462.216,793.561],[102.999,743.085]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":57,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[453.056,785.165],[99.108,728.856]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":58,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[454.853,779.845],[96.787,719.074]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":59,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[451.052,776.023],[95.449,712.809]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[449.04,773.903],[94.768,709.398]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[448.429,773.245],[94.565,708.349]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":62,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[448.627,773.622],[94.622,708.439]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":63,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[449.277,774.853],[94.823,708.725]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":64,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[450.489,777.118],[95.24,709.258]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":65,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[452.425,780.66],[96.011,710.104]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":66,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[455.336,785.814],[97.372,711.358]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":67,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[451.624,792.067],[99.73,713.167]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[458.74,802.665],[103.815,715.771]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":69,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[468.759,817.318],[111.078,719.57]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":70,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[491.748,837.623],[124.825,725.224]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":71,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[517.221,869.776],[153.467,733.759]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":72,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[567.758,906.532],[205.609,745.123]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":73,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[621.251,930.191],[274.767,751.918]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":74,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[657.457,938.6],[326.236,751.684]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":75,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[683.32,940.613],[364.502,749.411]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":76,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[697.402,937.619],[396.757,748.671]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":77,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[711.642,936.727],[419.977,742.035]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":78,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[723.028,935.301],[442.592,744.57]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":79,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[732.319,933.65],[459.975,742.981]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":80,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[740.007,931.939],[474.295,740.806]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":81,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[746.434,930.261],[486.03,738.061]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":82,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[751.843,928.667],[496.282,735.747]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":83,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[756.413,927.186],[506.941,735.862]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":84,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[760.28,925.835],[513.09,732.901]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":85,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[763.551,924.619],[519.645,731.231]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":86,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[766.309,923.542],[525.238,730.219]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":87,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[768.621,922.601],[528.856,728.483]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":89,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[774.675,923.925],[535.203,725.993]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":91,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[778.983,924.924],[541.824,726.951]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":93,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[775.588,919.549],[545.336,726.551]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":95,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[775.968,919.372],[544.236,725.119]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":270,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[742.006,938.495],[527.302,723.596]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":271,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[742.018,938.403],[524.795,720.783]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":272,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[742.056,938.11],[525.169,720.979]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":273,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[742.123,937.588],[525.836,721.332]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":274,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[742.224,936.8],[526.842,721.868]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":275,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[742.363,935.701],[528.246,722.611]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":276,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[742.547,934.23],[530.125,723.587]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":277,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[742.783,932.304],[532.584,724.843]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":278,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.079,929.807],[535.766,726.433]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":279,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.454,926.58],[539.883,728.426]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":280,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.929,922.366],[545.263,730.924]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":281,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[744.522,916.713],[552.46,734.095]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":282,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[745.286,908.774],[562.534,738.216]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":283,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[746.305,896.498],[578.012,743.79]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":284,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[747.759,872.161],[608.208,752.169]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":285,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[748.31,818.013],[671.739,759.047]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":286,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[747.305,792.644],[699.159,757.267]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":287,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[746.475,779.593],[712.564,755.238]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":288,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[745.818,771.058],[721.054,753.527]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":289,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[745.294,764.94],[727.005,752.118]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":290,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[744.872,760.349],[731.393,750.97]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":291,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[744.523,756.817],[734.714,750.03]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":292,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[744.241,754.079],[737.26,749.268]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":293,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[744.019,751.963],[739.215,748.66]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":294,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.846,750.342],[740.701,748.185]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":295,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.714,749.129],[741.808,747.825]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":296,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.618,748.26],[742.598,747.563]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":297,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.554,747.682],[743.121,747.388]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":298,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.518,747.359],[743.414,747.288]],"c":false}]},{"t":299,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.506,747.257],[743.506,747.257]],"c":false}]}],"ix":2},"nm":"Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0002');"},"o":{"a":0,"k":100,"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB)\n    res = 0;\nelse {\n    res = fx('MB ConnectLayersProStyles-0003').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0004').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0005').value;\n        far = fx('MB ConnectLayersProStyles-0006').value;\n        reverseB = fx('MB ConnectLayersProStyles-0007').value > 0;\n        path = content('Chain 3').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n}\n$bm_rt = res;"},"w":{"a":0,"k":2,"ix":5,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0008');"},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    res = fx('MB ConnectLayersProStyles-0003').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0004').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0005').value;\n        far = fx('MB ConnectLayersProStyles-0006').value;\n        reverseB = fx('MB ConnectLayersProStyles-0007').value > 0;\n        path = content('Chain 3').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n} else\n    res = 0;\n$bm_rt = res;"},"w":{"a":0,"k":2,"ix":10,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0008');"},"g":{"p":2,"k":{"a":0,"k":[0,1,1,1,1,0,0,0],"ix":8}},"s":{"a":0,"k":[0,0],"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 3').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0017').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = startPt;\n} else\n    $bm_rt = value;"},"e":{"a":0,"k":[100,0],"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 3').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0017').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = endPt;\n} else\n    $bm_rt = value;"},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, fillEnabB, res, paletteId, paletteId, pathId, numPaths, sat, sat, luma, seed, seed, cVal, res;\nfunction HueToRgb(p, q, t) {\n    if (t < 0)\n        t++;\n    if (t > 1)\n        t--;\n    if (t < 1 / 6)\n        return $bm_sum(p, $bm_mul($bm_mul($bm_sub(q, p), 6), t));\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return $bm_sum(p, $bm_mul($bm_mul($bm_sub(q, p), 6), $bm_sub(2 / 3, t)));\n    return p;\n}\nfunction HslToRgb(h, s, l) {\n    var c = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    if (s == 0) {\n        c.alphaF = 1;\n        c.redF = c.greenF = c.blueF = 1;\n    } else {\n        var q = l < 0.5 ? $bm_mul(l, $bm_sum(1, s)) : $bm_sub($bm_sum(l, s), $bm_mul(l, s));\n        var p = $bm_sub($bm_mul(2, l), q);\n        c.alphaF = 1;\n        c.redF = HueToRgb(p, q, $bm_sum(h, 1 / 3));\n        c.greenF = HueToRgb(p, q, h);\n        c.blueF = HueToRgb(p, q, $bm_sub(h, 1 / 3));\n    }\n    return c;\n}\nfunction GetColorFromKulerScheme(colors, idx, total) {\n    var colorVal = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    var incr = $bm_div(5, total);\n    var frac = $bm_mul(incr, $bm_sub(idx, 1));\n    var low = Math.max(0, Math.floor(frac));\n    var high = Math.min(4, Math.ceil(frac));\n    if (low != high) {\n        colorVal.alphaF = 1;\n        colorVal.redF = $bm_div($bm_div($bm_sum(colors[low][0], colors[high][0]), 2), 255);\n        colorVal.greenF = $bm_div($bm_div($bm_sum(colors[low][1], colors[high][1]), 2), 255);\n        colorVal.blueF = $bm_div($bm_div($bm_sum(colors[low][2], colors[high][2]), 2), 255);\n    } else {\n        colorVal.alphaF = 1;\n        colorVal.redF = $bm_div(colors[low][0], 255);\n        colorVal.greenF = $bm_div(colors[low][1], 255);\n        colorVal.blueF = $bm_div(colors[low][2], 255);\n    }\n    return colorVal;\n}\nfunction GetPathColor(paletteId, pathId, numPaths) {\n    var firstScratch, secondScratch, L, pts, pt;\n    var colorVal = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    switch (paletteId) {\n    case 1: {\n            firstScratch = [\n                0,\n                0,\n                0\n            ];\n            try {\n                firstScratch = fx('MB ConnectLayersProStyles-0023').value;\n            } catch (e) {\n            }\n            colorVal.alphaF = 1;\n            colorVal.redF = firstScratch[0];\n            colorVal.greenF = firstScratch[1];\n            colorVal.blueF = firstScratch[2];\n            break;\n        }\n    case 2: {\n            firstScratch = secondScratch = [\n                0,\n                0,\n                0\n            ];\n            try {\n                firstScratch = fx('MB ConnectLayersProStyles-0023').value;\n                secondScratch = fx('End Color').value;\n            } catch (e) {\n            }\n            colorVal.alphaF = 1;\n            colorVal.redF = linear(pathId, 1, numPaths, firstScratch[0], secondScratch[0]);\n            colorVal.greenF = linear(pathId, 1, numPaths, firstScratch[1], secondScratch[1]);\n            colorVal.blueF = linear(pathId, 1, numPaths, firstScratch[2], secondScratch[2]);\n            break;\n        }\n    case 3: {\n            var c = HslToRgb(pathId / numPaths, sat, luma);\n            colorVal.alphaF = 1;\n            colorVal.redF = c.redF;\n            colorVal.greenF = c.greenF;\n            colorVal.blueF = c.blueF;\n            break;\n        }\n    case 4: {\n            colorVal.alphaF = 1;\n            colorVal.redF = random();\n            colorVal.greenF = random();\n            colorVal.blueF = random();\n            break;\n        }\n    case 5: {\n            try {\n                L = fx('Color Layer');\n                pts = content('Chain 3').content('Paths').content('Path 1').content('Path').path.points();\n                pt = [\n                    0,\n                    0\n                ];\n                for (var i = 0; i < pts.length; i++) {\n                    pt += toComp(pts[i]);\n                }\n                pt /= pts.length;\n                if (pt.length == 3)\n                    pt.pop();\n                pt = L.fromCompToSurface(pt);\n                c = L.sampleImage(pt);\n                colorVal.alphaF = c[3];\n                colorVal.redF = c[0];\n                colorVal.greenF = c[1];\n                colorVal.blueF = c[2];\n            } catch (e) {\n                colorVal.alphaF = colorVal.redF = colorVal.greenF = colorVal.blueF = 0;\n            }\n            break;\n        }\n    case 6: {\n            break;\n        }\n    case 7: {\n            var colors = [\n                [\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    38,\n                    50,\n                    72\n                ],\n                [\n                    126,\n                    138,\n                    162\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    255,\n                    152,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 8: {\n            var colors = [\n                [\n                    207,\n                    194,\n                    145\n                ],\n                [\n                    255,\n                    246,\n                    197\n                ],\n                [\n                    161,\n                    232,\n                    217\n                ],\n                [\n                    255,\n                    113,\n                    44\n                ],\n                [\n                    105,\n                    93,\n                    70\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 9: {\n            var colors = [\n                [\n                    194,\n                    71,\n                    4\n                ],\n                [\n                    217,\n                    204,\n                    60\n                ],\n                [\n                    255,\n                    235,\n                    121\n                ],\n                [\n                    160,\n                    224,\n                    169\n                ],\n                [\n                    0,\n                    173,\n                    167\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 10: {\n            var colors = [\n                [\n                    43,\n                    58,\n                    66\n                ],\n                [\n                    63,\n                    87,\n                    101\n                ],\n                [\n                    189,\n                    212,\n                    222\n                ],\n                [\n                    239,\n                    239,\n                    239\n                ],\n                [\n                    255,\n                    83,\n                    13\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 11: {\n            var colors = [\n                [\n                    185,\n                    18,\n                    27\n                ],\n                [\n                    76,\n                    27,\n                    27\n                ],\n                [\n                    246,\n                    228,\n                    151\n                ],\n                [\n                    252,\n                    250,\n                    225\n                ],\n                [\n                    189,\n                    141,\n                    70\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 12: {\n            var colors = [\n                [\n                    0,\n                    88,\n                    95\n                ],\n                [\n                    0,\n                    147,\n                    147\n                ],\n                [\n                    255,\n                    255,\n                    196\n                ],\n                [\n                    240,\n                    237,\n                    187\n                ],\n                [\n                    255,\n                    56,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 13: {\n            var colors = [\n                [\n                    70,\n                    137,\n                    102\n                ],\n                [\n                    255,\n                    240,\n                    165\n                ],\n                [\n                    255,\n                    176,\n                    59\n                ],\n                [\n                    182,\n                    73,\n                    38\n                ],\n                [\n                    142,\n                    40,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 14: {\n            var colors = [\n                [\n                    47,\n                    41,\n                    51\n                ],\n                [\n                    1,\n                    162,\n                    166\n                ],\n                [\n                    41,\n                    217,\n                    194\n                ],\n                [\n                    189,\n                    242,\n                    113\n                ],\n                [\n                    255,\n                    255,\n                    166\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 15: {\n            var colors = [\n                [\n                    150,\n                    45,\n                    62\n                ],\n                [\n                    52,\n                    54,\n                    66\n                ],\n                [\n                    151,\n                    156,\n                    156\n                ],\n                [\n                    242,\n                    235,\n                    199\n                ],\n                [\n                    52,\n                    136,\n                    153\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 16: {\n            var colors = [\n                [\n                    133,\n                    219,\n                    24\n                ],\n                [\n                    205,\n                    232,\n                    85\n                ],\n                [\n                    245,\n                    246,\n                    212\n                ],\n                [\n                    167,\n                    197,\n                    32\n                ],\n                [\n                    73,\n                    63,\n                    11\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 17: {\n            var colors = [\n                [\n                    213,\n                    251,\n                    255\n                ],\n                [\n                    159,\n                    188,\n                    191\n                ],\n                [\n                    100,\n                    118,\n                    120\n                ],\n                [\n                    47,\n                    55,\n                    56\n                ],\n                [\n                    89,\n                    216,\n                    230\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 18: {\n            var colors = [\n                [\n                    90,\n                    31,\n                    0\n                ],\n                [\n                    209,\n                    87,\n                    13\n                ],\n                [\n                    253,\n                    231,\n                    146\n                ],\n                [\n                    71,\n                    119,\n                    37\n                ],\n                [\n                    169,\n                    204,\n                    102\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 19: {\n            var colors = [\n                [\n                    16,\n                    91,\n                    99\n                ],\n                [\n                    255,\n                    250,\n                    213\n                ],\n                [\n                    255,\n                    211,\n                    78\n                ],\n                [\n                    219,\n                    158,\n                    54\n                ],\n                [\n                    189,\n                    73,\n                    50\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 20: {\n            var colors = [\n                [\n                    216,\n                    202,\n                    168\n                ],\n                [\n                    92,\n                    131,\n                    47\n                ],\n                [\n                    40,\n                    73,\n                    7\n                ],\n                [\n                    56,\n                    37,\n                    19\n                ],\n                [\n                    54,\n                    57,\n                    66\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 21: {\n            var colors = [\n                [\n                    252,\n                    255,\n                    245\n                ],\n                [\n                    209,\n                    219,\n                    189\n                ],\n                [\n                    145,\n                    170,\n                    157\n                ],\n                [\n                    62,\n                    96,\n                    111\n                ],\n                [\n                    25,\n                    52,\n                    65\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 22: {\n            var colors = [\n                [\n                    64,\n                    89,\n                    82\n                ],\n                [\n                    156,\n                    155,\n                    122\n                ],\n                [\n                    255,\n                    211,\n                    147\n                ],\n                [\n                    255,\n                    151,\n                    79\n                ],\n                [\n                    245,\n                    79,\n                    41\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 23: {\n            var colors = [\n                [\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    51,\n                    51,\n                    51\n                ],\n                [\n                    255,\n                    53,\n                    139\n                ],\n                [\n                    1,\n                    176,\n                    240\n                ],\n                [\n                    174,\n                    238,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 24: {\n            var colors = [\n                [\n                    108,\n                    110,\n                    88\n                ],\n                [\n                    62,\n                    66,\n                    58\n                ],\n                [\n                    65,\n                    115,\n                    120\n                ],\n                [\n                    164,\n                    207,\n                    190\n                ],\n                [\n                    244,\n                    247,\n                    217\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 25: {\n            var colors = [\n                [\n                    255,\n                    248,\n                    227\n                ],\n                [\n                    204,\n                    204,\n                    159\n                ],\n                [\n                    51,\n                    51,\n                    45\n                ],\n                [\n                    159,\n                    180,\n                    204\n                ],\n                [\n                    219,\n                    65,\n                    5\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 26: {\n            var colors = [\n                [\n                    180,\n                    175,\n                    145\n                ],\n                [\n                    120,\n                    119,\n                    70\n                ],\n                [\n                    64,\n                    65,\n                    30\n                ],\n                [\n                    50,\n                    51,\n                    29\n                ],\n                [\n                    192,\n                    48,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 27: {\n            var colors = [\n                [\n                    4,\n                    191,\n                    191\n                ],\n                [\n                    202,\n                    252,\n                    216\n                ],\n                [\n                    247,\n                    233,\n                    103\n                ],\n                [\n                    169,\n                    207,\n                    84\n                ],\n                [\n                    88,\n                    143,\n                    39\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 28: {\n            var colors = [\n                [\n                    255,\n                    97,\n                    56\n                ],\n                [\n                    255,\n                    255,\n                    157\n                ],\n                [\n                    190,\n                    235,\n                    159\n                ],\n                [\n                    121,\n                    189,\n                    143\n                ],\n                [\n                    0,\n                    163,\n                    136\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 29: {\n            var colors = [\n                [\n                    176,\n                    204,\n                    153\n                ],\n                [\n                    103,\n                    126,\n                    82\n                ],\n                [\n                    183,\n                    202,\n                    121\n                ],\n                [\n                    246,\n                    232,\n                    177\n                ],\n                [\n                    137,\n                    114,\n                    91\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 30: {\n            var colors = [\n                [\n                    62,\n                    69,\n                    76\n                ],\n                [\n                    33,\n                    133,\n                    197\n                ],\n                [\n                    126,\n                    206,\n                    253\n                ],\n                [\n                    255,\n                    246,\n                    229\n                ],\n                [\n                    255,\n                    127,\n                    102\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 31: {\n            var colors = [\n                [\n                    230,\n                    226,\n                    175\n                ],\n                [\n                    167,\n                    163,\n                    126\n                ],\n                [\n                    239,\n                    236,\n                    202\n                ],\n                [\n                    4,\n                    99,\n                    128\n                ],\n                [\n                    0,\n                    47,\n                    47\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 32: {\n            var colors = [\n                [\n                    220,\n                    53,\n                    34\n                ],\n                [\n                    217,\n                    203,\n                    158\n                ],\n                [\n                    55,\n                    65,\n                    64\n                ],\n                [\n                    42,\n                    44,\n                    43\n                ],\n                [\n                    30,\n                    30,\n                    32\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 33: {\n            var colors = [\n                [\n                    89,\n                    82,\n                    65\n                ],\n                [\n                    184,\n                    174,\n                    156\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    172,\n                    207,\n                    204\n                ],\n                [\n                    138,\n                    9,\n                    23\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 34: {\n            var colors = [\n                [\n                    0,\n                    67,\n                    88\n                ],\n                [\n                    31,\n                    138,\n                    112\n                ],\n                [\n                    190,\n                    219,\n                    57\n                ],\n                [\n                    255,\n                    225,\n                    26\n                ],\n                [\n                    253,\n                    116,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 35: {\n            var colors = [\n                [\n                    125,\n                    138,\n                    46\n                ],\n                [\n                    201,\n                    215,\n                    135\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    255,\n                    192,\n                    169\n                ],\n                [\n                    255,\n                    133,\n                    152\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 36: {\n            var colors = [\n                [\n                    16,\n                    34,\n                    13\n                ],\n                [\n                    149,\n                    171,\n                    99\n                ],\n                [\n                    189,\n                    214,\n                    132\n                ],\n                [\n                    226,\n                    240,\n                    214\n                ],\n                [\n                    246,\n                    255,\n                    224\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    default:\n        break;\n    }\n    return colorVal;\n}\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\nfillEnabB = fx('Enable Fill').value > 0;\nres = value;\nif (fillEnabB) {\n    paletteId = 1;\n    try {\n        paletteId = fx('Fill Palette').value;\n    } catch (e) {\n    }\n    pathId = 1;\n    numPaths = 1;\n    if (paletteId == 3) {\n        sat = luma = 0.5;\n        try {\n            sat = $bm_div(fx('Saturation').value, 100);\n            luma = $bm_div(fx('Luminance').value, 100);\n        } catch (e) {\n        }\n    } else if (paletteId == 4) {\n        seed = 1;\n        try {\n            seed = fx('Random Seed').value;\n        } catch (e) {\n        }\n        seedRandom(seed, true);\n    }\n    cVal = GetPathColor(paletteId, pathId, numPaths);\n    res = [\n        cVal.redF,\n        cVal.greenF,\n        cVal.blueF,\n        cVal.alphaF\n    ];\n}\n$bm_rt = res;"},"o":{"a":0,"k":100,"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, res, fillEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, paletteId, paletteId, L, L, L, pts, pt, pt, pt, pt, c, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\nif (fx('MB ConnectLayersProStyles-0034').value > 0)\n    res = 0;\nelse {\n    fillEnabB = fx('Enable Fill').value > 0;\n    if (fillEnabB) {\n        res = fx('MB ConnectLayersProStyles-0029').value;\n        opaDistB = fx('MB ConnectLayersProStyles-0030').value > 0;\n        if (opaDistB) {\n            near = fx('MB ConnectLayersProStyles-0031').value;\n            far = fx('MB ConnectLayersProStyles-0032').value;\n            reverseB = fx('MB ConnectLayersProStyles-0033').value > 0;\n            path = content('Chain 3').content('Paths').content('Path 1').content('Path').path;\n            pts = path.points();\n            d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n            if (d <= near)\n                res = 100;\n            else if (d >= far)\n                res = 0;\n            else\n                res *= ease(d, near, far, 1, 0);\n            if (reverseB)\n                res = $bm_sub(100, res);\n        }\n        paletteId = 1;\n        try {\n            paletteId = fx('Fill Palette').value;\n        } catch (e) {\n        }\n        if (paletteId == 5) {\n            L = null;\n            try {\n                L = fx('Color Layer');\n            } catch (e) {\n                L = null;\n            }\n            if (L) {\n                pts = content('Chain 3').content('Paths').content('Path 1').content('Path').path.points();\n                pt = [\n                    0,\n                    0\n                ];\n                for (var i = 0; i < pts.length; i++) {\n                    pt = $bm_sum(pt, toComp(pts[i]));\n                }\n                pt /= pts.length;\n                if (pt.length == 3)\n                    pt.pop();\n                pt = L.fromCompToSurface(pt);\n                c = L.sampleImage(pt);\n                res *= c[3];\n            } else\n                res = 0;\n        }\n    } else\n        res = 0;\n}\n$bm_rt = res;"},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    res = fx('MB ConnectLayersProStyles-0029').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0030').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0031').value;\n        far = fx('MB ConnectLayersProStyles-0032').value;\n        reverseB = fx('MB ConnectLayersProStyles-0033').value > 0;\n        path = content('Chain 3').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n} else\n    res = 0;\n$bm_rt = res;"},"r":1,"bm":0,"g":{"p":2,"k":{"a":0,"k":[0,1,1,1,1,0,0,0],"ix":9}},"s":{"a":0,"k":[0,0],"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 3').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0039').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = startPt;\n} else\n    $bm_rt = value;"},"e":{"a":0,"k":[100,0],"ix":6,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 3').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0039').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = endPt;\n} else\n    $bm_rt = value;"},"t":1,"nm":"Gradient Fill","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path 1","np":7,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Paths","np":6,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Chain 3","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":3,"nm":"Calque de forme 4: Tracé 1 [1.1.3]","cl":"1 3","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[257,-232,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar srcLayer = thisComp.layer('Calque de forme 4');\nvar srcPath = srcLayer('ADBE Root Vectors Group')(1)('ADBE Vectors Group')(1)('ADBE Vector Shape').points()[3];\n$bm_rt = srcLayer.toComp(srcPath);"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"Chain 4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[0,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100.344,99.162,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Connect Layers Pro - Styles","np":152,"mn":"MB ConnectLayersProStyles","ix":1,"en":1,"ef":[{"ty":6,"nm":"Stroke","mn":"MB ConnectLayersProStyles-0001","ix":1,"v":0},{"ty":2,"nm":"Stroke Color","mn":"MB ConnectLayersProStyles-0002","ix":2,"v":{"a":0,"k":[0,0,0,0],"ix":2}},{"ty":0,"nm":"Stroke Opacity","mn":"MB ConnectLayersProStyles-0003","ix":3,"v":{"a":0,"k":100,"ix":3}},{"ty":7,"nm":"Opacity From Distance","mn":"MB ConnectLayersProStyles-0004","ix":4,"v":{"a":0,"k":0,"ix":4}},{"ty":0,"nm":"Near (px)","mn":"MB ConnectLayersProStyles-0005","ix":5,"v":{"a":0,"k":100,"ix":5}},{"ty":0,"nm":"Far (px)","mn":"MB ConnectLayersProStyles-0006","ix":6,"v":{"a":0,"k":400,"ix":6}},{"ty":7,"nm":"Reverse Behavior","mn":"MB ConnectLayersProStyles-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":0,"nm":"Stroke Width","mn":"MB ConnectLayersProStyles-0008","ix":8,"v":{"a":0,"k":20,"ix":8}},{"ty":7,"nm":"Line Cap","mn":"MB ConnectLayersProStyles-0009","ix":9,"v":{"a":0,"k":1,"ix":9}},{"ty":7,"nm":"Line Join","mn":"MB ConnectLayersProStyles-0010","ix":10,"v":{"a":0,"k":1,"ix":10}},{"ty":0,"nm":"Miter Limit","mn":"MB ConnectLayersProStyles-0011","ix":11,"v":{"a":0,"k":4,"ix":11}},{"ty":7,"nm":"Enable Gradient","mn":"MB ConnectLayersProStyles-0012","ix":12,"v":{"a":0,"k":0,"ix":12}},{"ty":7,"nm":"Gradient Type","mn":"MB ConnectLayersProStyles-0013","ix":13,"v":{"a":0,"k":1,"ix":13}},{"ty":0,"nm":"Highlight Length","mn":"MB ConnectLayersProStyles-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Highlight Angle","mn":"MB ConnectLayersProStyles-0015","ix":15,"v":{"a":0,"k":0,"ix":15}},{"ty":6,"nm":"Gradient Colors","mn":"MB ConnectLayersProStyles-0016","ix":16,"v":0},{"ty":0,"nm":"Gradient Scale (%)","mn":"MB ConnectLayersProStyles-0017","ix":17,"v":{"a":0,"k":100,"ix":17}},{"ty":7,"nm":"Reverse Path","mn":"MB ConnectLayersProStyles-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0019","ix":19,"v":0},{"ty":6,"nm":"Fill","mn":"MB ConnectLayersProStyles-0020","ix":20,"v":0},{"ty":7,"nm":"Enable Fill","mn":"MB ConnectLayersProStyles-0021","ix":21,"v":{"a":0,"k":0,"ix":21}},{"ty":7,"nm":"Fill Palette","mn":"MB ConnectLayersProStyles-0022","ix":22,"v":{"a":0,"k":1,"ix":22}},{"ty":2,"nm":"Fill Color","mn":"MB ConnectLayersProStyles-0023","ix":23,"v":{"a":0,"k":[0.78431372549,0.549019607843,0.972549019608,1],"ix":23}},{"ty":2,"nm":"End Color","mn":"MB ConnectLayersProStyles-0024","ix":24,"v":{"a":0,"k":[0.121568627451,0,0.247058823529,1],"ix":24}},{"ty":0,"nm":"Saturation","mn":"MB ConnectLayersProStyles-0025","ix":25,"v":{"a":0,"k":50,"ix":25}},{"ty":0,"nm":"Luminance","mn":"MB ConnectLayersProStyles-0026","ix":26,"v":{"a":0,"k":50,"ix":26}},{"ty":0,"nm":"Random Seed","mn":"MB ConnectLayersProStyles-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":10,"nm":"Color Layer","mn":"MB ConnectLayersProStyles-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":0,"nm":"Fill Opacity","mn":"MB ConnectLayersProStyles-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":7,"nm":"Opacity From Distance","mn":"MB ConnectLayersProStyles-0030","ix":30,"v":{"a":0,"k":0,"ix":30}},{"ty":0,"nm":"Near (px)","mn":"MB ConnectLayersProStyles-0031","ix":31,"v":{"a":0,"k":100,"ix":31}},{"ty":0,"nm":"Far (px)","mn":"MB ConnectLayersProStyles-0032","ix":32,"v":{"a":0,"k":400,"ix":32}},{"ty":7,"nm":"Reverse Behavior","mn":"MB ConnectLayersProStyles-0033","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":7,"nm":"Enable Gradient","mn":"MB ConnectLayersProStyles-0034","ix":34,"v":{"a":0,"k":0,"ix":34}},{"ty":7,"nm":"Gradient Type","mn":"MB ConnectLayersProStyles-0035","ix":35,"v":{"a":0,"k":1,"ix":35}},{"ty":0,"nm":"Highlight Length","mn":"MB ConnectLayersProStyles-0036","ix":36,"v":{"a":0,"k":0,"ix":36}},{"ty":0,"nm":"Highlight Angle","mn":"MB ConnectLayersProStyles-0037","ix":37,"v":{"a":0,"k":0,"ix":37}},{"ty":6,"nm":"Gradient Colors","mn":"MB ConnectLayersProStyles-0038","ix":38,"v":0},{"ty":0,"nm":"Gradient Scale (%)","mn":"MB ConnectLayersProStyles-0039","ix":39,"v":{"a":0,"k":100,"ix":39}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0040","ix":40,"v":0},{},{"ty":6,"nm":"Enable Modules","mn":"MB ConnectLayersProStyles-0042","ix":42,"v":0},{"ty":7,"nm":"Arrowheads","mn":"MB ConnectLayersProStyles-0043","ix":43,"v":{"a":0,"k":0,"ix":43}},{"ty":7,"nm":"Curviness","mn":"MB ConnectLayersProStyles-0044","ix":44,"v":{"a":0,"k":0,"ix":44}},{"ty":7,"nm":"Dashes","mn":"MB ConnectLayersProStyles-0045","ix":45,"v":{"a":0,"k":0,"ix":45}},{"ty":7,"nm":"Offset","mn":"MB ConnectLayersProStyles-0046","ix":46,"v":{"a":0,"k":0,"ix":46}},{"ty":7,"nm":"Repeater","mn":"MB ConnectLayersProStyles-0047","ix":47,"v":{"a":0,"k":0,"ix":47}},{"ty":7,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0048","ix":48,"v":{"a":0,"k":0,"ix":48}},{"ty":7,"nm":"Trim","mn":"MB ConnectLayersProStyles-0049","ix":49,"v":{"a":0,"k":0,"ix":49}},{"ty":7,"nm":"Twist","mn":"MB ConnectLayersProStyles-0050","ix":50,"v":{"a":0,"k":0,"ix":50}},{"ty":7,"nm":"Wiggle","mn":"MB ConnectLayersProStyles-0051","ix":51,"v":{"a":0,"k":0,"ix":51}},{"ty":7,"nm":"Zig Zag","mn":"MB ConnectLayersProStyles-0052","ix":52,"v":{"a":0,"k":0,"ix":52}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0053","ix":53,"v":0},{"ty":6,"nm":"Arrowheads","mn":"MB ConnectLayersProStyles-0054","ix":54,"v":0},{"ty":7,"nm":"Start","mn":"MB ConnectLayersProStyles-0055","ix":55,"v":{"a":0,"k":1,"ix":55}},{"ty":7,"nm":"End","mn":"MB ConnectLayersProStyles-0056","ix":56,"v":{"a":0,"k":1,"ix":56}},{"ty":2,"nm":"Stroke Color","mn":"MB ConnectLayersProStyles-0057","ix":57,"v":{"a":0,"k":[1,1,1,1],"ix":57}},{"ty":0,"nm":"Stroke Opacity","mn":"MB ConnectLayersProStyles-0058","ix":58,"v":{"a":0,"k":100,"ix":58}},{"ty":0,"nm":"Stroke Width","mn":"MB ConnectLayersProStyles-0059","ix":59,"v":{"a":0,"k":0,"ix":59}},{"ty":2,"nm":"Fill Color","mn":"MB ConnectLayersProStyles-0060","ix":60,"v":{"a":0,"k":[1,1,1,1],"ix":60}},{"ty":0,"nm":"Fill Opacity","mn":"MB ConnectLayersProStyles-0061","ix":61,"v":{"a":0,"k":100,"ix":61}},{"ty":7,"nm":"Opacity from Path","mn":"MB ConnectLayersProStyles-0062","ix":62,"v":{"a":0,"k":1,"ix":62}},{"ty":0,"nm":"Circle/Square Size","mn":"MB ConnectLayersProStyles-0063","ix":63,"v":{"a":0,"k":15,"ix":63}},{"ty":0,"nm":"Triangle Scale","mn":"MB ConnectLayersProStyles-0064","ix":64,"v":{"a":0,"k":100,"ix":64}},{"ty":0,"nm":"Triangle Length","mn":"MB ConnectLayersProStyles-0065","ix":65,"v":{"a":0,"k":40,"ix":65}},{"ty":0,"nm":"Triangle Width","mn":"MB ConnectLayersProStyles-0066","ix":66,"v":{"a":0,"k":20,"ix":66}},{"ty":0,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0067","ix":67,"v":{"a":0,"k":0,"ix":67}},{"ty":6,"nm":"Customization","mn":"MB ConnectLayersProStyles-0068","ix":68,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0069","ix":69,"v":0},{"ty":6,"nm":"Curviness","mn":"MB ConnectLayersProStyles-0070","ix":70,"v":0},{"ty":7,"nm":"Function","mn":"MB ConnectLayersProStyles-0071","ix":71,"v":{"a":0,"k":1,"ix":71}},{"ty":7,"nm":"Flip Direction","mn":"MB ConnectLayersProStyles-0072","ix":72,"v":{"a":0,"k":0,"ix":72}},{"ty":0,"nm":"Tension","mn":"MB ConnectLayersProStyles-0073","ix":73,"v":{"a":0,"k":33.333,"ix":73}},{"ty":7,"nm":"Preset","mn":"MB ConnectLayersProStyles-0074","ix":74,"v":{"a":0,"k":1,"ix":74}},{"ty":7,"nm":"Preset","mn":"MB ConnectLayersProStyles-0075","ix":75,"v":{"a":0,"k":1,"ix":75}},{"ty":0,"nm":"Stiffness","mn":"MB ConnectLayersProStyles-0076","ix":76,"v":{"a":0,"k":100,"ix":76}},{"ty":0,"nm":"Damping","mn":"MB ConnectLayersProStyles-0077","ix":77,"v":{"a":0,"k":50,"ix":77}},{"ty":0,"nm":"Max Tangent Length","mn":"MB ConnectLayersProStyles-0078","ix":78,"v":{"a":0,"k":33.333,"ix":78}},{"ty":0,"nm":"Start Tangent X","mn":"MB ConnectLayersProStyles-0079","ix":79,"v":{"a":0,"k":0,"ix":79}},{"ty":0,"nm":"Start Tangent Y","mn":"MB ConnectLayersProStyles-0080","ix":80,"v":{"a":0,"k":0,"ix":80}},{"ty":0,"nm":"End Tangent X","mn":"MB ConnectLayersProStyles-0081","ix":81,"v":{"a":0,"k":0,"ix":81}},{"ty":0,"nm":"End Tangent Y","mn":"MB ConnectLayersProStyles-0082","ix":82,"v":{"a":0,"k":0,"ix":82}},{"ty":0,"nm":"Stiffness","mn":"MB ConnectLayersProStyles-0083","ix":83,"v":{"a":0,"k":50,"ix":83}},{"ty":0,"nm":"Solver Steps","mn":"MB ConnectLayersProStyles-0084","ix":84,"v":{"a":0,"k":5,"ix":84}},{"ty":0,"nm":"Subsegments","mn":"MB ConnectLayersProStyles-0085","ix":85,"v":{"a":0,"k":10,"ix":85}},{"ty":0,"nm":"Gravity","mn":"MB ConnectLayersProStyles-0086","ix":86,"v":{"a":0,"k":0,"ix":86}},{"ty":0,"nm":"Dynamics Start Frame","mn":"MB ConnectLayersProStyles-0087","ix":87,"v":{"a":0,"k":0,"ix":87}},{"ty":0,"nm":"Precision","mn":"MB ConnectLayersProStyles-0088","ix":88,"v":{"a":0,"k":15,"ix":88}},{"ty":0,"nm":"Angle (3D only)","mn":"MB ConnectLayersProStyles-0089","ix":89,"v":{"a":0,"k":45,"ix":89}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0090","ix":90,"v":0},{"ty":6,"nm":"Dashes","mn":"MB ConnectLayersProStyles-0091","ix":91,"v":0},{"ty":0,"nm":"Dash","mn":"MB ConnectLayersProStyles-0092","ix":92,"v":{"a":0,"k":10,"ix":92}},{"ty":0,"nm":"Gap","mn":"MB ConnectLayersProStyles-0093","ix":93,"v":{"a":0,"k":10,"ix":93}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0094","ix":94,"v":{"a":0,"k":0,"ix":94}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0095","ix":95,"v":0},{"ty":6,"nm":"Offset","mn":"MB ConnectLayersProStyles-0096","ix":96,"v":0},{"ty":0,"nm":"Amount","mn":"MB ConnectLayersProStyles-0097","ix":97,"v":{"a":0,"k":0,"ix":97}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0098","ix":98,"v":0},{"ty":6,"nm":"Repeater","mn":"MB ConnectLayersProStyles-0099","ix":99,"v":0},{"ty":0,"nm":"Copies","mn":"MB ConnectLayersProStyles-0100","ix":100,"v":{"a":0,"k":3,"ix":100}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0101","ix":101,"v":{"a":0,"k":0,"ix":101}},{"ty":7,"nm":"Symmetric Offset","mn":"MB ConnectLayersProStyles-0102","ix":102,"v":{"a":0,"k":1,"ix":102}},{"ty":6,"nm":"Transform: Repeater","mn":"MB ConnectLayersProStyles-0103","ix":103,"v":0},{"ty":0,"nm":"Anchor Point X","mn":"MB ConnectLayersProStyles-0104","ix":104,"v":{"a":0,"k":0,"ix":104}},{"ty":0,"nm":"Anchor Point Y","mn":"MB ConnectLayersProStyles-1104","ix":105,"v":{"a":0,"k":0,"ix":105}},{"ty":7,"nm":"Center Anchor","mn":"MB ConnectLayersProStyles-0106","ix":106,"v":{"a":0,"k":1,"ix":106}},{"ty":0,"nm":"Position Offset","mn":"MB ConnectLayersProStyles-0107","ix":107,"v":{"a":0,"k":0,"ix":107}},{"ty":0,"nm":"Position X","mn":"MB ConnectLayersProStyles-0108","ix":108,"v":{"a":0,"k":0,"ix":108}},{"ty":0,"nm":"Position Y","mn":"MB ConnectLayersProStyles-0109","ix":109,"v":{"a":0,"k":0,"ix":109}},{"ty":0,"nm":"Scale","mn":"MB ConnectLayersProStyles-0110","ix":110,"v":{"a":0,"k":100,"ix":110}},{"ty":0,"nm":"Rotation","mn":"MB ConnectLayersProStyles-0111","ix":111,"v":{"a":0,"k":0,"ix":111}},{"ty":0,"nm":"Start Opacity","mn":"MB ConnectLayersProStyles-0112","ix":112,"v":{"a":0,"k":100,"ix":112}},{"ty":0,"nm":"End Opacity","mn":"MB ConnectLayersProStyles-0113","ix":113,"v":{"a":0,"k":100,"ix":113}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0114","ix":114,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0115","ix":115,"v":0},{"ty":6,"nm":"Round Corners","mn":"MB ConnectLayersProStyles-0116","ix":116,"v":0},{"ty":0,"nm":"Radius","mn":"MB ConnectLayersProStyles-0117","ix":117,"v":{"a":0,"k":10,"ix":117}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0118","ix":118,"v":0},{"ty":6,"nm":"Trim","mn":"MB ConnectLayersProStyles-0119","ix":119,"v":0},{"ty":0,"nm":"Start","mn":"MB ConnectLayersProStyles-0120","ix":120,"v":{"a":0,"k":0,"ix":120}},{"ty":0,"nm":"End","mn":"MB ConnectLayersProStyles-0121","ix":121,"v":{"a":0,"k":100,"ix":121}},{"ty":0,"nm":"Both Ends","mn":"MB ConnectLayersProStyles-0122","ix":122,"v":{"a":0,"k":0,"ix":122}},{"ty":0,"nm":"Offset","mn":"MB ConnectLayersProStyles-0123","ix":123,"v":{"a":0,"k":0,"ix":123}},{"ty":7,"nm":"Trim Multiple Shapes","mn":"MB ConnectLayersProStyles-0124","ix":124,"v":{"a":0,"k":1,"ix":124}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0125","ix":125,"v":0},{"ty":6,"nm":"Twist","mn":"MB ConnectLayersProStyles-0126","ix":126,"v":0},{"ty":0,"nm":"Angle","mn":"MB ConnectLayersProStyles-0127","ix":127,"v":{"a":0,"k":10,"ix":127}},{"ty":0,"nm":"Center X","mn":"MB ConnectLayersProStyles-0128","ix":128,"v":{"a":0,"k":0,"ix":128}},{"ty":0,"nm":"Center Y","mn":"MB ConnectLayersProStyles-0129","ix":129,"v":{"a":0,"k":0,"ix":129}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0130","ix":130,"v":0},{"ty":6,"nm":"Wiggle","mn":"MB ConnectLayersProStyles-0131","ix":131,"v":0},{"ty":0,"nm":"Size","mn":"MB ConnectLayersProStyles-0132","ix":132,"v":{"a":0,"k":10,"ix":132}},{"ty":0,"nm":"Detail","mn":"MB ConnectLayersProStyles-0133","ix":133,"v":{"a":0,"k":10,"ix":133}},{"ty":7,"nm":"Points","mn":"MB ConnectLayersProStyles-0134","ix":134,"v":{"a":0,"k":1,"ix":134}},{"ty":0,"nm":"Wiggles/Second","mn":"MB ConnectLayersProStyles-0135","ix":135,"v":{"a":0,"k":2,"ix":135}},{"ty":0,"nm":"Correlation","mn":"MB ConnectLayersProStyles-0136","ix":136,"v":{"a":0,"k":50,"ix":136}},{"ty":0,"nm":"Temporal Phase","mn":"MB ConnectLayersProStyles-0137","ix":137,"v":{"a":0,"k":0,"ix":137}},{"ty":0,"nm":"Spatial Phase","mn":"MB ConnectLayersProStyles-0138","ix":138,"v":{"a":0,"k":0,"ix":138}},{"ty":0,"nm":"Random Seed","mn":"MB ConnectLayersProStyles-0139","ix":139,"v":{"a":0,"k":0,"ix":139}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0140","ix":140,"v":0},{"ty":6,"nm":"Zig Zag","mn":"MB ConnectLayersProStyles-0141","ix":141,"v":0},{"ty":0,"nm":"Size","mn":"MB ConnectLayersProStyles-0142","ix":142,"v":{"a":0,"k":5,"ix":142}},{"ty":0,"nm":"Ridges per segment","mn":"MB ConnectLayersProStyles-0143","ix":143,"v":{"a":0,"k":10,"ix":143}},{"ty":7,"nm":"Points","mn":"MB ConnectLayersProStyles-0144","ix":144,"v":{"a":0,"k":1,"ix":144}},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0145","ix":145,"v":0},{"ty":6,"nm":"Assistant","mn":"MB ConnectLayersProStyles-0146","ix":146,"v":0},{"ty":6,"nm":"Path Expressions","mn":"MB ConnectLayersProStyles-0147","ix":147,"v":0},{"ty":6,"nm":"Style Expressions","mn":"MB ConnectLayersProStyles-0148","ix":148,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0149","ix":149,"v":0},{"ty":6,"nm":"","mn":"MB ConnectLayersProStyles-0150","ix":150,"v":0}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[748.22,334.604],[748.22,334.604]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":1,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[745.433,333.553],[745.559,333.426]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":3,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[743.784,336.386],[745.173,334.986]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":4,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[744.106,337.553],[746.783,334.854]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":5,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[742.801,337.003],[747.389,332.378]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":7,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[740.038,339.301],[749.086,331.196]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":9,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[736.087,348.837],[764.79,319.901]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[721.473,366.868],[783.721,303.103]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":11,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[708.356,381.368],[802.653,286.304]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":12,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[703.684,386.847],[809.028,280.647]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":13,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[701.047,389.942],[812.632,277.45]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":14,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[699.334,391.951],[814.97,275.375]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":15,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[698.159,393.329],[816.571,273.954]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":16,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[697.352,394.276],[817.675,272.975]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":17,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[696.807,394.915],[818.419,272.315]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":18,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[696.463,395.319],[818.889,271.898]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":19,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[696.273,395.541],[819.148,271.668]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[696.22,395.604],[819.22,271.604]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":21,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[696.041,395.084],[818.717,271.512]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":22,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[695.448,393.391],[817.07,271.217]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":23,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[694.32,390.269],[814.019,270.687]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":24,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[692.454,385.377],[809.194,269.898]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[689.51,378.226],[802.044,268.84]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":26,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[684.862,368.087],[791.694,267.537]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":27,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[677.297,353.753],[776.578,266.138]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[663.952,333.028],[753.496,265.125]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":29,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[635.947,300.741],[715.837,268.25]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[523.346,243.77],[598.954,293.19]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[421.655,249.231],[508.163,357.687]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":32,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[390.639,263.89],[482.888,385.729]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":33,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[375.464,274.679],[469.221,400.642]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":34,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[366.82,282.661],[461.487,411.34]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":35,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[361.647,288.618],[457.677,420.284]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":36,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[358.541,293.061],[454.819,425.196]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":38,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[355.752,298.505],[448.223,429.871]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[355.135,300.181],[447.991,431.412]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":42,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[357.779,295.908],[451.321,431.052]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":44,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[367.971,281.179],[462.161,431.153]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":46,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[392.748,253.086],[489.247,430.047]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":47,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[415.646,232.861],[509.755,430.411]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":48,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[452.663,207.804],[541.785,438.381]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":49,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[519.327,179.538],[589.553,458.529]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":50,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[674.159,173.191],[670.948,530.696]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":51,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[966.886,466.556],[681.502,807.272]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":52,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[967.674,640.642],[599.255,896.266]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":53,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[945.803,722.657],[546.885,925.181]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":54,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[921.369,771.739],[511.367,937.817]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":55,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[901.37,801.628],[486.702,943.374]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":56,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[885.89,821.178],[468.369,946.773]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":57,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[875.303,833.681],[455.927,948.035]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":58,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[866.496,842.142],[447.157,949.307]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[858.88,850.19],[437.746,948.599]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":62,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[857.068,851.094],[437.94,948.764]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":64,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[860.998,848.774],[441.048,944.893]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":66,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[868.384,844.409],[450.621,936.542]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[881.718,834.944],[469.815,917.252]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":69,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[890.953,825.317],[488.809,901.577]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":70,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[903.836,808.179],[516.281,874.353]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":71,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[923.375,777.98],[561.818,828.675]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":72,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[944.823,731.542],[630.262,751.792]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":73,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[948.324,688.082],[682.998,675.169]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":74,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[947.532,653.707],[719.078,617.701]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":75,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[945.16,628.504],[743.392,579.932]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":76,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[940.221,612.436],[756.101,553.439]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":77,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[935.23,601.391],[770.176,529.245]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":78,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[932.469,586.609],[783.34,510.847]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":79,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[927.312,577.187],[786.486,496.635]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":80,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[927.273,570.372],[793.603,484.375]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":81,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[924.154,563.037],[799.316,474.324]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":83,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[918.978,552.322],[807.212,458.997]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":85,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[913.156,545.496],[814.194,449.478]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":87,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[908.266,538.263],[822.507,444.305]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":88,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[907.449,535.457],[823.668,440.546]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":90,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[904.417,532.096],[826.497,436.357]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":92,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[902.832,531.078],[827.989,433.112]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":94,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[902.456,530.021],[827.807,431.23]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":95,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[902.134,529.916],[828.622,431.822]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":270,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[902.468,561.443],[836.748,457.148]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":271,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[901.841,561.17],[836.5,457.536]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":272,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[901.944,561.288],[836.49,456.635]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":274,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[900.058,558.792],[836.749,455.652]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":276,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[899.545,555.863],[836.99,454.235]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":278,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[896.25,548.995],[836.638,450.431]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":280,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[890.566,539.472],[836.218,443.614]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":281,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[886.573,531.499],[835.695,439.925]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":282,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[881.145,521.021],[834.916,433.083]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":283,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[870.957,504.685],[832.666,422.91]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":284,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[852.91,473.102],[824.673,403.079]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":285,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[808.647,408.152],[798.407,366.288]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":286,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[786.487,377.964],[781.208,350.558]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":287,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[774.954,365.518],[772.07,344.533]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":288,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[767.975,356.031],[765.524,340.389]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":289,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[762.318,348.401],[760.609,336.669]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":290,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[757.738,341.895],[756.53,333.149]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":291,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[751.593,344.573],[750.747,338.15]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":292,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[750.633,341.523],[750.05,336.919]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":293,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[747.484,339.369],[747.092,336.18]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":295,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[744.93,336.496],[744.779,335.221]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":297,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[746.114,335.033],[746.08,334.743]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":298,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[745.821,334.706],[745.813,334.637]],"c":false}]},{"t":299,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[748.22,334.604],[748.22,334.604]],"c":false}]}],"ix":2},"nm":"Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0002');"},"o":{"a":0,"k":100,"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB)\n    res = 0;\nelse {\n    res = fx('MB ConnectLayersProStyles-0003').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0004').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0005').value;\n        far = fx('MB ConnectLayersProStyles-0006').value;\n        reverseB = fx('MB ConnectLayersProStyles-0007').value > 0;\n        path = content('Chain 4').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n}\n$bm_rt = res;"},"w":{"a":0,"k":2,"ix":5,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0008');"},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    res = fx('MB ConnectLayersProStyles-0003').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0004').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0005').value;\n        far = fx('MB ConnectLayersProStyles-0006').value;\n        reverseB = fx('MB ConnectLayersProStyles-0007').value > 0;\n        path = content('Chain 4').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n} else\n    res = 0;\n$bm_rt = res;"},"w":{"a":0,"k":2,"ix":10,"x":"var $bm_rt;\nvar is3dB, fx;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\n$bm_rt = fx('MB ConnectLayersProStyles-0008');"},"g":{"p":2,"k":{"a":0,"k":[0,1,1,1,1,0,0,0],"ix":8}},"s":{"a":0,"k":[0,0],"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 4').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0017').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = startPt;\n} else\n    $bm_rt = value;"},"e":{"a":0,"k":[100,0],"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 4').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0012').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0017').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = endPt;\n} else\n    $bm_rt = value;"},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\nvar is3dB, fx, fillEnabB, res, paletteId, paletteId, pathId, numPaths, sat, sat, luma, seed, seed, cVal, res;\nfunction HueToRgb(p, q, t) {\n    if (t < 0)\n        t++;\n    if (t > 1)\n        t--;\n    if (t < 1 / 6)\n        return $bm_sum(p, $bm_mul($bm_mul($bm_sub(q, p), 6), t));\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return $bm_sum(p, $bm_mul($bm_mul($bm_sub(q, p), 6), $bm_sub(2 / 3, t)));\n    return p;\n}\nfunction HslToRgb(h, s, l) {\n    var c = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    if (s == 0) {\n        c.alphaF = 1;\n        c.redF = c.greenF = c.blueF = 1;\n    } else {\n        var q = l < 0.5 ? $bm_mul(l, $bm_sum(1, s)) : $bm_sub($bm_sum(l, s), $bm_mul(l, s));\n        var p = $bm_sub($bm_mul(2, l), q);\n        c.alphaF = 1;\n        c.redF = HueToRgb(p, q, $bm_sum(h, 1 / 3));\n        c.greenF = HueToRgb(p, q, h);\n        c.blueF = HueToRgb(p, q, $bm_sub(h, 1 / 3));\n    }\n    return c;\n}\nfunction GetColorFromKulerScheme(colors, idx, total) {\n    var colorVal = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    var incr = $bm_div(5, total);\n    var frac = $bm_mul(incr, $bm_sub(idx, 1));\n    var low = Math.max(0, Math.floor(frac));\n    var high = Math.min(4, Math.ceil(frac));\n    if (low != high) {\n        colorVal.alphaF = 1;\n        colorVal.redF = $bm_div($bm_div($bm_sum(colors[low][0], colors[high][0]), 2), 255);\n        colorVal.greenF = $bm_div($bm_div($bm_sum(colors[low][1], colors[high][1]), 2), 255);\n        colorVal.blueF = $bm_div($bm_div($bm_sum(colors[low][2], colors[high][2]), 2), 255);\n    } else {\n        colorVal.alphaF = 1;\n        colorVal.redF = $bm_div(colors[low][0], 255);\n        colorVal.greenF = $bm_div(colors[low][1], 255);\n        colorVal.blueF = $bm_div(colors[low][2], 255);\n    }\n    return colorVal;\n}\nfunction GetPathColor(paletteId, pathId, numPaths) {\n    var firstScratch, secondScratch, L, pts, pt;\n    var colorVal = {\n        alphaF: 0,\n        redF: 0,\n        greenF: 0,\n        blueF: 0\n    };\n    switch (paletteId) {\n    case 1: {\n            firstScratch = [\n                0,\n                0,\n                0\n            ];\n            try {\n                firstScratch = fx('MB ConnectLayersProStyles-0023').value;\n            } catch (e) {\n            }\n            colorVal.alphaF = 1;\n            colorVal.redF = firstScratch[0];\n            colorVal.greenF = firstScratch[1];\n            colorVal.blueF = firstScratch[2];\n            break;\n        }\n    case 2: {\n            firstScratch = secondScratch = [\n                0,\n                0,\n                0\n            ];\n            try {\n                firstScratch = fx('MB ConnectLayersProStyles-0023').value;\n                secondScratch = fx('End Color').value;\n            } catch (e) {\n            }\n            colorVal.alphaF = 1;\n            colorVal.redF = linear(pathId, 1, numPaths, firstScratch[0], secondScratch[0]);\n            colorVal.greenF = linear(pathId, 1, numPaths, firstScratch[1], secondScratch[1]);\n            colorVal.blueF = linear(pathId, 1, numPaths, firstScratch[2], secondScratch[2]);\n            break;\n        }\n    case 3: {\n            var c = HslToRgb(pathId / numPaths, sat, luma);\n            colorVal.alphaF = 1;\n            colorVal.redF = c.redF;\n            colorVal.greenF = c.greenF;\n            colorVal.blueF = c.blueF;\n            break;\n        }\n    case 4: {\n            colorVal.alphaF = 1;\n            colorVal.redF = random();\n            colorVal.greenF = random();\n            colorVal.blueF = random();\n            break;\n        }\n    case 5: {\n            try {\n                L = fx('Color Layer');\n                pts = content('Chain 4').content('Paths').content('Path 1').content('Path').path.points();\n                pt = [\n                    0,\n                    0\n                ];\n                for (var i = 0; i < pts.length; i++) {\n                    pt += toComp(pts[i]);\n                }\n                pt /= pts.length;\n                if (pt.length == 3)\n                    pt.pop();\n                pt = L.fromCompToSurface(pt);\n                c = L.sampleImage(pt);\n                colorVal.alphaF = c[3];\n                colorVal.redF = c[0];\n                colorVal.greenF = c[1];\n                colorVal.blueF = c[2];\n            } catch (e) {\n                colorVal.alphaF = colorVal.redF = colorVal.greenF = colorVal.blueF = 0;\n            }\n            break;\n        }\n    case 6: {\n            break;\n        }\n    case 7: {\n            var colors = [\n                [\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    38,\n                    50,\n                    72\n                ],\n                [\n                    126,\n                    138,\n                    162\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    255,\n                    152,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 8: {\n            var colors = [\n                [\n                    207,\n                    194,\n                    145\n                ],\n                [\n                    255,\n                    246,\n                    197\n                ],\n                [\n                    161,\n                    232,\n                    217\n                ],\n                [\n                    255,\n                    113,\n                    44\n                ],\n                [\n                    105,\n                    93,\n                    70\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 9: {\n            var colors = [\n                [\n                    194,\n                    71,\n                    4\n                ],\n                [\n                    217,\n                    204,\n                    60\n                ],\n                [\n                    255,\n                    235,\n                    121\n                ],\n                [\n                    160,\n                    224,\n                    169\n                ],\n                [\n                    0,\n                    173,\n                    167\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 10: {\n            var colors = [\n                [\n                    43,\n                    58,\n                    66\n                ],\n                [\n                    63,\n                    87,\n                    101\n                ],\n                [\n                    189,\n                    212,\n                    222\n                ],\n                [\n                    239,\n                    239,\n                    239\n                ],\n                [\n                    255,\n                    83,\n                    13\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 11: {\n            var colors = [\n                [\n                    185,\n                    18,\n                    27\n                ],\n                [\n                    76,\n                    27,\n                    27\n                ],\n                [\n                    246,\n                    228,\n                    151\n                ],\n                [\n                    252,\n                    250,\n                    225\n                ],\n                [\n                    189,\n                    141,\n                    70\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 12: {\n            var colors = [\n                [\n                    0,\n                    88,\n                    95\n                ],\n                [\n                    0,\n                    147,\n                    147\n                ],\n                [\n                    255,\n                    255,\n                    196\n                ],\n                [\n                    240,\n                    237,\n                    187\n                ],\n                [\n                    255,\n                    56,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 13: {\n            var colors = [\n                [\n                    70,\n                    137,\n                    102\n                ],\n                [\n                    255,\n                    240,\n                    165\n                ],\n                [\n                    255,\n                    176,\n                    59\n                ],\n                [\n                    182,\n                    73,\n                    38\n                ],\n                [\n                    142,\n                    40,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 14: {\n            var colors = [\n                [\n                    47,\n                    41,\n                    51\n                ],\n                [\n                    1,\n                    162,\n                    166\n                ],\n                [\n                    41,\n                    217,\n                    194\n                ],\n                [\n                    189,\n                    242,\n                    113\n                ],\n                [\n                    255,\n                    255,\n                    166\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 15: {\n            var colors = [\n                [\n                    150,\n                    45,\n                    62\n                ],\n                [\n                    52,\n                    54,\n                    66\n                ],\n                [\n                    151,\n                    156,\n                    156\n                ],\n                [\n                    242,\n                    235,\n                    199\n                ],\n                [\n                    52,\n                    136,\n                    153\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 16: {\n            var colors = [\n                [\n                    133,\n                    219,\n                    24\n                ],\n                [\n                    205,\n                    232,\n                    85\n                ],\n                [\n                    245,\n                    246,\n                    212\n                ],\n                [\n                    167,\n                    197,\n                    32\n                ],\n                [\n                    73,\n                    63,\n                    11\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 17: {\n            var colors = [\n                [\n                    213,\n                    251,\n                    255\n                ],\n                [\n                    159,\n                    188,\n                    191\n                ],\n                [\n                    100,\n                    118,\n                    120\n                ],\n                [\n                    47,\n                    55,\n                    56\n                ],\n                [\n                    89,\n                    216,\n                    230\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 18: {\n            var colors = [\n                [\n                    90,\n                    31,\n                    0\n                ],\n                [\n                    209,\n                    87,\n                    13\n                ],\n                [\n                    253,\n                    231,\n                    146\n                ],\n                [\n                    71,\n                    119,\n                    37\n                ],\n                [\n                    169,\n                    204,\n                    102\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 19: {\n            var colors = [\n                [\n                    16,\n                    91,\n                    99\n                ],\n                [\n                    255,\n                    250,\n                    213\n                ],\n                [\n                    255,\n                    211,\n                    78\n                ],\n                [\n                    219,\n                    158,\n                    54\n                ],\n                [\n                    189,\n                    73,\n                    50\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 20: {\n            var colors = [\n                [\n                    216,\n                    202,\n                    168\n                ],\n                [\n                    92,\n                    131,\n                    47\n                ],\n                [\n                    40,\n                    73,\n                    7\n                ],\n                [\n                    56,\n                    37,\n                    19\n                ],\n                [\n                    54,\n                    57,\n                    66\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 21: {\n            var colors = [\n                [\n                    252,\n                    255,\n                    245\n                ],\n                [\n                    209,\n                    219,\n                    189\n                ],\n                [\n                    145,\n                    170,\n                    157\n                ],\n                [\n                    62,\n                    96,\n                    111\n                ],\n                [\n                    25,\n                    52,\n                    65\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 22: {\n            var colors = [\n                [\n                    64,\n                    89,\n                    82\n                ],\n                [\n                    156,\n                    155,\n                    122\n                ],\n                [\n                    255,\n                    211,\n                    147\n                ],\n                [\n                    255,\n                    151,\n                    79\n                ],\n                [\n                    245,\n                    79,\n                    41\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 23: {\n            var colors = [\n                [\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    51,\n                    51,\n                    51\n                ],\n                [\n                    255,\n                    53,\n                    139\n                ],\n                [\n                    1,\n                    176,\n                    240\n                ],\n                [\n                    174,\n                    238,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 24: {\n            var colors = [\n                [\n                    108,\n                    110,\n                    88\n                ],\n                [\n                    62,\n                    66,\n                    58\n                ],\n                [\n                    65,\n                    115,\n                    120\n                ],\n                [\n                    164,\n                    207,\n                    190\n                ],\n                [\n                    244,\n                    247,\n                    217\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 25: {\n            var colors = [\n                [\n                    255,\n                    248,\n                    227\n                ],\n                [\n                    204,\n                    204,\n                    159\n                ],\n                [\n                    51,\n                    51,\n                    45\n                ],\n                [\n                    159,\n                    180,\n                    204\n                ],\n                [\n                    219,\n                    65,\n                    5\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 26: {\n            var colors = [\n                [\n                    180,\n                    175,\n                    145\n                ],\n                [\n                    120,\n                    119,\n                    70\n                ],\n                [\n                    64,\n                    65,\n                    30\n                ],\n                [\n                    50,\n                    51,\n                    29\n                ],\n                [\n                    192,\n                    48,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 27: {\n            var colors = [\n                [\n                    4,\n                    191,\n                    191\n                ],\n                [\n                    202,\n                    252,\n                    216\n                ],\n                [\n                    247,\n                    233,\n                    103\n                ],\n                [\n                    169,\n                    207,\n                    84\n                ],\n                [\n                    88,\n                    143,\n                    39\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 28: {\n            var colors = [\n                [\n                    255,\n                    97,\n                    56\n                ],\n                [\n                    255,\n                    255,\n                    157\n                ],\n                [\n                    190,\n                    235,\n                    159\n                ],\n                [\n                    121,\n                    189,\n                    143\n                ],\n                [\n                    0,\n                    163,\n                    136\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 29: {\n            var colors = [\n                [\n                    176,\n                    204,\n                    153\n                ],\n                [\n                    103,\n                    126,\n                    82\n                ],\n                [\n                    183,\n                    202,\n                    121\n                ],\n                [\n                    246,\n                    232,\n                    177\n                ],\n                [\n                    137,\n                    114,\n                    91\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 30: {\n            var colors = [\n                [\n                    62,\n                    69,\n                    76\n                ],\n                [\n                    33,\n                    133,\n                    197\n                ],\n                [\n                    126,\n                    206,\n                    253\n                ],\n                [\n                    255,\n                    246,\n                    229\n                ],\n                [\n                    255,\n                    127,\n                    102\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 31: {\n            var colors = [\n                [\n                    230,\n                    226,\n                    175\n                ],\n                [\n                    167,\n                    163,\n                    126\n                ],\n                [\n                    239,\n                    236,\n                    202\n                ],\n                [\n                    4,\n                    99,\n                    128\n                ],\n                [\n                    0,\n                    47,\n                    47\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 32: {\n            var colors = [\n                [\n                    220,\n                    53,\n                    34\n                ],\n                [\n                    217,\n                    203,\n                    158\n                ],\n                [\n                    55,\n                    65,\n                    64\n                ],\n                [\n                    42,\n                    44,\n                    43\n                ],\n                [\n                    30,\n                    30,\n                    32\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 33: {\n            var colors = [\n                [\n                    89,\n                    82,\n                    65\n                ],\n                [\n                    184,\n                    174,\n                    156\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    172,\n                    207,\n                    204\n                ],\n                [\n                    138,\n                    9,\n                    23\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 34: {\n            var colors = [\n                [\n                    0,\n                    67,\n                    88\n                ],\n                [\n                    31,\n                    138,\n                    112\n                ],\n                [\n                    190,\n                    219,\n                    57\n                ],\n                [\n                    255,\n                    225,\n                    26\n                ],\n                [\n                    253,\n                    116,\n                    0\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 35: {\n            var colors = [\n                [\n                    125,\n                    138,\n                    46\n                ],\n                [\n                    201,\n                    215,\n                    135\n                ],\n                [\n                    255,\n                    255,\n                    255\n                ],\n                [\n                    255,\n                    192,\n                    169\n                ],\n                [\n                    255,\n                    133,\n                    152\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    case 36: {\n            var colors = [\n                [\n                    16,\n                    34,\n                    13\n                ],\n                [\n                    149,\n                    171,\n                    99\n                ],\n                [\n                    189,\n                    214,\n                    132\n                ],\n                [\n                    226,\n                    240,\n                    214\n                ],\n                [\n                    246,\n                    255,\n                    224\n                ]\n            ];\n            colorVal = GetColorFromKulerScheme(colors, pathId, numPaths);\n            break;\n        }\n    default:\n        break;\n    }\n    return colorVal;\n}\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\nfillEnabB = fx('Enable Fill').value > 0;\nres = value;\nif (fillEnabB) {\n    paletteId = 1;\n    try {\n        paletteId = fx('Fill Palette').value;\n    } catch (e) {\n    }\n    pathId = 1;\n    numPaths = 1;\n    if (paletteId == 3) {\n        sat = luma = 0.5;\n        try {\n            sat = $bm_div(fx('Saturation').value, 100);\n            luma = $bm_div(fx('Luminance').value, 100);\n        } catch (e) {\n        }\n    } else if (paletteId == 4) {\n        seed = 1;\n        try {\n            seed = fx('Random Seed').value;\n        } catch (e) {\n        }\n        seedRandom(seed, true);\n    }\n    cVal = GetPathColor(paletteId, pathId, numPaths);\n    res = [\n        cVal.redF,\n        cVal.greenF,\n        cVal.blueF,\n        cVal.alphaF\n    ];\n}\n$bm_rt = res;"},"o":{"a":0,"k":100,"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, res, fillEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, paletteId, paletteId, L, L, L, pts, pt, pt, pt, pt, c, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\nif (fx('MB ConnectLayersProStyles-0034').value > 0)\n    res = 0;\nelse {\n    fillEnabB = fx('Enable Fill').value > 0;\n    if (fillEnabB) {\n        res = fx('MB ConnectLayersProStyles-0029').value;\n        opaDistB = fx('MB ConnectLayersProStyles-0030').value > 0;\n        if (opaDistB) {\n            near = fx('MB ConnectLayersProStyles-0031').value;\n            far = fx('MB ConnectLayersProStyles-0032').value;\n            reverseB = fx('MB ConnectLayersProStyles-0033').value > 0;\n            path = content('Chain 4').content('Paths').content('Path 1').content('Path').path;\n            pts = path.points();\n            d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n            if (d <= near)\n                res = 100;\n            else if (d >= far)\n                res = 0;\n            else\n                res *= ease(d, near, far, 1, 0);\n            if (reverseB)\n                res = $bm_sub(100, res);\n        }\n        paletteId = 1;\n        try {\n            paletteId = fx('Fill Palette').value;\n        } catch (e) {\n        }\n        if (paletteId == 5) {\n            L = null;\n            try {\n                L = fx('Color Layer');\n            } catch (e) {\n                L = null;\n            }\n            if (L) {\n                pts = content('Chain 4').content('Paths').content('Path 1').content('Path').path.points();\n                pt = [\n                    0,\n                    0\n                ];\n                for (var i = 0; i < pts.length; i++) {\n                    pt = $bm_sum(pt, toComp(pts[i]));\n                }\n                pt /= pts.length;\n                if (pt.length == 3)\n                    pt.pop();\n                pt = L.fromCompToSurface(pt);\n                c = L.sampleImage(pt);\n                res *= c[3];\n            } else\n                res = 0;\n        }\n    } else\n        res = 0;\n}\n$bm_rt = res;"},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10,"x":"var $bm_rt;\nvar is3dB, fx, gradEnabB, res, opaDistB, near, far, reverseB, path, pts, d, res, res, res, res, res;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\ngradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    res = fx('MB ConnectLayersProStyles-0029').value;\n    opaDistB = fx('MB ConnectLayersProStyles-0030').value > 0;\n    if (opaDistB) {\n        near = fx('MB ConnectLayersProStyles-0031').value;\n        far = fx('MB ConnectLayersProStyles-0032').value;\n        reverseB = fx('MB ConnectLayersProStyles-0033').value > 0;\n        path = content('Chain 4').content('Paths').content('Path 1').content('Path').path;\n        pts = path.points();\n        d = path.isClosed() ? length($bm_sub(pts[1], pts[0])) : length($bm_sub(pts[$bm_sub(pts.length, 1)], pts[0]));\n        if (d <= near)\n            res = 100;\n        else if (d >= far)\n            res = 0;\n        else\n            res *= ease(d, near, far, 1, 0);\n        if (reverseB)\n            res = $bm_sub(100, res);\n    }\n} else\n    res = 0;\n$bm_rt = res;"},"r":1,"bm":0,"g":{"p":2,"k":{"a":0,"k":[0,1,1,1,1,0,0,0],"ix":9}},"s":{"a":0,"k":[0,0],"ix":5,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 4').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0039').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = startPt;\n} else\n    $bm_rt = value;"},"e":{"a":0,"k":[100,0],"ix":6,"x":"var $bm_rt;\nvar is3dB, fx, path, type, gradEnabB, gradScale, curveEnabB, pts, ptsAt0, lastIdx, startPt, startPtAt0, i, startPt, startPtAt0, startPt, startPtAt0, startPt, startPtAt0, isPennerB, curviness, curveId, isPennerB, precision, lastIdx, farthestId, maxD, i, d, maxD, farthestId, endPt, endPt, midPt, u, v, startPt, endPt, v, endPt;\nis3dB = false;\nfx = is3dB ? effect('Controller Layer')(1).effect('MB ConnectLayersProStyles') : effect('MB ConnectLayersProStyles');\npath = content('Chain 4').content('Paths').content('Path 1').content('Path').path;\ntype = thisProperty.propertyGroup().type;\n$bm_rt = gradEnabB = fx('MB ConnectLayersProStyles-0034').value > 0;\nif (gradEnabB) {\n    gradScale = $bm_div(fx('MB ConnectLayersProStyles-0039').value, 100);\n    curveEnabB = fx('Curviness').value > 0;\n    pts = path.points();\n    ptsAt0 = path.points(0);\n    lastIdx = path.isClosed() ? $bm_sub(pts.length, 2) : $bm_sub(pts.length, 1);\n    startPt = [\n        0,\n        0\n    ];\n    startPtAt0 = [\n        0,\n        0\n    ];\n    if (type == 2) {\n        for (i = 0; i < pts.length; i++) {\n            startPt = $bm_sum(startPt, pts[i]);\n            startPtAt0 = $bm_sum(startPtAt0, ptsAt0[i]);\n        }\n        startPt /= pts.length;\n        startPtAt0 /= ptsAt0.length;\n    } else {\n        startPt = pts[0];\n        startPtAt0 = ptsAt0[0];\n    }\n    isPennerB = false;\n    if (curveEnabB) {\n        curviness = {\n            LINEAR: 1,\n            SEP1: 2,\n            ARC: 3,\n            STEP: 4,\n            STEP_AFTER: 5,\n            STEP_BEFORE: 6,\n            SEP2: 7,\n            AUTO_BEZIER: 8,\n            CUSTOM_TENSION: 9,\n            SEP3: 10,\n            DYNAMIC_BEZIER: 11,\n            DYNAMIC_CUSTOM_BEZIER: 12,\n            DYNAMIC_VERLET: 13,\n            SEP4: 14,\n            IN_SINE: 15,\n            OUT_SINE: 16,\n            IN_OUT_SINE: 17,\n            IN_QUADRATIC: 18,\n            OUT_QUADRATIC: 19,\n            IN_OUT_QUADRATIC: 20,\n            IN_CUBIC: 21,\n            OUT_CUBIC: 22,\n            IN_OUT_CUBIC: 23,\n            IN_QUARTIC: 24,\n            OUT_QUARTIC: 25,\n            IN_OUT_QUARTIC: 26,\n            IN_QUINTIC: 27,\n            OUT_QUINTIC: 28,\n            IN_OUT_QUINTIC: 29,\n            IN_EXPONENTIAL: 30,\n            OUT_EXPONENTIAL: 31,\n            IN_OUT_EXPONENTIAL: 32,\n            IN_CIRCULAR: 33,\n            OUT_CIRCULAR: 34,\n            IN_OUT_CIRCULAR: 35,\n            SEP11: 36,\n            IN_BACK: 37,\n            OUT_BACK: 38,\n            IN_OUT_BACK: 39,\n            IN_ELASTIC: 40,\n            OUT_ELASTIC: 41,\n            IN_OUT_ELASTIC: 42,\n            IN_BOUNCE: 43,\n            OUT_BOUNCE: 44,\n            IN_OUT_BOUNCE: 45\n        };\n        curveId = fx('Function').value;\n        isPennerB = curveId >= curviness.IN_SINE;\n        if (isPennerB) {\n            precision = Math.round(fx('Precision').value);\n            if (path.isClosed())\n                lastIdx = $bm_sub(lastIdx, precision);\n        }\n    }\n    if (type == 2 || path.isClosed()) {\n        farthestId = 0;\n        maxD = 0;\n        for (i = 0; i < ptsAt0.length; i++) {\n            d = length($bm_sub(ptsAt0[i], startPtAt0));\n            if (d > maxD) {\n                maxD = d;\n                farthestId = i;\n            }\n        }\n        endPt = pts[farthestId];\n    } else {\n        endPt = pts[lastIdx];\n    }\n    if (gradScale != 1) {\n        if (type == 1) {\n            midPt = $bm_mul(0.5, $bm_sum(startPt, endPt));\n            u = $bm_sub(startPt, midPt);\n            v = $bm_sub(endPt, midPt);\n            startPt = $bm_sum(midPt, $bm_mul(gradScale, u));\n            endPt = $bm_sum(midPt, $bm_mul(gradScale, v));\n        } else {\n            v = $bm_sub(endPt, startPt);\n            endPt = $bm_sum(startPt, $bm_mul(gradScale, v));\n        }\n    }\n    $bm_rt = endPt;\n} else\n    $bm_rt = value;"},"t":1,"nm":"Gradient Fill","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path 1","np":7,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Paths","np":6,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Chain 4","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":15,"ty":4,"nm":"Calque de forme 4","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"t":20,"s":[-18]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"t":40,"s":[-30]},{"i":{"x":[0],"y":[1]},"o":{"x":[0.572],"y":[0]},"t":61,"s":[131]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"t":95,"s":[25]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"t":270,"s":[25]},{"t":299,"s":[-18]}],"ix":10},"p":{"a":1,"k":[{"i":{"x":0.1,"y":1},"o":{"x":0.9,"y":0},"t":0,"s":[50,50,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.1,"y":1},"o":{"x":0.9,"y":0},"t":20,"s":[121,-13,0],"to":[0,0,0],"ti":[43.995,-15.314,0]},{"i":{"x":0.1,"y":1},"o":{"x":0.9,"y":0},"t":40,"s":[-96.229,152.16,0],"to":[-43.995,15.314,0],"ti":[-23.205,35.193,0]},{"i":{"x":0,"y":1},"o":{"x":0.572,"y":0},"t":61,"s":[-142.969,78.886,0],"to":[23.205,-35.193,0],"ti":[-30.995,22.981,0]},{"i":{"x":0.1,"y":0.1},"o":{"x":0.9,"y":0.9},"t":95,"s":[43,-59,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.1,"y":1},"o":{"x":0.9,"y":0},"t":270,"s":[43,-59,0],"to":[1.167,18.167,0],"ti":[0,0,0]},{"t":299,"s":[50,50,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-4.5,-101,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Calque de forme 1: Tracé 1 [1.1.0]","np":3,"mn":"ADBE Layer Control","ix":1,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":15,"ix":1}}]},{"ty":5,"nm":"Calque de forme 1: Tracé 1 [1.1.1]","np":3,"mn":"ADBE Layer Control","ix":2,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":15,"ix":1}}]},{"ty":5,"nm":"Calque de forme 1: Tracé 1 [1.1.2]","np":3,"mn":"ADBE Layer Control","ix":3,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":15,"ix":1}}]},{"ty":5,"nm":"Calque de forme 1: Tracé 1 [1.1.3]","np":3,"mn":"ADBE Layer Control","ix":4,"en":1,"ef":[{"ty":10,"nm":"Layer","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":15,"ix":1}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-139,-361],[-266,33],[125,159],[257,-232]],"c":true},"ix":2,"x":"var $bm_rt;\nvar nullLayerNames = [\n    'Calque de forme 1: Tracé 1 [1.1.0]',\n    'Calque de forme 1: Tracé 1 [1.1.1]',\n    'Calque de forme 1: Tracé 1 [1.1.2]',\n    'Calque de forme 1: Tracé 1 [1.1.3]'\n];\nvar origPath = thisProperty;\nvar origPoints = origPath.points();\nvar origInTang = origPath.inTangents();\nvar origOutTang = origPath.outTangents();\nvar getNullLayers = [];\nfor (var i = 0, il = nullLayerNames.length; i < il; i++) {\n    try {\n        getNullLayers.push(effect(nullLayerNames[i])('ADBE Layer Control-0001'));\n    } catch (err) {\n        getNullLayers.push(null);\n    }\n}\nfor (var i = 0, il = getNullLayers.length; i < il; i++) {\n    if (getNullLayers[i] != null && getNullLayers[i].index != thisLayer.index) {\n        origPoints[i] = fromCompToSurface(getNullLayers[i].toComp(getNullLayers[i].anchorPoint));\n    }\n}\n$bm_rt = createPath(origPoints, origInTang, origOutTang, origPath.isClosed());"},"nm":"Tracé 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0,0,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":20,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Contour 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Forme 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":0,"k":100,"ix":2},"o":{"a":0,"k":-2.7,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":353,"st":31,"bm":0}],"markers":[{"tm":0,"cm":"","dr":0},{"tm":95,"cm":"","dr":0},{"tm":270,"cm":"","dr":0}]}