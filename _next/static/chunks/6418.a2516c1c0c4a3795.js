"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6418],{26418:(e,t,r)=>{r.d(t,{g:()=>A});var a=r(37859),n=r(40645),i=r(92560),o=r(83331),s=r(8966),l=r(56233);let h=e=>{let t=(0,n.f)(e=>e.aspect),r=(0,o.useRef)(null),h=(0,o.useRef)({}),m=(0,n.f)(e=>e.blinder),[p,d]=(0,i.M4)(()=>({blinder:{value:.1,min:-1,max:1,step:.01,onChange:e=>{n.f.setState({blinder:e})}}}));(0,o.useEffect)(()=>{d({blinder:m})},[m]);let u=(0,o.useMemo)(()=>Array(22).fill(null).map((e,t)=>({position:[0,(0,l.ol)(t,0,21,-10,10),0]})),[]),c=(0,o.useRef)(.1);return(0,s.xQ)(()=>{c.current=(0,l.t7)(c.current,m,.03),r.current&&r.current.traverse(e=>{"isBlinder"in e&&(e.rotation.x=c.current*Math.PI/2)})}),(0,a.jsxs)("transform",{ref:r,...e,children:[u.map((e,r)=>{let{position:n}=e;return(0,a.jsxs)("mesh",{ref:e=>{e&&(h.current[r]=e)},position:n,rotation:[.1*Math.PI/2,0,0],children:[(0,a.jsx)("box",{args:[{width:10*t,height:.05,depth:.8}]}),(0,a.jsx)("normalProgram",{}),(0,a.jsx)("primitive",{object:{isBlinder:!0},dispose:null,attach:"isBlinder"})]},r)}),(0,a.jsxs)("mesh",{position:[-(10*t)/5,0,0],children:[(0,a.jsx)("box",{args:[{width:.1,height:20,depth:.5}]}),(0,a.jsx)("normalProgram",{})]}),(0,a.jsxs)("mesh",{position:[10*t/5,0,0],children:[(0,a.jsx)("box",{args:[{width:.1,height:20,depth:.5}]}),(0,a.jsx)("normalProgram",{})]})]})};var m=r(35733),p=r(42435),d=r(10502),u=r(39649),c=r(7590);let g="\n attribute vec3 position;\n  attribute vec2 uv;\n\n  uniform mat4 modelViewMatrix;\n  uniform mat4 projectionMatrix;\n\n  varying vec2 vUv;\n\n  void main() {\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      vUv = uv;\n  }\n",v="\n  precision highp float;\n\n  uniform sampler2D tAlphaMap;\n\n  varying vec2 vUv;\n\n  vec4 packRGBA (float v) {\n      vec4 pack = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);\n      pack -= pack.yzww * vec2(1.0 / 255.0, 0.0).xxxy;\n      return pack;\n  }\n\n  void main() {\n    float alpha = texture2D(tAlphaMap, vUv).g;\n    if (alpha < 0.01) discard;\n    gl_FragColor = packRGBA(gl_FragCoord.z);\n  }\n";new d.$(c.xR,{vertex:g,fragment:v,uniforms:{tAlphaMap:{value:null}}}),new d.$(c.xR,{vertex:g,fragment:"\n    precision highp float;\n\n    varying vec2 vUv;\n\n    uniform sampler2D tAlphaMap;\n\n    void main() {\n      vec4 sample = texture2D(tAlphaMap, vUv);\n      float alpha = sample.g;\n      if (alpha < 0.01) discard;\n      gl_FragColor.rgb = sample.rgb;\n      gl_FragColor.a = 1.0;\n    }\n  ",uniforms:{tAlphaMap:{value:null}}});var f=r(6384);let x="\n  attribute vec2 uv;\n  attribute vec3 position;\n\n  // Add instanced attributes just like any attribute\n  attribute vec3 leafOffset;\n  attribute vec3 random;\n\n  uniform mat4 modelViewMatrix;\n  uniform mat4 projectionMatrix;\n  uniform float uTime;\n\n  varying vec2 vUv;\n  varying vec3 vNormal;\n\n  void rotate2d(inout vec2 v, float a){\n    mat2 m = mat2(cos(a), -sin(a), sin(a),  cos(a));\n    v = m * v;\n  }\n\n  void main() {\n    vUv = uv;\n\n    // copy position so that we can modify the instances\n    vec3 pos = position;\n    vec3 off = leafOffset;\n\n    // scale first\n    pos *= 0.9 + (random.y - 0.5) * 0.2;\n\n    // rotate around y axis\n    rotate2d(pos.xz, random.x * 6.28 + 4.0 * uTime * (random.y - 0.5) * 0.1);\n\n    // rotate around z axis\n    rotate2d(pos.xy, random.x * 6.28 + 4.0 * uTime * (random.y - 0.5) * 0.1);\n\n    // rotate around x axis just to add some extra variation\n    rotate2d(pos.zy, random.z * 0.5 * sin(uTime * random.x + random.z * 3.14));\n\n    float yRange = 30.;\n    off.y = mod(off.y - uTime, yRange) - yRange * 0.5;\n\n    pos += off;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n  }\n",w=new Float32Array(15),M=new Float32Array(15);for(let e=0;e<5;e++)w.set([(Math.random()-.5)*8,(Math.random()-.5)*15,(Math.random()-.5)*3],3*e),M.set([Math.random(),Math.random(),Math.random()],3*e);let j=e=>{let t=(0,s.Cp)(e=>{let{gl:t}=e;return t}),r=(0,s.U2)(m.d,"/textures/leaf.jpg"),{mesh:n,colorProgram:i}=(0,o.useMemo)(()=>{let e=new p.J(t,{width:1,height:1,attributes:{leafOffset:{instanced:!0,size:3,data:w},random:{instanced:!0,size:3,data:M}}}),a=new d.$(t,{vertex:x,fragment:"\n        precision highp float;\n\n        varying vec2 vUv;\n\n        uniform sampler2D tAlphaMap;\n\n        void main() {\n          float alpha = texture2D(tAlphaMap, vUv).g;\n          if (alpha < 0.01) discard;\n          gl_FragColor.rgb = vec3(1.0, 0.0, 0.0);\n          gl_FragColor.a = 1.0;\n        }\n      ",uniforms:{uTime:{value:0},tAlphaMap:{value:r}},cullFace:!1}),n=new d.$(t,{vertex:x,fragment:v,uniforms:{uTime:a.uniforms.uTime,tAlphaMap:{value:r}},cullFace:!1}),i=new u.K(t,{geometry:e,program:a});return i.depthProgram=n,{leafOffset:w,mesh:i,depthProgram:n,colorProgram:a}},[t,5]);(0,s.xQ)((e,t)=>{i.uniforms.uTime.value=.001*t});let l=(0,f.G)(e=>e.shadowRenderer);return(0,o.useEffect)(()=>(l.add({mesh:n,cast:!0}),()=>{l.remove(n)}),[]),(0,a.jsx)("transform",{...e,children:(0,a.jsx)("primitive",{dispose:null,object:n})})},b=(0,o.forwardRef)((e,t)=>{let{src:r,width:n,height:i,...l}=e,h=(0,s.U2)(m.d,r),[p,d]=(0,o.useState)([h.width,h.height]);(0,s.xQ)(()=>{(p[0]!==h.width||p[1]!==h.height)&&d([h.width,h.height])});let u=(0,o.useMemo)(()=>{let e="number"==typeof n,t="number"==typeof i;if(e&&t)return{width:n,height:i};let r=p[0]/p[1];return e?{width:n,height:n/r}:t?{width:i*r,height:i}:{width:p[0],height:p[1]}},[n,i,h,p]);return(0,a.jsxs)("mesh",{ref:t,...l,children:[(0,a.jsx)("plane",{args:[u]}),(0,a.jsx)("program",{attach:"program",vertex:g,fragment:"\nprecision highp float;\n\nvarying vec2 vUv;\n\nuniform sampler2D tAlphaMap;\n\nvoid main() {\n  vec4 sample = texture2D(tAlphaMap, vUv);\n  float alpha = sample.g;\n  if (alpha < 0.9) discard;\n  gl_FragColor.rgb = vec3(1.,0.,0.);\n  gl_FragColor.a = 1.0;\n}\n",uniforms:{tAlphaMap:{value:h}}}),(0,a.jsx)("program",{attach:"depthProgram",vertex:g,fragment:v,uniforms:{tAlphaMap:{value:h}}})]})}),y=e=>{let t=(0,o.useMemo)(()=>Math.random(),[]),r=(0,o.useRef)(null);return(0,s.xQ)((e,a)=>{let{}=e;r.current&&(r.current.rotation.z=.1*Math.sin((a+31415*t)*2e-4))}),(0,a.jsx)("transform",{ref:r,...e,children:(0,a.jsx)(b,{position:[-3.5,0,0],width:7,src:"/textures/tree-3.jpg"})})},A=()=>{let e=(0,n.f)(e=>e.aspect);return(0,a.jsxs)("transform",{position:[4.9*e,5,0],rotation:[0,.5,0],children:[(0,a.jsx)(y,{rotation:[-.2,0,0],position:[2,1,3]}),(0,a.jsx)(y,{rotation:[0,0,0],scale:[1.2,1.2,1.2],position:[2,-2,6]}),(0,a.jsx)(h,{position:[-(4.9*e)+1,0,2]}),(0,a.jsx)(j,{position:[0,0,0]})]})}},6384:(e,t,r)=>{r.d(t,{G:()=>u});var a=r(66646),n=r(84912),i=r(88208),o=r(9479),s=r(7590),l=r(10502);class h{updateProjectionUniforms(){this.shadowMeshes.forEach(e=>{e.receiveShadow&&(e.program.uniforms[e.uniformProjectionName]={value:this.light.projectionMatrix},e.program.uniforms[e.uniformViewName]={value:this.light.viewMatrix},e.program.uniforms[e.uniformShadowTextureName]=this.targetUniform)})}add(e){let{mesh:t,receive:r=!0,cast:a=!0,vertex:n=m,fragment:i=p,uniformProjectionName:o="shadowProjectionMatrix",uniformViewName:s="shadowViewMatrix",uniformShadowTextureName:h="tShadow"}=e;if(r&&(t.receiveShadow=!0,t.uniformProjectionName=o,t.uniformViewName=s,t.uniformShadowTextureName=h,t.program.uniforms[o]={value:this.light.projectionMatrix},t.program.uniforms[s]={value:this.light.viewMatrix},t.program.uniforms[h]=this.targetUniform),t.castShadow=a,t.colorProgram=t.program,~this.shadowMeshes.indexOf(t)||this.shadowMeshes.push(t),!t.depthProgram){if(n===m&&i===p){t.depthProgram=this.depthProgram;return}t.depthProgram=new l.$(this.gl,{vertex:n,fragment:i,cullFace:!1})}}remove(e){let t=this.shadowMeshes.indexOf(e);t>-1&&this.shadowMeshes.splice(t,1)}setSize(e){let{width:t=1024,height:r=t}=e;this.target.setSize(t,r),this.targetUniform.value=this.target.texture,this.updateProjectionUniforms()}render(e){let{scene:t}=e;t.traverse(e=>{e.draw&&(~this.shadowMeshes.indexOf(e)&&e.castShadow?e.program=e.depthProgram:(e.isForceVisibility=e.visible,e.visible=!1))}),this.gl.renderer.render({scene:t,camera:this.light,target:this.target}),t.traverse(e=>{e.draw&&(~this.shadowMeshes.indexOf(e)&&e.castShadow?e.program=e.colorProgram:e.visible=e.isForceVisibility)})}constructor(e,{light:t=new i.V(e),width:r=1024,height:a=r,target:o,depthProgram:s}){this.gl=e,this.light=t,this.target=o||new n.A(e,{width:r,height:a}),this.targetUniform={value:this.target.texture},this.depthProgram=s||new l.$(e,{vertex:m,fragment:p,cullFace:!1}),this.shadowMeshes=[]}}let m="\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n",p="\n    precision highp float;\n\n    vec4 packRGBA (float v) {\n        vec4 pack = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);\n        pack -= pack.yzww * vec2(1.0 / 255.0, 0.0).xxxy;\n        return pack;\n    }\n\n    void main() {\n        gl_FragColor = packRGBA(gl_FragCoord.z);\n    }\n";var d=r(56233);let u=(0,o.Ue)(e=>{let t=s.xR;if(!t)return{};let r=new a.w,o=new n.A(t,{width:1024,height:1024,minFilter:t.LINEAR,magFilter:t.LINEAR}),l=new i.V(t,{top:8,bottom:-8,left:-8,right:8,near:5,far:32}),m=new h(t,{light:l,target:o}),p=new a.w,u=new n.A(t,{width:1024,height:1024,minFilter:t.LINEAR,magFilter:t.LINEAR}),c=new i.V(t,{top:5,bottom:-5,left:-5,right:5,near:1,far:32});return c.position.set(0,0,2),{renderer:s.ui,gl:t,shadowScene:r,shadowFbo:o,light:l,shadowRenderer:m,dayProgress:{current:0},shadowBurnerScene:p,shadowBurnerFbo:u,shadowBurnerCameraSize:5,shadowBurnerCamera:c,aspect:1,setAspect:t=>{let r=(0,d.ol)(t,.5,4,.3,2.2),a=(0,d.ol)(t,1,5,1,1.3);l.left=-8*r,l.right=8*r,l.top=8*a,l.bottom=-8*a,l.orthographic();let n=1024*t;u.setSize(n,1024),m.setSize({width:n,height:1024}),e({aspect:t})}}})},7590:(e,t,r)=>{r.d(t,{C2:()=>i,Lq:()=>p,Vw:()=>m,em:()=>s,r8:()=>h,ui:()=>o,xR:()=>l});var a=r(54779),n=r(88208);let i=document.createElement("canvas");i.width=0,i.height=0;let o=new a.T({antialias:!1,powerPreference:"high-performance",canvas:i,width:i.width,height:i.height}),s={x:0,y:0,get width(){return i.width*o.dpr},get height(){return i.height*o.dpr}};o.gl.scissor(s.x,s.y,s.width,s.height),o.gl.enable(o.gl.SCISSOR_TEST);let l=o.gl;l.clearColor(250/255,245/255,242/255,1);let h=new n.V(l,{fov:75,aspect:i.width/i.height,far:1e3}),m=new n.V(l,{fov:75,aspect:i.width/i.height,far:2e3}),p=700;m.position.set(0,0,p)}}]);